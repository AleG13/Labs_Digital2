

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 02 13:59:13 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 04/07/2022 GMT
    36                           ; 
    37                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0088                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008F                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     0105                     	;# 
   133     0107                     	;# 
   134     0108                     	;# 
   135     0109                     	;# 
   136     010C                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     0185                     	;# 
   142     0187                     	;# 
   143     0188                     	;# 
   144     0189                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0008                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     000E                     	;# 
   162     000E                     	;# 
   163     000F                     	;# 
   164     0010                     	;# 
   165     0011                     	;# 
   166     0012                     	;# 
   167     0013                     	;# 
   168     0014                     	;# 
   169     0015                     	;# 
   170     0015                     	;# 
   171     0016                     	;# 
   172     0017                     	;# 
   173     0018                     	;# 
   174     0019                     	;# 
   175     001A                     	;# 
   176     001B                     	;# 
   177     001B                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     0088                     	;# 
   187     0089                     	;# 
   188     008C                     	;# 
   189     008D                     	;# 
   190     008E                     	;# 
   191     008F                     	;# 
   192     0090                     	;# 
   193     0091                     	;# 
   194     0092                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0094                     	;# 
   199     0095                     	;# 
   200     0096                     	;# 
   201     0097                     	;# 
   202     0098                     	;# 
   203     0099                     	;# 
   204     009A                     	;# 
   205     009B                     	;# 
   206     009C                     	;# 
   207     009D                     	;# 
   208     009E                     	;# 
   209     009F                     	;# 
   210     0105                     	;# 
   211     0107                     	;# 
   212     0108                     	;# 
   213     0109                     	;# 
   214     010C                     	;# 
   215     010C                     	;# 
   216     010D                     	;# 
   217     010E                     	;# 
   218     010F                     	;# 
   219     0185                     	;# 
   220     0187                     	;# 
   221     0188                     	;# 
   222     0189                     	;# 
   223     018C                     	;# 
   224     018D                     	;# 
   225     0000                     	;# 
   226     0001                     	;# 
   227     0002                     	;# 
   228     0003                     	;# 
   229     0004                     	;# 
   230     0005                     	;# 
   231     0006                     	;# 
   232     0007                     	;# 
   233     0008                     	;# 
   234     0009                     	;# 
   235     000A                     	;# 
   236     000B                     	;# 
   237     000C                     	;# 
   238     000D                     	;# 
   239     000E                     	;# 
   240     000E                     	;# 
   241     000F                     	;# 
   242     0010                     	;# 
   243     0011                     	;# 
   244     0012                     	;# 
   245     0013                     	;# 
   246     0014                     	;# 
   247     0015                     	;# 
   248     0015                     	;# 
   249     0016                     	;# 
   250     0017                     	;# 
   251     0018                     	;# 
   252     0019                     	;# 
   253     001A                     	;# 
   254     001B                     	;# 
   255     001B                     	;# 
   256     001C                     	;# 
   257     001D                     	;# 
   258     001E                     	;# 
   259     001F                     	;# 
   260     0081                     	;# 
   261     0085                     	;# 
   262     0086                     	;# 
   263     0087                     	;# 
   264     0088                     	;# 
   265     0089                     	;# 
   266     008C                     	;# 
   267     008D                     	;# 
   268     008E                     	;# 
   269     008F                     	;# 
   270     0090                     	;# 
   271     0091                     	;# 
   272     0092                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0094                     	;# 
   277     0095                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     0105                     	;# 
   289     0107                     	;# 
   290     0108                     	;# 
   291     0109                     	;# 
   292     010C                     	;# 
   293     010C                     	;# 
   294     010D                     	;# 
   295     010E                     	;# 
   296     010F                     	;# 
   297     0185                     	;# 
   298     0187                     	;# 
   299     0188                     	;# 
   300     0189                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     008F                     	;# 
   348     0090                     	;# 
   349     0091                     	;# 
   350     0092                     	;# 
   351     0093                     	;# 
   352     0093                     	;# 
   353     0093                     	;# 
   354     0094                     	;# 
   355     0095                     	;# 
   356     0096                     	;# 
   357     0097                     	;# 
   358     0098                     	;# 
   359     0099                     	;# 
   360     009A                     	;# 
   361     009B                     	;# 
   362     009C                     	;# 
   363     009D                     	;# 
   364     009E                     	;# 
   365     009F                     	;# 
   366     0105                     	;# 
   367     0107                     	;# 
   368     0108                     	;# 
   369     0109                     	;# 
   370     010C                     	;# 
   371     010C                     	;# 
   372     010D                     	;# 
   373     010E                     	;# 
   374     010F                     	;# 
   375     0185                     	;# 
   376     0187                     	;# 
   377     0188                     	;# 
   378     0189                     	;# 
   379     018C                     	;# 
   380     018D                     	;# 
   381                           
   382                           	psect	strings
   383     0003                     __pstrings:
   384     0003                     stringtab:
   385     0003                     __stringtab:
   386                           
   387                           ;	String table - string pointers are 1 byte each
   388     0003  1BFF               	btfsc	btemp+1,7
   389     0004  280D               	ljmp	stringcode
   390     0005  1383               	bcf	3,7
   391     0006  187F               	btfsc	btemp+1,0
   392     0007  1783               	bsf	3,7
   393     0008  0800               	movf	0,w
   394     0009  0A84               	incf	4,f
   395     000A  1903               	skipnz
   396     000B  0AFF               	incf	btemp+1,f
   397     000C  0008               	return
   398     000D                     stringcode:
   399     000D                     stringdir:
   400     000D  3000               	movlw	high stringdir
   401     000E  008A               	movwf	10
   402     000F  0804               	movf	4,w
   403     0010  0A84               	incf	4,f
   404     0011  0782               	addwf	2,f
   405     0012                     __stringbase:
   406     0012  3400               	retlw	0
   407     0013                     __end_of__stringtab:
   408     0013                     _dpowers:
   409     0013  3401               	retlw	1
   410     0014  3400               	retlw	0
   411     0015  340A               	retlw	10
   412     0016  3400               	retlw	0
   413     0017  3464               	retlw	100
   414     0018  3400               	retlw	0
   415     0019  34E8               	retlw	232
   416     001A  3403               	retlw	3
   417     001B  3410               	retlw	16
   418     001C  3427               	retlw	39
   419     001D                     __end_of_dpowers:
   420     0013                     _SSPBUF	set	19
   421     0014                     _SSPCON	set	20
   422     0008                     _PORTD	set	8
   423     0006                     _PORTB	set	6
   424     0007                     _PORTCbits	set	7
   425     003F                     _RC7	set	63
   426     003E                     _RC6	set	62
   427     0094                     _SSPSTAT	set	148
   428     0086                     _TRISB	set	134
   429     0088                     _TRISD	set	136
   430     0087                     _TRISCbits	set	135
   431     008F                     _OSCCONbits	set	143
   432     0094                     _SSPSTATbits	set	148
   433     043B                     _TRISC3	set	1083
   434     043D                     _TRISC5	set	1085
   435     043A                     _TRISC2	set	1082
   436     0189                     _ANSELH	set	393
   437     0188                     _ANSEL	set	392
   438     001D                     STR_10:
   439     001D  3420               	retlw	32	;' '
   440     001E  3453               	retlw	83	;'S'
   441     001F  3431               	retlw	49	;'1'
   442     0020  3420               	retlw	32	;' '
   443     0021  3420               	retlw	32	;' '
   444     0022  3420               	retlw	32	;' '
   445     0023  3453               	retlw	83	;'S'
   446     0024  3432               	retlw	50	;'2'
   447     0025  3420               	retlw	32	;' '
   448     0026  3420               	retlw	32	;' '
   449     0027  3420               	retlw	32	;' '
   450     0028  3453               	retlw	83	;'S'
   451     0029  3433               	retlw	51	;'3'
   452     002A  3400               	retlw	0
   453     002B                     STR_1:
   454     002B  3425               	retlw	37	;'%'
   455     002C  3464               	retlw	100	;'d'
   456     002D  3400               	retlw	0
   457     002B                     
   458                           	psect	cinit
   459     07F3                     start_initialization:	
   460                           ; #config settings
   461                           
   462     07F3                     __initialization:
   463                           
   464                           ; Clear objects allocated to BANK0
   465     07F3  1383               	bcf	3,7	;select IRP bank0
   466     07F4  3020               	movlw	low __pbssBANK0
   467     07F5  0084               	movwf	4
   468     07F6  3047               	movlw	low (__pbssBANK0+39)
   469     07F7  120A  118A  21B1  120A  118A  	fcall	clear_ram0
   470     07FC                     end_of_initialization:	
   471                           ;End of C runtime variable initialization code
   472                           
   473     07FC                     __end_of__initialization:
   474     07FC  0183               	clrf	3
   475     07FD  120A  118A  2E29   	ljmp	_main	;jump to C main() function
   476                           
   477                           	psect	bssBANK0
   478     0020                     __pbssBANK0:
   479     0020                     _vol1_str:
   480     0020                     	ds	5
   481     0025                     _bandera:
   482     0025                     	ds	2
   483     0027                     _vol2:
   484     0027                     	ds	2
   485     0029                     _vol1:
   486     0029                     	ds	2
   487     002B                     _temp:
   488     002B                     	ds	1
   489     002C                     _contadore2:
   490     002C                     	ds	1
   491     002D                     _contadore1:
   492     002D                     	ds	1
   493     002E                     _uni3:
   494     002E                     	ds	1
   495     002F                     _dec3:
   496     002F                     	ds	1
   497     0030                     _cen3:
   498     0030                     	ds	1
   499     0031                     _uni2:
   500     0031                     	ds	1
   501     0032                     _dec2:
   502     0032                     	ds	1
   503     0033                     _cen2:
   504     0033                     	ds	1
   505     0034                     _uni:
   506     0034                     	ds	1
   507     0035                     _dec:
   508     0035                     	ds	1
   509     0036                     _cen:
   510     0036                     	ds	1
   511     0037                     _val_pot:
   512     0037                     	ds	1
   513     0038                     _buffer3:
   514     0038                     	ds	5
   515     003D                     _buffer2:
   516     003D                     	ds	5
   517     0042                     _buffer:
   518     0042                     	ds	5
   519                           
   520                           	psect	clrtext
   521     01B1                     clear_ram0:	
   522                           ;	Called with FSR containing the base address, and
   523                           ;	W with the last address+1
   524                           
   525     01B1  0064               	clrwdt	;clear the watchdog before getting into this loop
   526     01B2                     clrloop0:
   527     01B2  0180               	clrf	0	;clear RAM location pointed to by FSR
   528     01B3  0A84               	incf	4,f	;increment pointer
   529     01B4  0604               	xorwf	4,w	;XOR with final address
   530     01B5  1903               	btfsc	3,2	;have we reached the end yet?
   531     01B6  3400               	retlw	0	;all done for this memory range, return
   532     01B7  0604               	xorwf	4,w	;XOR again to restore value
   533     01B8  29B2               	goto	clrloop0	;do the next byte
   534                           
   535                           	psect	cstackCOMMON
   536     0070                     __pcstackCOMMON:
   537     0070                     ?_setup:
   538     0070                     ?_spiWrite:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0070                     ??_spiWrite:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     ?_spiRead:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0070                     ??_spiRead:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ?_spiInit:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ?_Lcd_Init:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_Lcd_Clear:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?_Division:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_Division2:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_Division3:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_main:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_spiReceiveWait:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ??_spiReceiveWait:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?_Lcd_Cmd:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ??_Lcd_Cmd:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?_Lcd_Write:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ??_Lcd_Write:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     ?___awmod:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ?___lwdiv:	
   593                           ; 2 bytes @ 0x0
   594                           
   595     0070                     spiInit@sDataSample:	
   596                           ; 2 bytes @ 0x0
   597                           
   598     0070                     spiWrite@dat:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ___awmod@divisor:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ___lwdiv@divisor:	
   605                           ; 2 bytes @ 0x0
   606                           
   607                           
   608                           ; 2 bytes @ 0x0
   609     0070                     	ds	1
   610     0071                     spiInit@sClockIdle:
   611     0071                     Lcd_Write@a:	
   612                           ; 1 bytes @ 0x1
   613                           
   614                           
   615                           ; 1 bytes @ 0x1
   616     0071                     	ds	1
   617     0072                     ?_Lcd_Write_Str:
   618     0072                     spiInit@sTransmitEdge:	
   619                           ; 1 bytes @ 0x2
   620                           
   621     0072                     Lcd_Cmd@a:	
   622                           ; 1 bytes @ 0x2
   623                           
   624     0072                     Lcd_Write_Str@a:	
   625                           ; 1 bytes @ 0x2
   626                           
   627     0072                     ___awmod@dividend:	
   628                           ; 2 bytes @ 0x2
   629                           
   630     0072                     ___lwdiv@dividend:	
   631                           ; 2 bytes @ 0x2
   632                           
   633                           
   634                           ; 2 bytes @ 0x2
   635     0072                     	ds	1
   636     0073                     ?_Lcd_Set:
   637     0073                     ??_spiInit:	
   638                           ; 1 bytes @ 0x3
   639                           
   640     0073                     ??_Lcd_Init:	
   641                           ; 1 bytes @ 0x3
   642                           
   643     0073                     ??_Lcd_Clear:	
   644                           ; 1 bytes @ 0x3
   645                           
   646     0073                     spiInit@sType:	
   647                           ; 1 bytes @ 0x3
   648                           
   649     0073                     Lcd_Set@b:	
   650                           ; 1 bytes @ 0x3
   651                           
   652                           
   653                           ; 1 bytes @ 0x3
   654     0073                     	ds	1
   655     0074                     ??_Lcd_Set:
   656     0074                     ??_Lcd_Write_Str:	
   657                           ; 1 bytes @ 0x4
   658                           
   659     0074                     ??___awmod:	
   660                           ; 1 bytes @ 0x4
   661                           
   662     0074                     ??___lwdiv:	
   663                           ; 1 bytes @ 0x4
   664                           
   665     0074                     Lcd_Set@a:	
   666                           ; 1 bytes @ 0x4
   667                           
   668                           
   669                           ; 1 bytes @ 0x4
   670     0074                     	ds	1
   671     0075                     ___awmod@counter:
   672     0075                     ___lwdiv@quotient:	
   673                           ; 1 bytes @ 0x5
   674                           
   675                           
   676                           ; 2 bytes @ 0x5
   677     0075                     	ds	1
   678     0076                     ___awmod@sign:
   679                           
   680                           ; 1 bytes @ 0x6
   681     0076                     	ds	1
   682     0077                     ?___awdiv:
   683     0077                     ___lwdiv@counter:	
   684                           ; 2 bytes @ 0x7
   685                           
   686     0077                     Lcd_Write_Str@i:	
   687                           ; 1 bytes @ 0x7
   688                           
   689     0077                     ___awdiv@divisor:	
   690                           ; 2 bytes @ 0x7
   691                           
   692                           
   693                           ; 2 bytes @ 0x7
   694     0077                     	ds	1
   695     0078                     ?___lwmod:
   696     0078                     ___lwmod@divisor:	
   697                           ; 2 bytes @ 0x8
   698                           
   699                           
   700                           ; 2 bytes @ 0x8
   701     0078                     	ds	1
   702     0079                     ??_setup:
   703     0079                     ___awdiv@dividend:	
   704                           ; 1 bytes @ 0x9
   705                           
   706                           
   707                           ; 2 bytes @ 0x9
   708     0079                     	ds	1
   709     007A                     ___lwmod@dividend:
   710                           
   711                           ; 2 bytes @ 0xA
   712     007A                     	ds	1
   713     007B                     ??___awdiv:
   714                           
   715                           ; 1 bytes @ 0xB
   716     007B                     	ds	1
   717     007C                     ??_Division:
   718     007C                     ??_Division2:	
   719                           ; 1 bytes @ 0xC
   720                           
   721     007C                     ??_Division3:	
   722                           ; 1 bytes @ 0xC
   723                           
   724     007C                     ??___lwmod:	
   725                           ; 1 bytes @ 0xC
   726                           
   727                           
   728                           ; 1 bytes @ 0xC
   729     007C                     	ds	1
   730     007D                     ___lwmod@counter:
   731                           
   732                           ; 1 bytes @ 0xD
   733     007D                     	ds	1
   734                           
   735                           	psect	cstackBANK0
   736     0047                     __pcstackBANK0:
   737     0047                     ?_sprintf:
   738     0047                     sprintf@f:	
   739                           ; 2 bytes @ 0x0
   740                           
   741     0047                     ___awdiv@counter:	
   742                           ; 1 bytes @ 0x0
   743                           
   744                           
   745                           ; 1 bytes @ 0x0
   746     0047                     	ds	1
   747     0048                     ___awdiv@sign:
   748                           
   749                           ; 1 bytes @ 0x1
   750     0048                     	ds	1
   751     0049                     ___awdiv@quotient:
   752                           
   753                           ; 2 bytes @ 0x2
   754     0049                     	ds	1
   755     004A                     ??_sprintf:
   756                           
   757                           ; 1 bytes @ 0x3
   758     004A                     	ds	1
   759     004B                     _Division$1077:
   760     004B                     _Division2$1078:	
   761                           ; 2 bytes @ 0x4
   762                           
   763     004B                     _Division3$1079:	
   764                           ; 2 bytes @ 0x4
   765                           
   766                           
   767                           ; 2 bytes @ 0x4
   768     004B                     	ds	2
   769     004D                     Division@y:
   770     004D                     Division2@y:	
   771                           ; 1 bytes @ 0x6
   772                           
   773     004D                     Division3@y:	
   774                           ; 1 bytes @ 0x6
   775                           
   776     004D                     sprintf@ap:	
   777                           ; 1 bytes @ 0x6
   778                           
   779                           
   780                           ; 1 bytes @ 0x6
   781     004D                     	ds	1
   782     004E                     sprintf@flag:
   783                           
   784                           ; 1 bytes @ 0x7
   785     004E                     	ds	1
   786     004F                     sprintf@prec:
   787                           
   788                           ; 1 bytes @ 0x8
   789     004F                     	ds	1
   790     0050                     sprintf@val:
   791                           
   792                           ; 2 bytes @ 0x9
   793     0050                     	ds	2
   794     0052                     sprintf@sp:
   795                           
   796                           ; 1 bytes @ 0xB
   797     0052                     	ds	1
   798     0053                     sprintf@c:
   799                           
   800                           ; 1 bytes @ 0xC
   801     0053                     	ds	1
   802     0054                     ??_main:
   803                           
   804                           ; 1 bytes @ 0xD
   805     0054                     	ds	2
   806                           
   807                           	psect	maintext
   808     0629                     __pmaintext:	
   809 ;;
   810 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   811 ;;
   812 ;; *************** function _main *****************
   813 ;; Defined at:
   814 ;;		line 66 in file "main.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : B00/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0
   830 ;;      Temps:          0       2       0       0       0
   831 ;;      Totals:         0       2       0       0       0
   832 ;;Total ram usage:        2 bytes
   833 ;; Hardware stack levels required when called: 3
   834 ;; This function calls:
   835 ;;		_Division
   836 ;;		_Division2
   837 ;;		_Division3
   838 ;;		_Lcd_Set
   839 ;;		_Lcd_Write_Str
   840 ;;		_setup
   841 ;;		_spiRead
   842 ;;		_spiWrite
   843 ;;		_sprintf
   844 ;; This function is called by:
   845 ;;		Startup code after reset
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849     0629                     _main:	
   850                           ;psect for function _main
   851                           
   852     0629                     l1545:	
   853                           ;incstack = 0
   854                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   855                           
   856                           
   857                           ;main.c: 67:     setup();
   858     0629  120A  118A  2261  120A  118A  	fcall	_setup
   859     062E                     l1547:
   860                           
   861                           ;main.c: 73:        PORTCbits.RC2 = 0;
   862     062E  1283               	bcf	3,5	;RP0=0, select bank0
   863     062F  1303               	bcf	3,6	;RP1=0, select bank0
   864     0630  1107               	bcf	7,2	;volatile
   865     0631                     l1549:
   866                           
   867                           ;main.c: 74:        _delay((unsigned long)((1)*(8000000/4000.0)));
   868     0631  3003               	movlw	3
   869     0632  1283               	bcf	3,5	;RP0=0, select bank0
   870     0633  1303               	bcf	3,6	;RP1=0, select bank0
   871     0634  00D5               	movwf	??_main+1
   872     0635  3097               	movlw	151
   873     0636  00D4               	movwf	??_main
   874     0637                     u997:
   875     0637  0BD4               	decfsz	??_main,f
   876     0638  2E37               	goto	u997
   877     0639  0BD5               	decfsz	??_main+1,f
   878     063A  2E37               	goto	u997
   879     063B                     l1551:
   880                           
   881                           ;main.c: 75:        spiWrite(PORTB);
   882     063B  1283               	bcf	3,5	;RP0=0, select bank0
   883     063C  1303               	bcf	3,6	;RP1=0, select bank0
   884     063D  0806               	movf	6,w	;volatile
   885     063E  120A  118A  21A4  120A  118A  	fcall	_spiWrite
   886     0643                     l97:	
   887                           ;main.c: 76:        while(!SSPSTATbits.BF);
   888                           
   889     0643  1683               	bsf	3,5	;RP0=1, select bank1
   890     0644  1303               	bcf	3,6	;RP1=0, select bank1
   891     0645  1C14               	btfss	20,0	;volatile
   892     0646  2E48               	goto	u961
   893     0647  2E49               	goto	u960
   894     0648                     u961:
   895     0648  2E43               	goto	l97
   896     0649                     u960:
   897     0649                     l1553:
   898                           
   899                           ;main.c: 77:        contadore1 = spiRead();
   900     0649  120A  118A  21B9  120A  118A  	fcall	_spiRead
   901     064E  1283               	bcf	3,5	;RP0=0, select bank0
   902     064F  1303               	bcf	3,6	;RP1=0, select bank0
   903     0650  00AD               	movwf	_contadore1
   904     0651                     l1555:
   905                           
   906                           ;main.c: 78:        _delay((unsigned long)((1)*(8000000/4000.0)));
   907     0651  3003               	movlw	3
   908     0652  1283               	bcf	3,5	;RP0=0, select bank0
   909     0653  1303               	bcf	3,6	;RP1=0, select bank0
   910     0654  00D5               	movwf	??_main+1
   911     0655  3097               	movlw	151
   912     0656  00D4               	movwf	??_main
   913     0657                     u1007:
   914     0657  0BD4               	decfsz	??_main,f
   915     0658  2E57               	goto	u1007
   916     0659  0BD5               	decfsz	??_main+1,f
   917     065A  2E57               	goto	u1007
   918     065B                     l1557:
   919                           
   920                           ;main.c: 79:        PORTCbits.RC2 = 1;
   921     065B  1283               	bcf	3,5	;RP0=0, select bank0
   922     065C  1303               	bcf	3,6	;RP1=0, select bank0
   923     065D  1507               	bsf	7,2	;volatile
   924     065E                     l1559:
   925                           
   926                           ;main.c: 80:        _delay((unsigned long)((25)*(8000000/4000.0)));
   927     065E  3041               	movlw	65
   928     065F  1283               	bcf	3,5	;RP0=0, select bank0
   929     0660  1303               	bcf	3,6	;RP1=0, select bank0
   930     0661  00D5               	movwf	??_main+1
   931     0662  30ED               	movlw	237
   932     0663  00D4               	movwf	??_main
   933     0664                     u1017:
   934     0664  0BD4               	decfsz	??_main,f
   935     0665  2E64               	goto	u1017
   936     0666  0BD5               	decfsz	??_main+1,f
   937     0667  2E64               	goto	u1017
   938     0668  2E69               	nop2
   939     0669                     l1561:
   940                           
   941                           ;main.c: 82:        PORTCbits.RC1 = 0;
   942     0669  1283               	bcf	3,5	;RP0=0, select bank0
   943     066A  1303               	bcf	3,6	;RP1=0, select bank0
   944     066B  1087               	bcf	7,1	;volatile
   945     066C                     l1563:
   946                           
   947                           ;main.c: 83:        _delay((unsigned long)((1)*(8000000/4000.0)));
   948     066C  3003               	movlw	3
   949     066D  1283               	bcf	3,5	;RP0=0, select bank0
   950     066E  1303               	bcf	3,6	;RP1=0, select bank0
   951     066F  00D5               	movwf	??_main+1
   952     0670  3097               	movlw	151
   953     0671  00D4               	movwf	??_main
   954     0672                     u1027:
   955     0672  0BD4               	decfsz	??_main,f
   956     0673  2E72               	goto	u1027
   957     0674  0BD5               	decfsz	??_main+1,f
   958     0675  2E72               	goto	u1027
   959     0676                     l1565:
   960                           
   961                           ;main.c: 84:        spiWrite(0);
   962     0676  3000               	movlw	0
   963     0677  120A  118A  21A4  120A  118A  	fcall	_spiWrite
   964     067C                     l100:	
   965                           ;main.c: 85:        while(!SSPSTATbits.BF);
   966                           
   967     067C  1683               	bsf	3,5	;RP0=1, select bank1
   968     067D  1303               	bcf	3,6	;RP1=0, select bank1
   969     067E  1C14               	btfss	20,0	;volatile
   970     067F  2E81               	goto	u971
   971     0680  2E82               	goto	u970
   972     0681                     u971:
   973     0681  2E7C               	goto	l100
   974     0682                     u970:
   975     0682                     l1567:
   976                           
   977                           ;main.c: 86:        contadore2 = spiRead();
   978     0682  120A  118A  21B9  120A  118A  	fcall	_spiRead
   979     0687  1283               	bcf	3,5	;RP0=0, select bank0
   980     0688  1303               	bcf	3,6	;RP1=0, select bank0
   981     0689  00AC               	movwf	_contadore2
   982     068A                     l1569:
   983                           
   984                           ;main.c: 87:        _delay((unsigned long)((1)*(8000000/4000.0)));
   985     068A  3003               	movlw	3
   986     068B  1283               	bcf	3,5	;RP0=0, select bank0
   987     068C  1303               	bcf	3,6	;RP1=0, select bank0
   988     068D  00D5               	movwf	??_main+1
   989     068E  3097               	movlw	151
   990     068F  00D4               	movwf	??_main
   991     0690                     u1037:
   992     0690  0BD4               	decfsz	??_main,f
   993     0691  2E90               	goto	u1037
   994     0692  0BD5               	decfsz	??_main+1,f
   995     0693  2E90               	goto	u1037
   996     0694                     l1571:
   997                           
   998                           ;main.c: 88:        spiWrite(1);
   999     0694  3001               	movlw	1
  1000     0695  120A  118A  21A4  120A  118A  	fcall	_spiWrite
  1001     069A                     l103:	
  1002                           ;main.c: 89:        while(!SSPSTATbits.BF);
  1003                           
  1004     069A  1683               	bsf	3,5	;RP0=1, select bank1
  1005     069B  1303               	bcf	3,6	;RP1=0, select bank1
  1006     069C  1C14               	btfss	20,0	;volatile
  1007     069D  2E9F               	goto	u981
  1008     069E  2EA0               	goto	u980
  1009     069F                     u981:
  1010     069F  2E9A               	goto	l103
  1011     06A0                     u980:
  1012     06A0                     l1573:
  1013                           
  1014                           ;main.c: 90:        temp = spiRead();
  1015     06A0  120A  118A  21B9  120A  118A  	fcall	_spiRead
  1016     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1017     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1018     06A7  00AB               	movwf	_temp
  1019     06A8                     l1575:
  1020                           
  1021                           ;main.c: 91:        PORTCbits.RC1 = 1;
  1022     06A8  1487               	bsf	7,1	;volatile
  1023     06A9                     l1577:
  1024                           
  1025                           ;main.c: 92:        _delay((unsigned long)((25)*(8000000/4000.0)));
  1026     06A9  3041               	movlw	65
  1027     06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1028     06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1029     06AC  00D5               	movwf	??_main+1
  1030     06AD  30ED               	movlw	237
  1031     06AE  00D4               	movwf	??_main
  1032     06AF                     u1047:
  1033     06AF  0BD4               	decfsz	??_main,f
  1034     06B0  2EAF               	goto	u1047
  1035     06B1  0BD5               	decfsz	??_main+1,f
  1036     06B2  2EAF               	goto	u1047
  1037     06B3  2EB4               	nop2
  1038     06B4                     l1579:
  1039                           
  1040                           ;main.c: 96:         Division(contadore1);
  1041     06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1042     06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1043     06B6  082D               	movf	_contadore1,w
  1044     06B7  120A  118A  23C6  120A  118A  	fcall	_Division
  1045     06BC                     l1581:
  1046                           
  1047                           ;main.c: 97:         Lcd_Set(2, 2);
  1048     06BC  3002               	movlw	2
  1049     06BD  00F3               	movwf	Lcd_Set@b
  1050     06BE  3002               	movlw	2
  1051     06BF  120A  118A  2209  120A  118A  	fcall	_Lcd_Set
  1052     06C4                     l1583:
  1053                           
  1054                           ;main.c: 98:         sprintf(buffer, "%d", cen);
  1055     06C4  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1056     06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1057     06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1058     06C7  00C7               	movwf	sprintf@f
  1059     06C8  0836               	movf	_cen,w
  1060     06C9  00D4               	movwf	??_main
  1061     06CA  01D5               	clrf	??_main+1
  1062     06CB  0854               	movf	??_main,w
  1063     06CC  00C8               	movwf	?_sprintf+1
  1064     06CD  0855               	movf	??_main+1,w
  1065     06CE  00C9               	movwf	?_sprintf+2
  1066     06CF  3042               	movlw	(low (_buffer| 0))& (0+255)
  1067     06D0  120A  118A  254F  120A  118A  	fcall	_sprintf
  1068     06D5                     l1585:
  1069                           
  1070                           ;main.c: 99:         Lcd_Write_Str(buffer);
  1071     06D5  3042               	movlw	(low (_buffer| 0))& (0+255)
  1072     06D6  00F2               	movwf	Lcd_Write_Str@a
  1073     06D7  3000               	movlw	0
  1074     06D8  00F3               	movwf	Lcd_Write_Str@a+1
  1075     06D9  120A  118A  229D  120A  118A  	fcall	_Lcd_Write_Str
  1076     06DE                     l1587:
  1077                           
  1078                           ;main.c: 100:         sprintf(buffer, "%d", dec);
  1079     06DE  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1080     06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1081     06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1082     06E1  00C7               	movwf	sprintf@f
  1083     06E2  0835               	movf	_dec,w
  1084     06E3  00D4               	movwf	??_main
  1085     06E4  01D5               	clrf	??_main+1
  1086     06E5  0854               	movf	??_main,w
  1087     06E6  00C8               	movwf	?_sprintf+1
  1088     06E7  0855               	movf	??_main+1,w
  1089     06E8  00C9               	movwf	?_sprintf+2
  1090     06E9  3042               	movlw	(low (_buffer| 0))& (0+255)
  1091     06EA  120A  118A  254F  120A  118A  	fcall	_sprintf
  1092     06EF                     l1589:
  1093                           
  1094                           ;main.c: 101:         Lcd_Write_Str(buffer);
  1095     06EF  3042               	movlw	(low (_buffer| 0))& (0+255)
  1096     06F0  00F2               	movwf	Lcd_Write_Str@a
  1097     06F1  3000               	movlw	0
  1098     06F2  00F3               	movwf	Lcd_Write_Str@a+1
  1099     06F3  120A  118A  229D  120A  118A  	fcall	_Lcd_Write_Str
  1100     06F8                     l1591:
  1101                           
  1102                           ;main.c: 102:         sprintf(buffer, "%d", uni);
  1103     06F8  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1104     06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1105     06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1106     06FB  00C7               	movwf	sprintf@f
  1107     06FC  0834               	movf	_uni,w
  1108     06FD  00D4               	movwf	??_main
  1109     06FE  01D5               	clrf	??_main+1
  1110     06FF  0854               	movf	??_main,w
  1111     0700  00C8               	movwf	?_sprintf+1
  1112     0701  0855               	movf	??_main+1,w
  1113     0702  00C9               	movwf	?_sprintf+2
  1114     0703  3042               	movlw	(low (_buffer| 0))& (0+255)
  1115     0704  120A  118A  254F  120A  118A  	fcall	_sprintf
  1116     0709                     l1593:
  1117                           
  1118                           ;main.c: 103:         Lcd_Write_Str(buffer);
  1119     0709  3042               	movlw	(low (_buffer| 0))& (0+255)
  1120     070A  00F2               	movwf	Lcd_Write_Str@a
  1121     070B  3000               	movlw	0
  1122     070C  00F3               	movwf	Lcd_Write_Str@a+1
  1123     070D  120A  118A  229D  120A  118A  	fcall	_Lcd_Write_Str
  1124     0712                     l1595:
  1125                           
  1126                           ;main.c: 104:          _delay((unsigned long)((10)*(8000000/4000.0)));
  1127     0712  301A               	movlw	26
  1128     0713  1283               	bcf	3,5	;RP0=0, select bank0
  1129     0714  1303               	bcf	3,6	;RP1=0, select bank0
  1130     0715  00D5               	movwf	??_main+1
  1131     0716  30F7               	movlw	247
  1132     0717  00D4               	movwf	??_main
  1133     0718                     u1057:
  1134     0718  0BD4               	decfsz	??_main,f
  1135     0719  2F18               	goto	u1057
  1136     071A  0BD5               	decfsz	??_main+1,f
  1137     071B  2F18               	goto	u1057
  1138     071C  2F1D               	nop2
  1139                           
  1140                           ;main.c: 106:         Division2(contadore2);
  1141     071D  1283               	bcf	3,5	;RP0=0, select bank0
  1142     071E  1303               	bcf	3,6	;RP1=0, select bank0
  1143     071F  082C               	movf	_contadore2,w
  1144     0720  120A  118A  2426  120A  118A  	fcall	_Division2
  1145                           
  1146                           ;main.c: 107:         Lcd_Set(2, 7);
  1147     0725  3007               	movlw	7
  1148     0726  00F3               	movwf	Lcd_Set@b
  1149     0727  3002               	movlw	2
  1150     0728  120A  118A  2209  120A  118A  	fcall	_Lcd_Set
  1151     072D                     l1597:
  1152                           
  1153                           ;main.c: 108:         sprintf(buffer2, "%d", cen2);
  1154     072D  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1155     072E  1283               	bcf	3,5	;RP0=0, select bank0
  1156     072F  1303               	bcf	3,6	;RP1=0, select bank0
  1157     0730  00C7               	movwf	sprintf@f
  1158     0731  0833               	movf	_cen2,w
  1159     0732  00D4               	movwf	??_main
  1160     0733  01D5               	clrf	??_main+1
  1161     0734  0854               	movf	??_main,w
  1162     0735  00C8               	movwf	?_sprintf+1
  1163     0736  0855               	movf	??_main+1,w
  1164     0737  00C9               	movwf	?_sprintf+2
  1165     0738  303D               	movlw	(low (_buffer2| 0))& (0+255)
  1166     0739  120A  118A  254F  120A  118A  	fcall	_sprintf
  1167     073E                     l1599:
  1168                           
  1169                           ;main.c: 109:         Lcd_Write_Str(buffer2);
  1170     073E  303D               	movlw	(low (_buffer2| 0))& (0+255)
  1171     073F  00F2               	movwf	Lcd_Write_Str@a
  1172     0740  3000               	movlw	0
  1173     0741  00F3               	movwf	Lcd_Write_Str@a+1
  1174     0742  120A  118A  229D  120A  118A  	fcall	_Lcd_Write_Str
  1175     0747                     l1601:
  1176                           
  1177                           ;main.c: 110:         sprintf(buffer2, "%d", dec2);
  1178     0747  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1179     0748  1283               	bcf	3,5	;RP0=0, select bank0
  1180     0749  1303               	bcf	3,6	;RP1=0, select bank0
  1181     074A  00C7               	movwf	sprintf@f
  1182     074B  0832               	movf	_dec2,w
  1183     074C  00D4               	movwf	??_main
  1184     074D  01D5               	clrf	??_main+1
  1185     074E  0854               	movf	??_main,w
  1186     074F  00C8               	movwf	?_sprintf+1
  1187     0750  0855               	movf	??_main+1,w
  1188     0751  00C9               	movwf	?_sprintf+2
  1189     0752  303D               	movlw	(low (_buffer2| 0))& (0+255)
  1190     0753  120A  118A  254F  120A  118A  	fcall	_sprintf
  1191     0758                     l1603:
  1192                           
  1193                           ;main.c: 111:         Lcd_Write_Str(buffer2);
  1194     0758  303D               	movlw	(low (_buffer2| 0))& (0+255)
  1195     0759  00F2               	movwf	Lcd_Write_Str@a
  1196     075A  3000               	movlw	0
  1197     075B  00F3               	movwf	Lcd_Write_Str@a+1
  1198     075C  120A  118A  229D  120A  118A  	fcall	_Lcd_Write_Str
  1199     0761                     l1605:
  1200                           
  1201                           ;main.c: 112:         sprintf(buffer2, "%d", uni2);
  1202     0761  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1203     0762  1283               	bcf	3,5	;RP0=0, select bank0
  1204     0763  1303               	bcf	3,6	;RP1=0, select bank0
  1205     0764  00C7               	movwf	sprintf@f
  1206     0765  0831               	movf	_uni2,w
  1207     0766  00D4               	movwf	??_main
  1208     0767  01D5               	clrf	??_main+1
  1209     0768  0854               	movf	??_main,w
  1210     0769  00C8               	movwf	?_sprintf+1
  1211     076A  0855               	movf	??_main+1,w
  1212     076B  00C9               	movwf	?_sprintf+2
  1213     076C  303D               	movlw	(low (_buffer2| 0))& (0+255)
  1214     076D  120A  118A  254F  120A  118A  	fcall	_sprintf
  1215     0772                     l1607:
  1216                           
  1217                           ;main.c: 113:         Lcd_Write_Str(buffer2);
  1218     0772  303D               	movlw	(low (_buffer2| 0))& (0+255)
  1219     0773  00F2               	movwf	Lcd_Write_Str@a
  1220     0774  3000               	movlw	0
  1221     0775  00F3               	movwf	Lcd_Write_Str@a+1
  1222     0776  120A  118A  229D  120A  118A  	fcall	_Lcd_Write_Str
  1223     077B                     l1609:
  1224                           
  1225                           ;main.c: 114:          _delay((unsigned long)((10)*(8000000/4000.0)));
  1226     077B  301A               	movlw	26
  1227     077C  1283               	bcf	3,5	;RP0=0, select bank0
  1228     077D  1303               	bcf	3,6	;RP1=0, select bank0
  1229     077E  00D5               	movwf	??_main+1
  1230     077F  30F7               	movlw	247
  1231     0780  00D4               	movwf	??_main
  1232     0781                     u1067:
  1233     0781  0BD4               	decfsz	??_main,f
  1234     0782  2F81               	goto	u1067
  1235     0783  0BD5               	decfsz	??_main+1,f
  1236     0784  2F81               	goto	u1067
  1237     0785  2F86               	nop2
  1238     0786                     l1611:
  1239                           
  1240                           ;main.c: 116:         Division3(temp);
  1241     0786  1283               	bcf	3,5	;RP0=0, select bank0
  1242     0787  1303               	bcf	3,6	;RP1=0, select bank0
  1243     0788  082B               	movf	_temp,w
  1244     0789  120A  118A  2486  120A  118A  	fcall	_Division3
  1245     078E                     l1613:
  1246                           
  1247                           ;main.c: 117:         Lcd_Set(2, 12);
  1248     078E  300C               	movlw	12
  1249     078F  00F3               	movwf	Lcd_Set@b
  1250     0790  3002               	movlw	2
  1251     0791  120A  118A  2209  120A  118A  	fcall	_Lcd_Set
  1252     0796                     l1615:
  1253                           
  1254                           ;main.c: 118:         sprintf(buffer3, "%d", cen3);
  1255     0796  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1256     0797  1283               	bcf	3,5	;RP0=0, select bank0
  1257     0798  1303               	bcf	3,6	;RP1=0, select bank0
  1258     0799  00C7               	movwf	sprintf@f
  1259     079A  0830               	movf	_cen3,w
  1260     079B  00D4               	movwf	??_main
  1261     079C  01D5               	clrf	??_main+1
  1262     079D  0854               	movf	??_main,w
  1263     079E  00C8               	movwf	?_sprintf+1
  1264     079F  0855               	movf	??_main+1,w
  1265     07A0  00C9               	movwf	?_sprintf+2
  1266     07A1  3038               	movlw	(low (_buffer3| 0))& (0+255)
  1267     07A2  120A  118A  254F  120A  118A  	fcall	_sprintf
  1268     07A7                     l1617:
  1269                           
  1270                           ;main.c: 119:         Lcd_Write_Str(buffer3);
  1271     07A7  3038               	movlw	(low (_buffer3| 0))& (0+255)
  1272     07A8  00F2               	movwf	Lcd_Write_Str@a
  1273     07A9  3000               	movlw	0
  1274     07AA  00F3               	movwf	Lcd_Write_Str@a+1
  1275     07AB  120A  118A  229D  120A  118A  	fcall	_Lcd_Write_Str
  1276     07B0                     l1619:
  1277                           
  1278                           ;main.c: 120:         sprintf(buffer3, "%d", dec3);
  1279     07B0  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1280     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1281     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1282     07B3  00C7               	movwf	sprintf@f
  1283     07B4  082F               	movf	_dec3,w
  1284     07B5  00D4               	movwf	??_main
  1285     07B6  01D5               	clrf	??_main+1
  1286     07B7  0854               	movf	??_main,w
  1287     07B8  00C8               	movwf	?_sprintf+1
  1288     07B9  0855               	movf	??_main+1,w
  1289     07BA  00C9               	movwf	?_sprintf+2
  1290     07BB  3038               	movlw	(low (_buffer3| 0))& (0+255)
  1291     07BC  120A  118A  254F  120A  118A  	fcall	_sprintf
  1292     07C1                     l1621:
  1293                           
  1294                           ;main.c: 121:         Lcd_Write_Str(buffer3);
  1295     07C1  3038               	movlw	(low (_buffer3| 0))& (0+255)
  1296     07C2  00F2               	movwf	Lcd_Write_Str@a
  1297     07C3  3000               	movlw	0
  1298     07C4  00F3               	movwf	Lcd_Write_Str@a+1
  1299     07C5  120A  118A  229D  120A  118A  	fcall	_Lcd_Write_Str
  1300     07CA                     l1623:
  1301                           
  1302                           ;main.c: 122:         sprintf(buffer3, "%d", uni3);
  1303     07CA  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1304     07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1305     07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1306     07CD  00C7               	movwf	sprintf@f
  1307     07CE  082E               	movf	_uni3,w
  1308     07CF  00D4               	movwf	??_main
  1309     07D0  01D5               	clrf	??_main+1
  1310     07D1  0854               	movf	??_main,w
  1311     07D2  00C8               	movwf	?_sprintf+1
  1312     07D3  0855               	movf	??_main+1,w
  1313     07D4  00C9               	movwf	?_sprintf+2
  1314     07D5  3038               	movlw	(low (_buffer3| 0))& (0+255)
  1315     07D6  120A  118A  254F  120A  118A  	fcall	_sprintf
  1316     07DB                     l1625:
  1317                           
  1318                           ;main.c: 123:         Lcd_Write_Str(buffer3);
  1319     07DB  3038               	movlw	(low (_buffer3| 0))& (0+255)
  1320     07DC  00F2               	movwf	Lcd_Write_Str@a
  1321     07DD  3000               	movlw	0
  1322     07DE  00F3               	movwf	Lcd_Write_Str@a+1
  1323     07DF  120A  118A  229D  120A  118A  	fcall	_Lcd_Write_Str
  1324     07E4                     l1627:
  1325                           
  1326                           ;main.c: 124:          _delay((unsigned long)((10)*(8000000/4000.0)));
  1327     07E4  301A               	movlw	26
  1328     07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1329     07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1330     07E7  00D5               	movwf	??_main+1
  1331     07E8  30F7               	movlw	247
  1332     07E9  00D4               	movwf	??_main
  1333     07EA                     u1077:
  1334     07EA  0BD4               	decfsz	??_main,f
  1335     07EB  2FEA               	goto	u1077
  1336     07EC  0BD5               	decfsz	??_main+1,f
  1337     07ED  2FEA               	goto	u1077
  1338     07EE  2FEF               	nop2
  1339     07EF  2E2E               	goto	l1547
  1340     07F0  120A  118A  2800   	ljmp	start
  1341     07F3                     __end_of_main:
  1342                           
  1343                           	psect	text1
  1344     054F                     __ptext1:	
  1345 ;; *************** function _sprintf *****************
  1346 ;; Defined at:
  1347 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  sp              1    wreg     PTR unsigned char 
  1350 ;;		 -> buffer3(5), buffer2(5), buffer(5), 
  1351 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1352 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(3), 
  1353 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  1354 ;;		 -> STR_1(3), 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1357 ;;		 -> buffer3(5), buffer2(5), buffer(5), 
  1358 ;;  tmpval          4    0        struct .
  1359 ;;  val             2    9[BANK0 ] unsigned int 
  1360 ;;  cp              2    0        PTR const unsigned char 
  1361 ;;  len             2    0        unsigned int 
  1362 ;;  c               1   12[BANK0 ] unsigned char 
  1363 ;;  prec            1    8[BANK0 ] char 
  1364 ;;  flag            1    7[BANK0 ] unsigned char 
  1365 ;;  ap              1    6[BANK0 ] PTR void [1]
  1366 ;;		 -> ?_sprintf(2), 
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  2    0[BANK0 ] int 
  1369 ;; Registers used:
  1370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1376 ;;      Params:         0       3       0       0       0
  1377 ;;      Locals:         0       7       0       0       0
  1378 ;;      Temps:          0       3       0       0       0
  1379 ;;      Totals:         0      13       0       0       0
  1380 ;;Total ram usage:       13 bytes
  1381 ;; Hardware stack levels used: 1
  1382 ;; Hardware stack levels required when called: 1
  1383 ;; This function calls:
  1384 ;;		___lwdiv
  1385 ;;		___lwmod
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391     054F                     _sprintf:	
  1392                           ;psect for function _sprintf
  1393                           
  1394                           
  1395                           ;incstack = 0
  1396                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1397                           ;sprintf@sp stored from wreg
  1398     054F  1283               	bcf	3,5	;RP0=0, select bank0
  1399     0550  1303               	bcf	3,6	;RP1=0, select bank0
  1400     0551  00D2               	movwf	sprintf@sp
  1401     0552                     l1483:
  1402                           
  1403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1404     0552  3048               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1405     0553  00CD               	movwf	sprintf@ap
  1406                           
  1407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1408     0554  2E14               	goto	l1535
  1409     0555                     l1485:
  1410                           
  1411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1412     0555  3025               	movlw	37
  1413     0556  0653               	xorwf	sprintf@c,w
  1414     0557  1903               	btfsc	3,2
  1415     0558  2D5A               	goto	u891
  1416     0559  2D5B               	goto	u890
  1417     055A                     u891:
  1418     055A  2D65               	goto	l1491
  1419     055B                     u890:
  1420     055B                     l1487:
  1421                           
  1422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1423     055B  0852               	movf	sprintf@sp,w
  1424     055C  0084               	movwf	4
  1425     055D  0853               	movf	sprintf@c,w
  1426     055E  1383               	bcf	3,7	;select IRP bank0
  1427     055F  0080               	movwf	0
  1428     0560                     l1489:
  1429     0560  3001               	movlw	1
  1430     0561  00CA               	movwf	??_sprintf
  1431     0562  084A               	movf	??_sprintf,w
  1432     0563  07D2               	addwf	sprintf@sp,f
  1433                           
  1434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1435     0564  2E14               	goto	l1535
  1436     0565                     l1491:
  1437                           
  1438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1439     0565  01CE               	clrf	sprintf@flag
  1440     0566                     l1495:	
  1441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1442                           
  1443     0566  3001               	movlw	1
  1444     0567  07C7               	addwf	sprintf@f,f
  1445     0568  30FF               	movlw	-1
  1446     0569  0747               	addwf	sprintf@f,w
  1447     056A  0084               	movwf	4
  1448     056B  120A  118A  200D  120A  118A  	fcall	stringdir
  1449     0570  00D3               	movwf	sprintf@c
  1450     0571  00CA               	movwf	??_sprintf
  1451     0572  01CB               	clrf	??_sprintf+1
  1452                           
  1453                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1454                           ; Switch size 1, requested type "simple"
  1455                           ; Number of cases is 1, Range of values is 0 to 0
  1456                           ; switch strategies available:
  1457                           ; Name         Instructions Cycles
  1458                           ; simple_byte            4     3 (average)
  1459                           ; direct_byte           11     8 (fixed)
  1460                           ; jumptable            260     6 (fixed)
  1461                           ;	Chosen strategy is simple_byte
  1462     0573  084B               	movf	??_sprintf+1,w
  1463     0574  3A00               	xorlw	0	; case 0
  1464     0575  1903               	skipnz
  1465     0576  2D78               	goto	l1653
  1466     0577  2E14               	goto	l1535
  1467     0578                     l1653:
  1468                           
  1469                           ; Switch size 1, requested type "simple"
  1470                           ; Number of cases is 3, Range of values is 0 to 105
  1471                           ; switch strategies available:
  1472                           ; Name         Instructions Cycles
  1473                           ; simple_byte           10     6 (average)
  1474                           ; jumptable            260     6 (fixed)
  1475                           ;	Chosen strategy is simple_byte
  1476     0578  084A               	movf	??_sprintf,w
  1477     0579  3A00               	xorlw	0	; case 0
  1478     057A  1903               	skipnz
  1479     057B  2E24               	goto	l1537
  1480     057C  3A64               	xorlw	100	; case 100
  1481     057D  1903               	skipnz
  1482     057E  2D83               	goto	l1497
  1483     057F  3A0D               	xorlw	13	; case 105
  1484     0580  1903               	skipnz
  1485     0581  2D83               	goto	l1497
  1486     0582  2E14               	goto	l1535
  1487     0583                     l1497:
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1490     0583  084D               	movf	sprintf@ap,w
  1491     0584  0084               	movwf	4
  1492     0585  1383               	bcf	3,7	;select IRP bank0
  1493     0586  0800               	movf	0,w
  1494     0587  00D0               	movwf	sprintf@val
  1495     0588  0A84               	incf	4,f
  1496     0589  0800               	movf	0,w
  1497     058A  00D1               	movwf	sprintf@val+1
  1498     058B                     l1499:
  1499     058B  3002               	movlw	2
  1500     058C  00CA               	movwf	??_sprintf
  1501     058D  084A               	movf	??_sprintf,w
  1502     058E  07CD               	addwf	sprintf@ap,f
  1503     058F                     l1501:
  1504                           
  1505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1506     058F  1FD1               	btfss	sprintf@val+1,7
  1507     0590  2D92               	goto	u901
  1508     0591  2D93               	goto	u900
  1509     0592                     u901:
  1510     0592  2D9C               	goto	l1507
  1511     0593                     u900:
  1512     0593                     l1503:
  1513                           
  1514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1515     0593  3003               	movlw	3
  1516     0594  00CA               	movwf	??_sprintf
  1517     0595  084A               	movf	??_sprintf,w
  1518     0596  04CE               	iorwf	sprintf@flag,f
  1519     0597                     l1505:
  1520                           
  1521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1522     0597  09D0               	comf	sprintf@val,f
  1523     0598  09D1               	comf	sprintf@val+1,f
  1524     0599  0AD0               	incf	sprintf@val,f
  1525     059A  1903               	skipnz
  1526     059B  0AD1               	incf	sprintf@val+1,f
  1527     059C                     l1507:
  1528                           
  1529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1530     059C  01D3               	clrf	sprintf@c
  1531     059D  0AD3               	incf	sprintf@c,f
  1532     059E                     l1513:
  1533                           
  1534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1535     059E  0853               	movf	sprintf@c,w
  1536     059F  00CA               	movwf	??_sprintf
  1537     05A0  074A               	addwf	??_sprintf,w
  1538     05A1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1539     05A2  0084               	movwf	4
  1540     05A3  120A  118A  200D  120A  118A  	fcall	stringdir
  1541     05A8  00CB               	movwf	??_sprintf+1
  1542     05A9  120A  118A  200D  120A  118A  	fcall	stringdir
  1543     05AE  00CC               	movwf	??_sprintf+2
  1544     05AF  084C               	movf	??_sprintf+2,w
  1545     05B0  0251               	subwf	sprintf@val+1,w
  1546     05B1  1D03               	skipz
  1547     05B2  2DB5               	goto	u915
  1548     05B3  084B               	movf	??_sprintf+1,w
  1549     05B4  0250               	subwf	sprintf@val,w
  1550     05B5                     u915:
  1551     05B5  1803               	skipnc
  1552     05B6  2DB8               	goto	u911
  1553     05B7  2DB9               	goto	u910
  1554     05B8                     u911:
  1555     05B8  2DBA               	goto	l1517
  1556     05B9                     u910:
  1557     05B9  2DC4               	goto	l1519
  1558     05BA                     l1517:
  1559     05BA  3001               	movlw	1
  1560     05BB  00CA               	movwf	??_sprintf
  1561     05BC  084A               	movf	??_sprintf,w
  1562     05BD  07D3               	addwf	sprintf@c,f
  1563     05BE  3005               	movlw	5
  1564     05BF  0653               	xorwf	sprintf@c,w
  1565     05C0  1D03               	btfss	3,2
  1566     05C1  2DC3               	goto	u921
  1567     05C2  2DC4               	goto	u920
  1568     05C3                     u921:
  1569     05C3  2D9E               	goto	l1513
  1570     05C4                     u920:
  1571     05C4                     l1519:
  1572                           
  1573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1574     05C4  084E               	movf	sprintf@flag,w
  1575     05C5  3903               	andlw	3
  1576     05C6  1903               	btfsc	3,2
  1577     05C7  2DC9               	goto	u931
  1578     05C8  2DCA               	goto	u930
  1579     05C9                     u931:
  1580     05C9  2DD3               	goto	l1525
  1581     05CA                     u930:
  1582     05CA                     l1521:
  1583                           
  1584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1585     05CA  0852               	movf	sprintf@sp,w
  1586     05CB  0084               	movwf	4
  1587     05CC  302D               	movlw	45
  1588     05CD  1383               	bcf	3,7	;select IRP bank0
  1589     05CE  0080               	movwf	0
  1590     05CF                     l1523:
  1591     05CF  3001               	movlw	1
  1592     05D0  00CA               	movwf	??_sprintf
  1593     05D1  084A               	movf	??_sprintf,w
  1594     05D2  07D2               	addwf	sprintf@sp,f
  1595     05D3                     l1525:
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1598     05D3  0853               	movf	sprintf@c,w
  1599     05D4  00CF               	movwf	sprintf@prec
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1602     05D5  2E0B               	goto	l1533
  1603     05D6                     l1527:
  1604                           
  1605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1606     05D6  300A               	movlw	10
  1607     05D7  00F8               	movwf	___lwmod@divisor
  1608     05D8  3000               	movlw	0
  1609     05D9  00F9               	movwf	___lwmod@divisor+1
  1610     05DA  084F               	movf	sprintf@prec,w
  1611     05DB  00CA               	movwf	??_sprintf
  1612     05DC  074A               	addwf	??_sprintf,w
  1613     05DD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1614     05DE  0084               	movwf	4
  1615     05DF  120A  118A  200D  120A  118A  	fcall	stringdir
  1616     05E4  00F0               	movwf	___lwdiv@divisor
  1617     05E5  120A  118A  200D  120A  118A  	fcall	stringdir
  1618     05EA  00F1               	movwf	___lwdiv@divisor+1
  1619     05EB  0851               	movf	sprintf@val+1,w
  1620     05EC  00F3               	movwf	___lwdiv@dividend+1
  1621     05ED  0850               	movf	sprintf@val,w
  1622     05EE  00F2               	movwf	___lwdiv@dividend
  1623     05EF  120A  118A  22DF  120A  118A  	fcall	___lwdiv
  1624     05F4  0871               	movf	?___lwdiv+1,w
  1625     05F5  00FB               	movwf	___lwmod@dividend+1
  1626     05F6  0870               	movf	?___lwdiv,w
  1627     05F7  00FA               	movwf	___lwmod@dividend
  1628     05F8  120A  118A  2227  120A  118A  	fcall	___lwmod
  1629     05FD  0878               	movf	?___lwmod,w
  1630     05FE  3E30               	addlw	48
  1631     05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1632     0600  1303               	bcf	3,6	;RP1=0, select bank0
  1633     0601  00D3               	movwf	sprintf@c
  1634     0602                     l1529:
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1637     0602  0852               	movf	sprintf@sp,w
  1638     0603  0084               	movwf	4
  1639     0604  0853               	movf	sprintf@c,w
  1640     0605  1383               	bcf	3,7	;select IRP bank0
  1641     0606  0080               	movwf	0
  1642     0607                     l1531:
  1643     0607  3001               	movlw	1
  1644     0608  00CA               	movwf	??_sprintf
  1645     0609  084A               	movf	??_sprintf,w
  1646     060A  07D2               	addwf	sprintf@sp,f
  1647     060B                     l1533:
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1650     060B  30FF               	movlw	255
  1651     060C  00CA               	movwf	??_sprintf
  1652     060D  084A               	movf	??_sprintf,w
  1653     060E  07CF               	addwf	sprintf@prec,f
  1654     060F  0A4F               	incf	sprintf@prec,w
  1655     0610  1D03               	btfss	3,2
  1656     0611  2E13               	goto	u941
  1657     0612  2E14               	goto	u940
  1658     0613                     u941:
  1659     0613  2DD6               	goto	l1527
  1660     0614                     u940:
  1661     0614                     l1535:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1664     0614  3001               	movlw	1
  1665     0615  07C7               	addwf	sprintf@f,f
  1666     0616  30FF               	movlw	-1
  1667     0617  0747               	addwf	sprintf@f,w
  1668     0618  0084               	movwf	4
  1669     0619  120A  118A  200D  120A  118A  	fcall	stringdir
  1670     061E  00D3               	movwf	sprintf@c
  1671     061F  0853               	movf	sprintf@c,w
  1672     0620  1D03               	btfss	3,2
  1673     0621  2E23               	goto	u951
  1674     0622  2E24               	goto	u950
  1675     0623                     u951:
  1676     0623  2D55               	goto	l1485
  1677     0624                     u950:
  1678     0624                     l1537:
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1681     0624  0852               	movf	sprintf@sp,w
  1682     0625  0084               	movwf	4
  1683     0626  1383               	bcf	3,7	;select IRP bank0
  1684     0627  0180               	clrf	0
  1685     0628                     l293:
  1686     0628  0008               	return
  1687     0629                     __end_of_sprintf:
  1688                           
  1689                           	psect	text2
  1690     0227                     __ptext2:	
  1691 ;; *************** function ___lwmod *****************
  1692 ;; Defined at:
  1693 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  divisor         2    8[COMMON] unsigned int 
  1696 ;;  dividend        2   10[COMMON] unsigned int 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  counter         1   13[COMMON] unsigned char 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  2    8[COMMON] unsigned int 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1708 ;;      Params:         4       0       0       0       0
  1709 ;;      Locals:         1       0       0       0       0
  1710 ;;      Temps:          1       0       0       0       0
  1711 ;;      Totals:         6       0       0       0       0
  1712 ;;Total ram usage:        6 bytes
  1713 ;; Hardware stack levels used: 1
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_sprintf
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721     0227                     ___lwmod:	
  1722                           ;psect for function ___lwmod
  1723                           
  1724     0227                     l1409:	
  1725                           ;incstack = 0
  1726                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1727                           
  1728     0227  0878               	movf	___lwmod@divisor,w
  1729     0228  0479               	iorwf	___lwmod@divisor+1,w
  1730     0229  1903               	btfsc	3,2
  1731     022A  2A2C               	goto	u831
  1732     022B  2A2D               	goto	u830
  1733     022C                     u831:
  1734     022C  2A5C               	goto	l1427
  1735     022D                     u830:
  1736     022D                     l1411:
  1737     022D  01FD               	clrf	___lwmod@counter
  1738     022E  0AFD               	incf	___lwmod@counter,f
  1739     022F  2A3B               	goto	l1417
  1740     0230                     l1413:
  1741     0230  3001               	movlw	1
  1742     0231                     u845:
  1743     0231  1003               	clrc
  1744     0232  0DF8               	rlf	___lwmod@divisor,f
  1745     0233  0DF9               	rlf	___lwmod@divisor+1,f
  1746     0234  3EFF               	addlw	-1
  1747     0235  1D03               	skipz
  1748     0236  2A31               	goto	u845
  1749     0237                     l1415:
  1750     0237  3001               	movlw	1
  1751     0238  00FC               	movwf	??___lwmod
  1752     0239  087C               	movf	??___lwmod,w
  1753     023A  07FD               	addwf	___lwmod@counter,f
  1754     023B                     l1417:
  1755     023B  1FF9               	btfss	___lwmod@divisor+1,7
  1756     023C  2A3E               	goto	u851
  1757     023D  2A3F               	goto	u850
  1758     023E                     u851:
  1759     023E  2A30               	goto	l1413
  1760     023F                     u850:
  1761     023F                     l1419:
  1762     023F  0879               	movf	___lwmod@divisor+1,w
  1763     0240  027B               	subwf	___lwmod@dividend+1,w
  1764     0241  1D03               	skipz
  1765     0242  2A45               	goto	u865
  1766     0243  0878               	movf	___lwmod@divisor,w
  1767     0244  027A               	subwf	___lwmod@dividend,w
  1768     0245                     u865:
  1769     0245  1C03               	skipc
  1770     0246  2A48               	goto	u861
  1771     0247  2A49               	goto	u860
  1772     0248                     u861:
  1773     0248  2A4F               	goto	l1423
  1774     0249                     u860:
  1775     0249                     l1421:
  1776     0249  0878               	movf	___lwmod@divisor,w
  1777     024A  02FA               	subwf	___lwmod@dividend,f
  1778     024B  0879               	movf	___lwmod@divisor+1,w
  1779     024C  1C03               	skipc
  1780     024D  03FB               	decf	___lwmod@dividend+1,f
  1781     024E  02FB               	subwf	___lwmod@dividend+1,f
  1782     024F                     l1423:
  1783     024F  3001               	movlw	1
  1784     0250                     u875:
  1785     0250  1003               	clrc
  1786     0251  0CF9               	rrf	___lwmod@divisor+1,f
  1787     0252  0CF8               	rrf	___lwmod@divisor,f
  1788     0253  3EFF               	addlw	-1
  1789     0254  1D03               	skipz
  1790     0255  2A50               	goto	u875
  1791     0256                     l1425:
  1792     0256  3001               	movlw	1
  1793     0257  02FD               	subwf	___lwmod@counter,f
  1794     0258  1D03               	btfss	3,2
  1795     0259  2A5B               	goto	u881
  1796     025A  2A5C               	goto	u880
  1797     025B                     u881:
  1798     025B  2A3F               	goto	l1419
  1799     025C                     u880:
  1800     025C                     l1427:
  1801     025C  087B               	movf	___lwmod@dividend+1,w
  1802     025D  00F9               	movwf	?___lwmod+1
  1803     025E  087A               	movf	___lwmod@dividend,w
  1804     025F  00F8               	movwf	?___lwmod
  1805     0260                     l579:
  1806     0260  0008               	return
  1807     0261                     __end_of___lwmod:
  1808                           
  1809                           	psect	text3
  1810     02DF                     __ptext3:	
  1811 ;; *************** function ___lwdiv *****************
  1812 ;; Defined at:
  1813 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  divisor         2    0[COMMON] unsigned int 
  1816 ;;  dividend        2    2[COMMON] unsigned int 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  quotient        2    5[COMMON] unsigned int 
  1819 ;;  counter         1    7[COMMON] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  2    0[COMMON] unsigned int 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         4       0       0       0       0
  1830 ;;      Locals:         3       0       0       0       0
  1831 ;;      Temps:          1       0       0       0       0
  1832 ;;      Totals:         8       0       0       0       0
  1833 ;;Total ram usage:        8 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; This function calls:
  1836 ;;		Nothing
  1837 ;; This function is called by:
  1838 ;;		_sprintf
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842     02DF                     ___lwdiv:	
  1843                           ;psect for function ___lwdiv
  1844                           
  1845     02DF                     l1383:	
  1846                           ;incstack = 0
  1847                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1848                           
  1849     02DF  01F5               	clrf	___lwdiv@quotient
  1850     02E0  01F6               	clrf	___lwdiv@quotient+1
  1851     02E1                     l1385:
  1852     02E1  0870               	movf	___lwdiv@divisor,w
  1853     02E2  0471               	iorwf	___lwdiv@divisor+1,w
  1854     02E3  1903               	btfsc	3,2
  1855     02E4  2AE6               	goto	u761
  1856     02E5  2AE7               	goto	u760
  1857     02E6                     u761:
  1858     02E6  2B1E               	goto	l1405
  1859     02E7                     u760:
  1860     02E7                     l1387:
  1861     02E7  01F7               	clrf	___lwdiv@counter
  1862     02E8  0AF7               	incf	___lwdiv@counter,f
  1863     02E9  2AF5               	goto	l1393
  1864     02EA                     l1389:
  1865     02EA  3001               	movlw	1
  1866     02EB                     u775:
  1867     02EB  1003               	clrc
  1868     02EC  0DF0               	rlf	___lwdiv@divisor,f
  1869     02ED  0DF1               	rlf	___lwdiv@divisor+1,f
  1870     02EE  3EFF               	addlw	-1
  1871     02EF  1D03               	skipz
  1872     02F0  2AEB               	goto	u775
  1873     02F1                     l1391:
  1874     02F1  3001               	movlw	1
  1875     02F2  00F4               	movwf	??___lwdiv
  1876     02F3  0874               	movf	??___lwdiv,w
  1877     02F4  07F7               	addwf	___lwdiv@counter,f
  1878     02F5                     l1393:
  1879     02F5  1FF1               	btfss	___lwdiv@divisor+1,7
  1880     02F6  2AF8               	goto	u781
  1881     02F7  2AF9               	goto	u780
  1882     02F8                     u781:
  1883     02F8  2AEA               	goto	l1389
  1884     02F9                     u780:
  1885     02F9                     l1395:
  1886     02F9  3001               	movlw	1
  1887     02FA                     u795:
  1888     02FA  1003               	clrc
  1889     02FB  0DF5               	rlf	___lwdiv@quotient,f
  1890     02FC  0DF6               	rlf	___lwdiv@quotient+1,f
  1891     02FD  3EFF               	addlw	-1
  1892     02FE  1D03               	skipz
  1893     02FF  2AFA               	goto	u795
  1894     0300  0871               	movf	___lwdiv@divisor+1,w
  1895     0301  0273               	subwf	___lwdiv@dividend+1,w
  1896     0302  1D03               	skipz
  1897     0303  2B06               	goto	u805
  1898     0304  0870               	movf	___lwdiv@divisor,w
  1899     0305  0272               	subwf	___lwdiv@dividend,w
  1900     0306                     u805:
  1901     0306  1C03               	skipc
  1902     0307  2B09               	goto	u801
  1903     0308  2B0A               	goto	u800
  1904     0309                     u801:
  1905     0309  2B11               	goto	l1401
  1906     030A                     u800:
  1907     030A                     l1397:
  1908     030A  0870               	movf	___lwdiv@divisor,w
  1909     030B  02F2               	subwf	___lwdiv@dividend,f
  1910     030C  0871               	movf	___lwdiv@divisor+1,w
  1911     030D  1C03               	skipc
  1912     030E  03F3               	decf	___lwdiv@dividend+1,f
  1913     030F  02F3               	subwf	___lwdiv@dividend+1,f
  1914     0310                     l1399:
  1915     0310  1475               	bsf	___lwdiv@quotient,0
  1916     0311                     l1401:
  1917     0311  3001               	movlw	1
  1918     0312                     u815:
  1919     0312  1003               	clrc
  1920     0313  0CF1               	rrf	___lwdiv@divisor+1,f
  1921     0314  0CF0               	rrf	___lwdiv@divisor,f
  1922     0315  3EFF               	addlw	-1
  1923     0316  1D03               	skipz
  1924     0317  2B12               	goto	u815
  1925     0318                     l1403:
  1926     0318  3001               	movlw	1
  1927     0319  02F7               	subwf	___lwdiv@counter,f
  1928     031A  1D03               	btfss	3,2
  1929     031B  2B1D               	goto	u821
  1930     031C  2B1E               	goto	u820
  1931     031D                     u821:
  1932     031D  2AF9               	goto	l1395
  1933     031E                     u820:
  1934     031E                     l1405:
  1935     031E  0876               	movf	___lwdiv@quotient+1,w
  1936     031F  00F1               	movwf	?___lwdiv+1
  1937     0320  0875               	movf	___lwdiv@quotient,w
  1938     0321  00F0               	movwf	?___lwdiv
  1939     0322                     l569:
  1940     0322  0008               	return
  1941     0323                     __end_of___lwdiv:
  1942                           
  1943                           	psect	text4
  1944     01A4                     __ptext4:	
  1945 ;; *************** function _spiWrite *****************
  1946 ;; Defined at:
  1947 ;;		line 34 in file "SPI.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  dat             1    wreg     unsigned char 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  dat             1    0[COMMON] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1961 ;;      Params:         0       0       0       0       0
  1962 ;;      Locals:         1       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0
  1964 ;;      Totals:         1       0       0       0       0
  1965 ;;Total ram usage:        1 bytes
  1966 ;; Hardware stack levels used: 1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974     01A4                     _spiWrite:	
  1975                           ;psect for function _spiWrite
  1976                           
  1977                           
  1978                           ;incstack = 0
  1979                           ; Regs used in _spiWrite: [wreg]
  1980                           ;spiWrite@dat stored from wreg
  1981     01A4  00F0               	movwf	spiWrite@dat
  1982     01A5                     l1475:
  1983                           
  1984                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1985     01A5  0870               	movf	spiWrite@dat,w
  1986     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1987     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1988     01A8  0093               	movwf	19	;volatile
  1989     01A9                     l137:
  1990     01A9  0008               	return
  1991     01AA                     __end_of_spiWrite:
  1992                           
  1993                           	psect	text5
  1994     01B9                     __ptext5:	
  1995 ;; *************** function _spiRead *****************
  1996 ;; Defined at:
  1997 ;;		line 47 in file "SPI.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      unsigned char 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, pclath, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2011 ;;      Params:         0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0
  2014 ;;      Totals:         0       0       0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 1
  2018 ;; This function calls:
  2019 ;;		_spiReceiveWait
  2020 ;; This function is called by:
  2021 ;;		_main
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025     01B9                     _spiRead:	
  2026                           ;psect for function _spiRead
  2027                           
  2028     01B9                     l1477:	
  2029                           ;incstack = 0
  2030                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2031                           
  2032                           
  2033                           ;SPI.c: 49:     spiReceiveWait();
  2034     01B9  120A  118A  21AA  120A  118A  	fcall	_spiReceiveWait
  2035     01BE                     l1479:
  2036                           
  2037                           ;SPI.c: 50:     return(SSPBUF);
  2038     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2039     01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2040     01C0  0813               	movf	19,w	;volatile
  2041     01C1                     l145:
  2042     01C1  0008               	return
  2043     01C2                     __end_of_spiRead:
  2044                           
  2045                           	psect	text6
  2046     01AA                     __ptext6:	
  2047 ;; *************** function _spiReceiveWait *****************
  2048 ;; Defined at:
  2049 ;;		line 29 in file "SPI.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		None
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2063 ;;      Params:         0       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0
  2066 ;;      Totals:         0       0       0       0       0
  2067 ;;Total ram usage:        0 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_spiRead
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076     01AA                     _spiReceiveWait:	
  2077                           ;psect for function _spiReceiveWait
  2078                           
  2079     01AA                     l1299:	
  2080                           ;incstack = 0
  2081                           ; Regs used in _spiReceiveWait: []
  2082                           
  2083     01AA                     l131:	
  2084                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  2085                           
  2086     01AA  1683               	bsf	3,5	;RP0=1, select bank1
  2087     01AB  1303               	bcf	3,6	;RP1=0, select bank1
  2088     01AC  1C14               	btfss	20,0	;volatile
  2089     01AD  29AF               	goto	u561
  2090     01AE  29B0               	goto	u560
  2091     01AF                     u561:
  2092     01AF  29AA               	goto	l131
  2093     01B0                     u560:
  2094     01B0                     l134:
  2095     01B0  0008               	return
  2096     01B1                     __end_of_spiReceiveWait:
  2097                           
  2098                           	psect	text7
  2099     0261                     __ptext7:	
  2100 ;; *************** function _setup *****************
  2101 ;; Defined at:
  2102 ;;		line 132 in file "main.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2116 ;;      Params:         0       0       0       0       0
  2117 ;;      Locals:         0       0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0
  2119 ;;      Totals:         0       0       0       0       0
  2120 ;;Total ram usage:        0 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; Hardware stack levels required when called: 2
  2123 ;; This function calls:
  2124 ;;		_Lcd_Clear
  2125 ;;		_Lcd_Init
  2126 ;;		_Lcd_Set
  2127 ;;		_Lcd_Write_Str
  2128 ;;		_spiInit
  2129 ;; This function is called by:
  2130 ;;		_main
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134     0261                     _setup:	
  2135                           ;psect for function _setup
  2136                           
  2137     0261                     l1437:	
  2138                           ;incstack = 0
  2139                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2140                           
  2141                           
  2142                           ;main.c: 133:     OSCCONbits.IRCF = 0b111;
  2143     0261  3070               	movlw	112
  2144     0262  1683               	bsf	3,5	;RP0=1, select bank1
  2145     0263  1303               	bcf	3,6	;RP1=0, select bank1
  2146     0264  048F               	iorwf	15,f	;volatile
  2147     0265                     l1439:
  2148                           
  2149                           ;main.c: 134:     OSCCONbits.SCS = 0b10;
  2150     0265  100F               	bcf	15,0	;volatile
  2151     0266                     l1441:
  2152                           
  2153                           ;main.c: 136:     ANSEL = 0;
  2154     0266  1683               	bsf	3,5	;RP0=1, select bank3
  2155     0267  1703               	bsf	3,6	;RP1=1, select bank3
  2156     0268  0188               	clrf	8	;volatile
  2157     0269                     l1443:
  2158                           
  2159                           ;main.c: 137:     ANSELH = 0;
  2160     0269  0189               	clrf	9	;volatile
  2161     026A                     l1445:
  2162                           
  2163                           ;main.c: 138:     TRISC2 = 0;
  2164     026A  1683               	bsf	3,5	;RP0=1, select bank1
  2165     026B  1303               	bcf	3,6	;RP1=0, select bank1
  2166     026C  1107               	bcf	7,2	;volatile
  2167     026D                     l1447:
  2168                           
  2169                           ;main.c: 139:     TRISCbits.TRISC1 = 0;
  2170     026D  1087               	bcf	7,1	;volatile
  2171     026E                     l1449:
  2172                           
  2173                           ;main.c: 140:     TRISCbits.TRISC2 = 0;
  2174     026E  1107               	bcf	7,2	;volatile
  2175     026F                     l1451:
  2176                           
  2177                           ;main.c: 141:     TRISCbits.TRISC6 = 0;
  2178     026F  1307               	bcf	7,6	;volatile
  2179     0270                     l1453:
  2180                           
  2181                           ;main.c: 142:     TRISCbits.TRISC7 = 0;
  2182     0270  1387               	bcf	7,7	;volatile
  2183     0271                     l1455:
  2184                           
  2185                           ;main.c: 143:     TRISD = 0;
  2186     0271  0188               	clrf	8	;volatile
  2187     0272                     l1457:
  2188                           
  2189                           ;main.c: 144:     TRISB = 0;
  2190     0272  0186               	clrf	6	;volatile
  2191     0273                     l1459:
  2192                           
  2193                           ;main.c: 145:     PORTD = 0;
  2194     0273  1283               	bcf	3,5	;RP0=0, select bank0
  2195     0274  1303               	bcf	3,6	;RP1=0, select bank0
  2196     0275  0188               	clrf	8	;volatile
  2197     0276                     l1461:
  2198                           
  2199                           ;main.c: 146:     PORTCbits.RC2 = 1;
  2200     0276  1507               	bsf	7,2	;volatile
  2201     0277                     l1463:
  2202                           
  2203                           ;main.c: 147:     PORTCbits.RC1 = 1;
  2204     0277  1487               	bsf	7,1	;volatile
  2205     0278                     l1465:
  2206                           
  2207                           ;main.c: 149:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  2208     0278  01F0               	clrf	spiInit@sDataSample
  2209     0279  01F1               	clrf	spiInit@sClockIdle
  2210     027A  01F2               	clrf	spiInit@sTransmitEdge
  2211     027B  3020               	movlw	32
  2212     027C  120A  118A  21F3  120A  118A  	fcall	_spiInit
  2213     0281                     l1467:
  2214                           
  2215                           ;main.c: 150:     Lcd_Init();
  2216     0281  120A  118A  2323  120A  118A  	fcall	_Lcd_Init
  2217     0286                     l1469:
  2218                           
  2219                           ;main.c: 151:     Lcd_Clear();
  2220     0286  120A  118A  21C2  120A  118A  	fcall	_Lcd_Clear
  2221     028B                     l1471:
  2222                           
  2223                           ;main.c: 152:     Lcd_Set(1,1);
  2224     028B  01F3               	clrf	Lcd_Set@b
  2225     028C  0AF3               	incf	Lcd_Set@b,f
  2226     028D  3001               	movlw	1
  2227     028E  120A  118A  2209  120A  118A  	fcall	_Lcd_Set
  2228     0293                     l1473:
  2229                           
  2230                           ;main.c: 153:     Lcd_Write_Str(" S1   S2   S3");
  2231     0293  300B               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2232     0294  00F2               	movwf	Lcd_Write_Str@a
  2233     0295  3080               	movlw	128
  2234     0296  00F3               	movwf	Lcd_Write_Str@a+1
  2235     0297  120A  118A  229D  120A  118A  	fcall	_Lcd_Write_Str
  2236     029C                     l111:
  2237     029C  0008               	return
  2238     029D                     __end_of_setup:
  2239                           
  2240                           	psect	text8
  2241     01F3                     __ptext8:	
  2242 ;; *************** function _spiInit *****************
  2243 ;; Defined at:
  2244 ;;		line 12 in file "SPI.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  sType           1    wreg     enum E1292
  2247 ;;  sDataSample     1    0[COMMON] enum E1300
  2248 ;;  sClockIdle      1    1[COMMON] enum E1304
  2249 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  sType           1    3[COMMON] enum E1292
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, status,0
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2261 ;;      Params:         3       0       0       0       0
  2262 ;;      Locals:         1       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0
  2264 ;;      Totals:         4       0       0       0       0
  2265 ;;Total ram usage:        4 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_setup
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274     01F3                     _spiInit:	
  2275                           ;psect for function _spiInit
  2276                           
  2277                           
  2278                           ;incstack = 0
  2279                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2280                           ;spiInit@sType stored from wreg
  2281     01F3  00F3               	movwf	spiInit@sType
  2282     01F4                     l1263:
  2283                           
  2284                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  2285     01F4  1683               	bsf	3,5	;RP0=1, select bank1
  2286     01F5  1303               	bcf	3,6	;RP1=0, select bank1
  2287     01F6  1287               	bcf	7,5	;volatile
  2288                           
  2289                           ;SPI.c: 15:     if(sType & 0b00000100)
  2290     01F7  1D73               	btfss	spiInit@sType,2
  2291     01F8  29FA               	goto	u551
  2292     01F9  29FB               	goto	u550
  2293     01FA                     u551:
  2294     01FA  29FF               	goto	l1269
  2295     01FB                     u550:
  2296     01FB                     l1265:
  2297                           
  2298                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2299     01FB  0872               	movf	spiInit@sTransmitEdge,w
  2300     01FC  0094               	movwf	20	;volatile
  2301     01FD                     l1267:
  2302                           
  2303                           ;SPI.c: 18:         TRISC3 = 1;
  2304     01FD  1587               	bsf	7,3	;volatile
  2305                           
  2306                           ;SPI.c: 19:     }
  2307     01FE  2A03               	goto	l127
  2308     01FF                     l1269:
  2309                           
  2310                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2311     01FF  0870               	movf	spiInit@sDataSample,w
  2312     0200  0472               	iorwf	spiInit@sTransmitEdge,w
  2313     0201  0094               	movwf	20	;volatile
  2314     0202                     l1271:
  2315                           
  2316                           ;SPI.c: 23:         TRISC3 = 0;
  2317     0202  1187               	bcf	7,3	;volatile
  2318     0203                     l127:	
  2319                           ;SPI.c: 24:     }
  2320                           
  2321                           
  2322                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2323     0203  0873               	movf	spiInit@sType,w
  2324     0204  0471               	iorwf	spiInit@sClockIdle,w
  2325     0205  1283               	bcf	3,5	;RP0=0, select bank0
  2326     0206  1303               	bcf	3,6	;RP1=0, select bank0
  2327     0207  0094               	movwf	20	;volatile
  2328     0208                     l128:
  2329     0208  0008               	return
  2330     0209                     __end_of_spiInit:
  2331                           
  2332                           	psect	text9
  2333     029D                     __ptext9:	
  2334 ;; *************** function _Lcd_Write_Str *****************
  2335 ;; Defined at:
  2336 ;;		line 61 in file "C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  a               2    2[COMMON] PTR unsigned char 
  2339 ;;		 -> STR_10(14), buffer3(5), buffer2(5), buffer(5), 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  i               2    7[COMMON] int 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         2       0       0       0       0
  2352 ;;      Locals:         2       0       0       0       0
  2353 ;;      Temps:          3       0       0       0       0
  2354 ;;      Totals:         7       0       0       0       0
  2355 ;;Total ram usage:        7 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; Hardware stack levels required when called: 1
  2358 ;; This function calls:
  2359 ;;		_Lcd_Write
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;;		_setup
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366     029D                     _Lcd_Write_Str:	
  2367                           ;psect for function _Lcd_Write_Str
  2368                           
  2369     029D                     l1255:	
  2370                           ;incstack = 0
  2371                           ; Regs used in _Lcd_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2372                           
  2373                           
  2374                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 62:     int i;;
      +                          C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 63:     for (i =
      +                           0; a[i] != '\0'; i++)
  2375     029D  01F7               	clrf	Lcd_Write_Str@i
  2376     029E  01F8               	clrf	Lcd_Write_Str@i+1
  2377     029F  2AC2               	goto	l1261
  2378     02A0                     l1257:
  2379                           
  2380                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 64:         Lcd
      +                          _Write(a[i]);
  2381     02A0  0877               	movf	Lcd_Write_Str@i,w
  2382     02A1  0772               	addwf	Lcd_Write_Str@a,w
  2383     02A2  00F5               	movwf	??_Lcd_Write_Str+1
  2384     02A3  0873               	movf	Lcd_Write_Str@a+1,w
  2385     02A4  00F4               	movwf	??_Lcd_Write_Str
  2386     02A5  1803               	skipnc
  2387     02A6  0AF4               	incf	??_Lcd_Write_Str,f
  2388     02A7  1FF7               	btfss	Lcd_Write_Str@i,7
  2389     02A8  2AAA               	goto	u520
  2390     02A9  03F4               	decf	??_Lcd_Write_Str,f
  2391     02AA                     u520:
  2392     02AA  0874               	movf	??_Lcd_Write_Str,w
  2393     02AB  00F6               	movwf	??_Lcd_Write_Str+2
  2394     02AC  0876               	movf	??_Lcd_Write_Str+2,w
  2395     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2396     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2397     02AF  00FF               	movwf	btemp+1
  2398     02B0  0875               	movf	??_Lcd_Write_Str+1,w
  2399     02B1  0084               	movwf	4
  2400     02B2  120A  118A  2003  120A  118A  	fcall	stringtab
  2401     02B7  120A  118A  21CF  120A  118A  	fcall	_Lcd_Write
  2402     02BC                     l1259:
  2403     02BC  3001               	movlw	1
  2404     02BD  07F7               	addwf	Lcd_Write_Str@i,f
  2405     02BE  1803               	skipnc
  2406     02BF  0AF8               	incf	Lcd_Write_Str@i+1,f
  2407     02C0  3000               	movlw	0
  2408     02C1  07F8               	addwf	Lcd_Write_Str@i+1,f
  2409     02C2                     l1261:
  2410     02C2  0877               	movf	Lcd_Write_Str@i,w
  2411     02C3  0772               	addwf	Lcd_Write_Str@a,w
  2412     02C4  00F5               	movwf	??_Lcd_Write_Str+1
  2413     02C5  0873               	movf	Lcd_Write_Str@a+1,w
  2414     02C6  00F4               	movwf	??_Lcd_Write_Str
  2415     02C7  1803               	skipnc
  2416     02C8  0AF4               	incf	??_Lcd_Write_Str,f
  2417     02C9  1FF7               	btfss	Lcd_Write_Str@i,7
  2418     02CA  2ACC               	goto	u530
  2419     02CB  03F4               	decf	??_Lcd_Write_Str,f
  2420     02CC                     u530:
  2421     02CC  0874               	movf	??_Lcd_Write_Str,w
  2422     02CD  00F6               	movwf	??_Lcd_Write_Str+2
  2423     02CE  0876               	movf	??_Lcd_Write_Str+2,w
  2424     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2425     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2426     02D1  00FF               	movwf	btemp+1
  2427     02D2  0875               	movf	??_Lcd_Write_Str+1,w
  2428     02D3  0084               	movwf	4
  2429     02D4  120A  118A  2003  120A  118A  	fcall	stringtab
  2430     02D9  3A00               	xorlw	0
  2431     02DA  1D03               	skipz
  2432     02DB  2ADD               	goto	u541
  2433     02DC  2ADE               	goto	u540
  2434     02DD                     u541:
  2435     02DD  2AA0               	goto	l1257
  2436     02DE                     u540:
  2437     02DE                     l177:
  2438     02DE  0008               	return
  2439     02DF                     __end_of_Lcd_Write_Str:
  2440                           
  2441                           	psect	text10
  2442     01CF                     __ptext10:	
  2443 ;; *************** function _Lcd_Write *****************
  2444 ;; Defined at:
  2445 ;;		line 53 in file "C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  a               1    wreg     unsigned char 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  a               1    1[COMMON] unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2459 ;;      Params:         0       0       0       0       0
  2460 ;;      Locals:         1       0       0       0       0
  2461 ;;      Temps:          1       0       0       0       0
  2462 ;;      Totals:         2       0       0       0       0
  2463 ;;Total ram usage:        2 bytes
  2464 ;; Hardware stack levels used: 1
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_Lcd_Write_Str
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472     01CF                     _Lcd_Write:	
  2473                           ;psect for function _Lcd_Write
  2474                           
  2475                           
  2476                           ;incstack = 0
  2477                           ; Regs used in _Lcd_Write: [wreg]
  2478                           ;Lcd_Write@a stored from wreg
  2479     01CF  00F1               	movwf	Lcd_Write@a
  2480     01D0                     l1239:
  2481                           
  2482                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 54:     RC6 = 1
      +                          ;
  2483     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2484     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2485     01D2  1707               	bsf	7,6	;volatile
  2486     01D3                     l1241:
  2487                           
  2488                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 55:     PORTD =
      +                           a;
  2489     01D3  0871               	movf	Lcd_Write@a,w
  2490     01D4  0088               	movwf	8	;volatile
  2491     01D5                     l1243:
  2492                           
  2493                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 56:     RC7 = 1
      +                          ;
  2494     01D5  1787               	bsf	7,7	;volatile
  2495                           
  2496                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 57:     _delay(
      +                          (unsigned long)((40)*(8000000/4000000.0)));
  2497     01D6  301A               	movlw	26
  2498     01D7  00F0               	movwf	??_Lcd_Write
  2499     01D8                     u1087:
  2500     01D8  0BF0               	decfsz	??_Lcd_Write,f
  2501     01D9  29D8               	goto	u1087
  2502     01DA  0000               	nop
  2503     01DB                     l1245:
  2504                           
  2505                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 58:     RC7 = 0
      +                          ;
  2506     01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2507     01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2508     01DD  1387               	bcf	7,7	;volatile
  2509     01DE                     l171:
  2510     01DE  0008               	return
  2511     01DF                     __end_of_Lcd_Write:
  2512                           
  2513                           	psect	text11
  2514     0209                     __ptext11:	
  2515 ;; *************** function _Lcd_Set *****************
  2516 ;; Defined at:
  2517 ;;		line 21 in file "C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  a               1    wreg     unsigned char 
  2520 ;;  b               1    3[COMMON] unsigned char 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  a               1    4[COMMON] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         1       0       0       0       0
  2533 ;;      Locals:         1       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0
  2535 ;;      Totals:         2       0       0       0       0
  2536 ;;Total ram usage:        2 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; Hardware stack levels required when called: 1
  2539 ;; This function calls:
  2540 ;;		_Lcd_Cmd
  2541 ;; This function is called by:
  2542 ;;		_main
  2543 ;;		_setup
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547     0209                     _Lcd_Set:	
  2548                           ;psect for function _Lcd_Set
  2549                           
  2550                           
  2551                           ;incstack = 0
  2552                           ; Regs used in _Lcd_Set: [wreg+status,2+status,0+pclath+cstack]
  2553                           ;Lcd_Set@a stored from wreg
  2554     0209  00F4               	movwf	Lcd_Set@a
  2555     020A                     l1247:
  2556                           
  2557                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 22:     if (a =
      +                          = 1){
  2558     020A  0374               	decf	Lcd_Set@a,w
  2559     020B  1D03               	btfss	3,2
  2560     020C  2A0E               	goto	u501
  2561     020D  2A0F               	goto	u500
  2562     020E                     u501:
  2563     020E  2A18               	goto	l1251
  2564     020F                     u500:
  2565     020F                     l1249:
  2566                           
  2567                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 23:         Lcd
      +                          _Cmd((b & 0x0F)|0x80);
  2568     020F  0873               	movf	Lcd_Set@b,w
  2569     0210  390F               	andlw	15
  2570     0211  3880               	iorlw	128
  2571     0212  120A  118A  21DF  120A  118A  	fcall	_Lcd_Cmd
  2572                           
  2573                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 24:     }
  2574     0217  2A26               	goto	l165
  2575     0218                     l1251:
  2576     0218  3002               	movlw	2
  2577     0219  0674               	xorwf	Lcd_Set@a,w
  2578     021A  1D03               	btfss	3,2
  2579     021B  2A1D               	goto	u511
  2580     021C  2A1E               	goto	u510
  2581     021D                     u511:
  2582     021D  2A26               	goto	l165
  2583     021E                     u510:
  2584     021E                     l1253:
  2585                           
  2586                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 26:         Lcd
      +                          _Cmd((b & 0x0F)|0xC0);
  2587     021E  0873               	movf	Lcd_Set@b,w
  2588     021F  390F               	andlw	15
  2589     0220  38C0               	iorlw	192
  2590     0221  120A  118A  21DF  120A  118A  	fcall	_Lcd_Cmd
  2591     0226                     l165:
  2592     0226  0008               	return
  2593     0227                     __end_of_Lcd_Set:
  2594                           
  2595                           	psect	text12
  2596     0323                     __ptext12:	
  2597 ;; *************** function _Lcd_Init *****************
  2598 ;; Defined at:
  2599 ;;		line 30 in file "C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0, pclath, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2613 ;;      Params:         0       0       0       0       0
  2614 ;;      Locals:         0       0       0       0       0
  2615 ;;      Temps:          2       0       0       0       0
  2616 ;;      Totals:         2       0       0       0       0
  2617 ;;Total ram usage:        2 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; Hardware stack levels required when called: 1
  2620 ;; This function calls:
  2621 ;;		_Lcd_Cmd
  2622 ;; This function is called by:
  2623 ;;		_setup
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627     0323                     _Lcd_Init:	
  2628                           ;psect for function _Lcd_Init
  2629                           
  2630     0323                     l1273:	
  2631                           ;incstack = 0
  2632                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2633                           
  2634                           
  2635                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 31:     PORTD =
      +                           (0x00);
  2636     0323  1283               	bcf	3,5	;RP0=0, select bank0
  2637     0324  1303               	bcf	3,6	;RP1=0, select bank0
  2638     0325  0188               	clrf	8	;volatile
  2639     0326                     l1275:
  2640                           
  2641                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 32:     _delay(
      +                          (unsigned long)((15)*(8000000/4000.0)));
  2642     0326  3027               	movlw	39
  2643     0327  00F4               	movwf	??_Lcd_Init+1
  2644     0328  30F5               	movlw	245
  2645     0329  00F3               	movwf	??_Lcd_Init
  2646     032A                     u1097:
  2647     032A  0BF3               	decfsz	??_Lcd_Init,f
  2648     032B  2B2A               	goto	u1097
  2649     032C  0BF4               	decfsz	??_Lcd_Init+1,f
  2650     032D  2B2A               	goto	u1097
  2651     032E                     l1277:
  2652                           
  2653                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 34:     Lcd_Cmd
      +                          (0x30);
  2654     032E  3030               	movlw	48
  2655     032F  120A  118A  21DF  120A  118A  	fcall	_Lcd_Cmd
  2656     0334                     l1279:
  2657                           
  2658                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 35:     _delay(
      +                          (unsigned long)((4)*(8000000/4000.0)));
  2659     0334  300B               	movlw	11
  2660     0335  00F4               	movwf	??_Lcd_Init+1
  2661     0336  3062               	movlw	98
  2662     0337  00F3               	movwf	??_Lcd_Init
  2663     0338                     u1107:
  2664     0338  0BF3               	decfsz	??_Lcd_Init,f
  2665     0339  2B38               	goto	u1107
  2666     033A  0BF4               	decfsz	??_Lcd_Init+1,f
  2667     033B  2B38               	goto	u1107
  2668     033C  0000               	nop
  2669     033D                     l1281:
  2670                           
  2671                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 36:     Lcd_Cmd
      +                          (0x30);
  2672     033D  3030               	movlw	48
  2673     033E  120A  118A  21DF  120A  118A  	fcall	_Lcd_Cmd
  2674     0343                     l1283:
  2675                           
  2676                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 37:     _delay(
      +                          (unsigned long)((100)*(8000000/4000000.0)));
  2677     0343  3042               	movlw	66
  2678     0344  00F3               	movwf	??_Lcd_Init
  2679     0345                     u1117:
  2680     0345  0BF3               	decfsz	??_Lcd_Init,f
  2681     0346  2B45               	goto	u1117
  2682     0347  0000               	nop
  2683     0348                     l1285:
  2684                           
  2685                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 38:     Lcd_Cmd
      +                          (0x30);
  2686     0348  3030               	movlw	48
  2687     0349  120A  118A  21DF  120A  118A  	fcall	_Lcd_Cmd
  2688     034E                     l1287:
  2689                           
  2690                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 40:     Lcd_Cmd
      +                          (0x38);
  2691     034E  3038               	movlw	56
  2692     034F  120A  118A  21DF  120A  118A  	fcall	_Lcd_Cmd
  2693     0354                     l1289:
  2694                           
  2695                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 42:     Lcd_Cmd
      +                          (0x00);
  2696     0354  3000               	movlw	0
  2697     0355  120A  118A  21DF  120A  118A  	fcall	_Lcd_Cmd
  2698     035A                     l1291:
  2699                           
  2700                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 44:     Lcd_Cmd
      +                          (0x0C);
  2701     035A  300C               	movlw	12
  2702     035B  120A  118A  21DF  120A  118A  	fcall	_Lcd_Cmd
  2703     0360                     l1293:
  2704                           
  2705                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 46:     Lcd_Cmd
      +                          (0x00);
  2706     0360  3000               	movlw	0
  2707     0361  120A  118A  21DF  120A  118A  	fcall	_Lcd_Cmd
  2708     0366                     l1295:
  2709                           
  2710                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 48:     Lcd_Cmd
      +                          (0x06);
  2711     0366  3006               	movlw	6
  2712     0367  120A  118A  21DF  120A  118A  	fcall	_Lcd_Cmd
  2713     036C                     l168:
  2714     036C  0008               	return
  2715     036D                     __end_of_Lcd_Init:
  2716                           
  2717                           	psect	text13
  2718     01C2                     __ptext13:	
  2719 ;; *************** function _Lcd_Clear *****************
  2720 ;; Defined at:
  2721 ;;		line 16 in file "C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;		None
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0, pclath, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2735 ;;      Params:         0       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0
  2738 ;;      Totals:         0       0       0       0       0
  2739 ;;Total ram usage:        0 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 1
  2742 ;; This function calls:
  2743 ;;		_Lcd_Cmd
  2744 ;; This function is called by:
  2745 ;;		_setup
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749     01C2                     _Lcd_Clear:	
  2750                           ;psect for function _Lcd_Clear
  2751                           
  2752     01C2                     l1297:	
  2753                           ;incstack = 0
  2754                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2755                           
  2756                           
  2757                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 17:     Lcd_Cmd
      +                          (0);
  2758     01C2  3000               	movlw	0
  2759     01C3  120A  118A  21DF  120A  118A  	fcall	_Lcd_Cmd
  2760                           
  2761                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 18:     Lcd_Cmd
      +                          (1);
  2762     01C8  3001               	movlw	1
  2763     01C9  120A  118A  21DF  120A  118A  	fcall	_Lcd_Cmd
  2764     01CE                     l159:
  2765     01CE  0008               	return
  2766     01CF                     __end_of_Lcd_Clear:
  2767                           
  2768                           	psect	text14
  2769     01DF                     __ptext14:	
  2770 ;; *************** function _Lcd_Cmd *****************
  2771 ;; Defined at:
  2772 ;;		line 8 in file "C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  a               1    wreg     unsigned char 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  a               1    2[COMMON] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2786 ;;      Params:         0       0       0       0       0
  2787 ;;      Locals:         1       0       0       0       0
  2788 ;;      Temps:          2       0       0       0       0
  2789 ;;      Totals:         3       0       0       0       0
  2790 ;;Total ram usage:        3 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_Lcd_Clear
  2796 ;;		_Lcd_Set
  2797 ;;		_Lcd_Init
  2798 ;;		_Lcd_ShiftR
  2799 ;;		_Lcd_ShiftL
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803     01DF                     _Lcd_Cmd:	
  2804                           ;psect for function _Lcd_Cmd
  2805                           
  2806                           
  2807                           ;incstack = 0
  2808                           ; Regs used in _Lcd_Cmd: [wreg]
  2809                           ;Lcd_Cmd@a stored from wreg
  2810     01DF  00F2               	movwf	Lcd_Cmd@a
  2811     01E0                     l1231:
  2812                           
  2813                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 9:     RC6 = 0;
  2814     01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2815     01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2816     01E2  1307               	bcf	7,6	;volatile
  2817     01E3                     l1233:
  2818                           
  2819                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 10:     PORTD =
      +                           a;
  2820     01E3  0872               	movf	Lcd_Cmd@a,w
  2821     01E4  0088               	movwf	8	;volatile
  2822     01E5                     l1235:
  2823                           
  2824                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 11:     RC7 = 1
      +                          ;
  2825     01E5  1787               	bsf	7,7	;volatile
  2826                           
  2827                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 12:     _delay(
      +                          (unsigned long)((4)*(8000000/4000.0)));
  2828     01E6  300B               	movlw	11
  2829     01E7  00F1               	movwf	??_Lcd_Cmd+1
  2830     01E8  3062               	movlw	98
  2831     01E9  00F0               	movwf	??_Lcd_Cmd
  2832     01EA                     u1127:
  2833     01EA  0BF0               	decfsz	??_Lcd_Cmd,f
  2834     01EB  29EA               	goto	u1127
  2835     01EC  0BF1               	decfsz	??_Lcd_Cmd+1,f
  2836     01ED  29EA               	goto	u1127
  2837     01EE  0000               	nop
  2838     01EF                     l1237:
  2839                           
  2840                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Master.X/LCD.c: 13:     RC7 = 0
      +                          ;
  2841     01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2842     01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2843     01F1  1387               	bcf	7,7	;volatile
  2844     01F2                     l156:
  2845     01F2  0008               	return
  2846     01F3                     __end_of_Lcd_Cmd:
  2847                           
  2848                           	psect	text15
  2849     0486                     __ptext15:	
  2850 ;; *************** function _Division3 *****************
  2851 ;; Defined at:
  2852 ;;		line 60 in file "main.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  y               1    wreg     unsigned char 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  y               1    6[BANK0 ] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0, pclath, cstack
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2866 ;;      Params:         0       0       0       0       0
  2867 ;;      Locals:         0       3       0       0       0
  2868 ;;      Temps:          2       0       0       0       0
  2869 ;;      Totals:         2       3       0       0       0
  2870 ;;Total ram usage:        5 bytes
  2871 ;; Hardware stack levels used: 1
  2872 ;; Hardware stack levels required when called: 1
  2873 ;; This function calls:
  2874 ;;		___awdiv
  2875 ;;		___awmod
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881     0486                     _Division3:	
  2882                           ;psect for function _Division3
  2883                           
  2884                           
  2885                           ;incstack = 0
  2886                           ; Regs used in _Division3: [wreg+status,2+status,0+pclath+cstack]
  2887                           ;Division3@y stored from wreg
  2888     0486  1283               	bcf	3,5	;RP0=0, select bank0
  2889     0487  1303               	bcf	3,6	;RP1=0, select bank0
  2890     0488  00CD               	movwf	Division3@y
  2891     0489                     l1435:
  2892                           
  2893                           ;main.c: 61:     cen3 = (y / 100);
  2894     0489  3064               	movlw	100
  2895     048A  00F7               	movwf	___awdiv@divisor
  2896     048B  3000               	movlw	0
  2897     048C  00F8               	movwf	___awdiv@divisor+1
  2898     048D  084D               	movf	Division3@y,w
  2899     048E  00FC               	movwf	??_Division3
  2900     048F  01FD               	clrf	??_Division3+1
  2901     0490  087C               	movf	??_Division3,w
  2902     0491  00F9               	movwf	___awdiv@dividend
  2903     0492  087D               	movf	??_Division3+1,w
  2904     0493  00FA               	movwf	___awdiv@dividend+1
  2905     0494  120A  118A  24E6  120A  118A  	fcall	___awdiv
  2906     0499  0877               	movf	?___awdiv,w
  2907     049A  1283               	bcf	3,5	;RP0=0, select bank0
  2908     049B  1303               	bcf	3,6	;RP1=0, select bank0
  2909     049C  00B0               	movwf	_cen3
  2910                           
  2911                           ;main.c: 62:     dec3 = ((y % 100) / 10);
  2912     049D  300A               	movlw	10
  2913     049E  00F7               	movwf	___awdiv@divisor
  2914     049F  3000               	movlw	0
  2915     04A0  00F8               	movwf	___awdiv@divisor+1
  2916     04A1  084D               	movf	Division3@y,w
  2917     04A2  00FC               	movwf	??_Division3
  2918     04A3  01FD               	clrf	??_Division3+1
  2919     04A4  087C               	movf	??_Division3,w
  2920     04A5  00F2               	movwf	___awmod@dividend
  2921     04A6  087D               	movf	??_Division3+1,w
  2922     04A7  00F3               	movwf	___awmod@dividend+1
  2923     04A8  3064               	movlw	100
  2924     04A9  00F0               	movwf	___awmod@divisor
  2925     04AA  3000               	movlw	0
  2926     04AB  00F1               	movwf	___awmod@divisor+1
  2927     04AC  120A  118A  236D  120A  118A  	fcall	___awmod
  2928     04B1  0871               	movf	?___awmod+1,w
  2929     04B2  00FA               	movwf	___awdiv@dividend+1
  2930     04B3  0870               	movf	?___awmod,w
  2931     04B4  00F9               	movwf	___awdiv@dividend
  2932     04B5  120A  118A  24E6  120A  118A  	fcall	___awdiv
  2933     04BA  0877               	movf	?___awdiv,w
  2934     04BB  1283               	bcf	3,5	;RP0=0, select bank0
  2935     04BC  1303               	bcf	3,6	;RP1=0, select bank0
  2936     04BD  00AF               	movwf	_dec3
  2937                           
  2938                           ;main.c: 63:     uni3 = ((y % 100) % 10);
  2939     04BE  084D               	movf	Division3@y,w
  2940     04BF  00FC               	movwf	??_Division3
  2941     04C0  01FD               	clrf	??_Division3+1
  2942     04C1  087C               	movf	??_Division3,w
  2943     04C2  00F2               	movwf	___awmod@dividend
  2944     04C3  087D               	movf	??_Division3+1,w
  2945     04C4  00F3               	movwf	___awmod@dividend+1
  2946     04C5  3064               	movlw	100
  2947     04C6  00F0               	movwf	___awmod@divisor
  2948     04C7  3000               	movlw	0
  2949     04C8  00F1               	movwf	___awmod@divisor+1
  2950     04C9  120A  118A  236D  120A  118A  	fcall	___awmod
  2951     04CE  0871               	movf	?___awmod+1,w
  2952     04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2953     04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2954     04D1  00CC               	movwf	_Division3$1079+1
  2955     04D2  0870               	movf	?___awmod,w
  2956     04D3  00CB               	movwf	_Division3$1079
  2957                           
  2958                           ;main.c: 63:     uni3 = ((y % 100) % 10);
  2959     04D4  300A               	movlw	10
  2960     04D5  00F0               	movwf	___awmod@divisor
  2961     04D6  3000               	movlw	0
  2962     04D7  00F1               	movwf	___awmod@divisor+1
  2963     04D8  084C               	movf	_Division3$1079+1,w
  2964     04D9  00F3               	movwf	___awmod@dividend+1
  2965     04DA  084B               	movf	_Division3$1079,w
  2966     04DB  00F2               	movwf	___awmod@dividend
  2967     04DC  120A  118A  236D  120A  118A  	fcall	___awmod
  2968     04E1  0870               	movf	?___awmod,w
  2969     04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2970     04E3  1303               	bcf	3,6	;RP1=0, select bank0
  2971     04E4  00AE               	movwf	_uni3
  2972     04E5                     l91:
  2973     04E5  0008               	return
  2974     04E6                     __end_of_Division3:
  2975                           
  2976                           	psect	text16
  2977     0426                     __ptext16:	
  2978 ;; *************** function _Division2 *****************
  2979 ;; Defined at:
  2980 ;;		line 55 in file "main.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  y               1    wreg     unsigned char 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  y               1    6[BANK0 ] unsigned char 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0, pclath, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2994 ;;      Params:         0       0       0       0       0
  2995 ;;      Locals:         0       3       0       0       0
  2996 ;;      Temps:          2       0       0       0       0
  2997 ;;      Totals:         2       3       0       0       0
  2998 ;;Total ram usage:        5 bytes
  2999 ;; Hardware stack levels used: 1
  3000 ;; Hardware stack levels required when called: 1
  3001 ;; This function calls:
  3002 ;;		___awdiv
  3003 ;;		___awmod
  3004 ;; This function is called by:
  3005 ;;		_main
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009     0426                     _Division2:	
  3010                           ;psect for function _Division2
  3011                           
  3012                           
  3013                           ;incstack = 0
  3014                           ; Regs used in _Division2: [wreg+status,2+status,0+pclath+cstack]
  3015                           ;Division2@y stored from wreg
  3016     0426  1283               	bcf	3,5	;RP0=0, select bank0
  3017     0427  1303               	bcf	3,6	;RP1=0, select bank0
  3018     0428  00CD               	movwf	Division2@y
  3019     0429                     l1433:
  3020                           
  3021                           ;main.c: 56:     cen2 = (y / 100);
  3022     0429  3064               	movlw	100
  3023     042A  00F7               	movwf	___awdiv@divisor
  3024     042B  3000               	movlw	0
  3025     042C  00F8               	movwf	___awdiv@divisor+1
  3026     042D  084D               	movf	Division2@y,w
  3027     042E  00FC               	movwf	??_Division2
  3028     042F  01FD               	clrf	??_Division2+1
  3029     0430  087C               	movf	??_Division2,w
  3030     0431  00F9               	movwf	___awdiv@dividend
  3031     0432  087D               	movf	??_Division2+1,w
  3032     0433  00FA               	movwf	___awdiv@dividend+1
  3033     0434  120A  118A  24E6  120A  118A  	fcall	___awdiv
  3034     0439  0877               	movf	?___awdiv,w
  3035     043A  1283               	bcf	3,5	;RP0=0, select bank0
  3036     043B  1303               	bcf	3,6	;RP1=0, select bank0
  3037     043C  00B3               	movwf	_cen2
  3038                           
  3039                           ;main.c: 57:     dec2= ((y % 100) / 10);
  3040     043D  300A               	movlw	10
  3041     043E  00F7               	movwf	___awdiv@divisor
  3042     043F  3000               	movlw	0
  3043     0440  00F8               	movwf	___awdiv@divisor+1
  3044     0441  084D               	movf	Division2@y,w
  3045     0442  00FC               	movwf	??_Division2
  3046     0443  01FD               	clrf	??_Division2+1
  3047     0444  087C               	movf	??_Division2,w
  3048     0445  00F2               	movwf	___awmod@dividend
  3049     0446  087D               	movf	??_Division2+1,w
  3050     0447  00F3               	movwf	___awmod@dividend+1
  3051     0448  3064               	movlw	100
  3052     0449  00F0               	movwf	___awmod@divisor
  3053     044A  3000               	movlw	0
  3054     044B  00F1               	movwf	___awmod@divisor+1
  3055     044C  120A  118A  236D  120A  118A  	fcall	___awmod
  3056     0451  0871               	movf	?___awmod+1,w
  3057     0452  00FA               	movwf	___awdiv@dividend+1
  3058     0453  0870               	movf	?___awmod,w
  3059     0454  00F9               	movwf	___awdiv@dividend
  3060     0455  120A  118A  24E6  120A  118A  	fcall	___awdiv
  3061     045A  0877               	movf	?___awdiv,w
  3062     045B  1283               	bcf	3,5	;RP0=0, select bank0
  3063     045C  1303               	bcf	3,6	;RP1=0, select bank0
  3064     045D  00B2               	movwf	_dec2
  3065                           
  3066                           ;main.c: 58:     uni2 = ((y % 100) % 10);
  3067     045E  084D               	movf	Division2@y,w
  3068     045F  00FC               	movwf	??_Division2
  3069     0460  01FD               	clrf	??_Division2+1
  3070     0461  087C               	movf	??_Division2,w
  3071     0462  00F2               	movwf	___awmod@dividend
  3072     0463  087D               	movf	??_Division2+1,w
  3073     0464  00F3               	movwf	___awmod@dividend+1
  3074     0465  3064               	movlw	100
  3075     0466  00F0               	movwf	___awmod@divisor
  3076     0467  3000               	movlw	0
  3077     0468  00F1               	movwf	___awmod@divisor+1
  3078     0469  120A  118A  236D  120A  118A  	fcall	___awmod
  3079     046E  0871               	movf	?___awmod+1,w
  3080     046F  1283               	bcf	3,5	;RP0=0, select bank0
  3081     0470  1303               	bcf	3,6	;RP1=0, select bank0
  3082     0471  00CC               	movwf	_Division2$1078+1
  3083     0472  0870               	movf	?___awmod,w
  3084     0473  00CB               	movwf	_Division2$1078
  3085                           
  3086                           ;main.c: 58:     uni2 = ((y % 100) % 10);
  3087     0474  300A               	movlw	10
  3088     0475  00F0               	movwf	___awmod@divisor
  3089     0476  3000               	movlw	0
  3090     0477  00F1               	movwf	___awmod@divisor+1
  3091     0478  084C               	movf	_Division2$1078+1,w
  3092     0479  00F3               	movwf	___awmod@dividend+1
  3093     047A  084B               	movf	_Division2$1078,w
  3094     047B  00F2               	movwf	___awmod@dividend
  3095     047C  120A  118A  236D  120A  118A  	fcall	___awmod
  3096     0481  0870               	movf	?___awmod,w
  3097     0482  1283               	bcf	3,5	;RP0=0, select bank0
  3098     0483  1303               	bcf	3,6	;RP1=0, select bank0
  3099     0484  00B1               	movwf	_uni2
  3100     0485                     l88:
  3101     0485  0008               	return
  3102     0486                     __end_of_Division2:
  3103                           
  3104                           	psect	text17
  3105     03C6                     __ptext17:	
  3106 ;; *************** function _Division *****************
  3107 ;; Defined at:
  3108 ;;		line 50 in file "main.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  y               1    wreg     unsigned char 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  y               1    6[BANK0 ] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       0       0       0       0
  3123 ;;      Locals:         0       3       0       0       0
  3124 ;;      Temps:          2       0       0       0       0
  3125 ;;      Totals:         2       3       0       0       0
  3126 ;;Total ram usage:        5 bytes
  3127 ;; Hardware stack levels used: 1
  3128 ;; Hardware stack levels required when called: 1
  3129 ;; This function calls:
  3130 ;;		___awdiv
  3131 ;;		___awmod
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137     03C6                     _Division:	
  3138                           ;psect for function _Division
  3139                           
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
  3143                           ;Division@y stored from wreg
  3144     03C6  1283               	bcf	3,5	;RP0=0, select bank0
  3145     03C7  1303               	bcf	3,6	;RP1=0, select bank0
  3146     03C8  00CD               	movwf	Division@y
  3147     03C9                     l1431:
  3148                           
  3149                           ;main.c: 51:     cen = (y / 100);
  3150     03C9  3064               	movlw	100
  3151     03CA  00F7               	movwf	___awdiv@divisor
  3152     03CB  3000               	movlw	0
  3153     03CC  00F8               	movwf	___awdiv@divisor+1
  3154     03CD  084D               	movf	Division@y,w
  3155     03CE  00FC               	movwf	??_Division
  3156     03CF  01FD               	clrf	??_Division+1
  3157     03D0  087C               	movf	??_Division,w
  3158     03D1  00F9               	movwf	___awdiv@dividend
  3159     03D2  087D               	movf	??_Division+1,w
  3160     03D3  00FA               	movwf	___awdiv@dividend+1
  3161     03D4  120A  118A  24E6  120A  118A  	fcall	___awdiv
  3162     03D9  0877               	movf	?___awdiv,w
  3163     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  3164     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  3165     03DC  00B6               	movwf	_cen
  3166                           
  3167                           ;main.c: 52:     dec = ((y % 100) / 10);
  3168     03DD  300A               	movlw	10
  3169     03DE  00F7               	movwf	___awdiv@divisor
  3170     03DF  3000               	movlw	0
  3171     03E0  00F8               	movwf	___awdiv@divisor+1
  3172     03E1  084D               	movf	Division@y,w
  3173     03E2  00FC               	movwf	??_Division
  3174     03E3  01FD               	clrf	??_Division+1
  3175     03E4  087C               	movf	??_Division,w
  3176     03E5  00F2               	movwf	___awmod@dividend
  3177     03E6  087D               	movf	??_Division+1,w
  3178     03E7  00F3               	movwf	___awmod@dividend+1
  3179     03E8  3064               	movlw	100
  3180     03E9  00F0               	movwf	___awmod@divisor
  3181     03EA  3000               	movlw	0
  3182     03EB  00F1               	movwf	___awmod@divisor+1
  3183     03EC  120A  118A  236D  120A  118A  	fcall	___awmod
  3184     03F1  0871               	movf	?___awmod+1,w
  3185     03F2  00FA               	movwf	___awdiv@dividend+1
  3186     03F3  0870               	movf	?___awmod,w
  3187     03F4  00F9               	movwf	___awdiv@dividend
  3188     03F5  120A  118A  24E6  120A  118A  	fcall	___awdiv
  3189     03FA  0877               	movf	?___awdiv,w
  3190     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  3191     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  3192     03FD  00B5               	movwf	_dec
  3193                           
  3194                           ;main.c: 53:     uni = ((y % 100) % 10);
  3195     03FE  084D               	movf	Division@y,w
  3196     03FF  00FC               	movwf	??_Division
  3197     0400  01FD               	clrf	??_Division+1
  3198     0401  087C               	movf	??_Division,w
  3199     0402  00F2               	movwf	___awmod@dividend
  3200     0403  087D               	movf	??_Division+1,w
  3201     0404  00F3               	movwf	___awmod@dividend+1
  3202     0405  3064               	movlw	100
  3203     0406  00F0               	movwf	___awmod@divisor
  3204     0407  3000               	movlw	0
  3205     0408  00F1               	movwf	___awmod@divisor+1
  3206     0409  120A  118A  236D  120A  118A  	fcall	___awmod
  3207     040E  0871               	movf	?___awmod+1,w
  3208     040F  1283               	bcf	3,5	;RP0=0, select bank0
  3209     0410  1303               	bcf	3,6	;RP1=0, select bank0
  3210     0411  00CC               	movwf	_Division$1077+1
  3211     0412  0870               	movf	?___awmod,w
  3212     0413  00CB               	movwf	_Division$1077
  3213                           
  3214                           ;main.c: 53:     uni = ((y % 100) % 10);
  3215     0414  300A               	movlw	10
  3216     0415  00F0               	movwf	___awmod@divisor
  3217     0416  3000               	movlw	0
  3218     0417  00F1               	movwf	___awmod@divisor+1
  3219     0418  084C               	movf	_Division$1077+1,w
  3220     0419  00F3               	movwf	___awmod@dividend+1
  3221     041A  084B               	movf	_Division$1077,w
  3222     041B  00F2               	movwf	___awmod@dividend
  3223     041C  120A  118A  236D  120A  118A  	fcall	___awmod
  3224     0421  0870               	movf	?___awmod,w
  3225     0422  1283               	bcf	3,5	;RP0=0, select bank0
  3226     0423  1303               	bcf	3,6	;RP1=0, select bank0
  3227     0424  00B4               	movwf	_uni
  3228     0425                     l85:
  3229     0425  0008               	return
  3230     0426                     __end_of_Division:
  3231                           
  3232                           	psect	text18
  3233     036D                     __ptext18:	
  3234 ;; *************** function ___awmod *****************
  3235 ;; Defined at:
  3236 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  divisor         2    0[COMMON] int 
  3239 ;;  dividend        2    2[COMMON] int 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  sign            1    6[COMMON] unsigned char 
  3242 ;;  counter         1    5[COMMON] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  2    0[COMMON] int 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3252 ;;      Params:         4       0       0       0       0
  3253 ;;      Locals:         2       0       0       0       0
  3254 ;;      Temps:          1       0       0       0       0
  3255 ;;      Totals:         7       0       0       0       0
  3256 ;;Total ram usage:        7 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_Division
  3262 ;;		_Division2
  3263 ;;		_Division3
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267     036D                     ___awmod:	
  3268                           ;psect for function ___awmod
  3269                           
  3270     036D                     l1345:	
  3271                           ;incstack = 0
  3272                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3273                           
  3274     036D  01F6               	clrf	___awmod@sign
  3275     036E                     l1347:
  3276     036E  1FF3               	btfss	___awmod@dividend+1,7
  3277     036F  2B71               	goto	u671
  3278     0370  2B72               	goto	u670
  3279     0371                     u671:
  3280     0371  2B79               	goto	l1353
  3281     0372                     u670:
  3282     0372                     l1349:
  3283     0372  09F2               	comf	___awmod@dividend,f
  3284     0373  09F3               	comf	___awmod@dividend+1,f
  3285     0374  0AF2               	incf	___awmod@dividend,f
  3286     0375  1903               	skipnz
  3287     0376  0AF3               	incf	___awmod@dividend+1,f
  3288     0377                     l1351:
  3289     0377  01F6               	clrf	___awmod@sign
  3290     0378  0AF6               	incf	___awmod@sign,f
  3291     0379                     l1353:
  3292     0379  1FF1               	btfss	___awmod@divisor+1,7
  3293     037A  2B7C               	goto	u681
  3294     037B  2B7D               	goto	u680
  3295     037C                     u681:
  3296     037C  2B82               	goto	l1357
  3297     037D                     u680:
  3298     037D                     l1355:
  3299     037D  09F0               	comf	___awmod@divisor,f
  3300     037E  09F1               	comf	___awmod@divisor+1,f
  3301     037F  0AF0               	incf	___awmod@divisor,f
  3302     0380  1903               	skipnz
  3303     0381  0AF1               	incf	___awmod@divisor+1,f
  3304     0382                     l1357:
  3305     0382  0870               	movf	___awmod@divisor,w
  3306     0383  0471               	iorwf	___awmod@divisor+1,w
  3307     0384  1903               	btfsc	3,2
  3308     0385  2B87               	goto	u691
  3309     0386  2B88               	goto	u690
  3310     0387                     u691:
  3311     0387  2BB7               	goto	l1375
  3312     0388                     u690:
  3313     0388                     l1359:
  3314     0388  01F5               	clrf	___awmod@counter
  3315     0389  0AF5               	incf	___awmod@counter,f
  3316     038A  2B96               	goto	l1365
  3317     038B                     l1361:
  3318     038B  3001               	movlw	1
  3319     038C                     u705:
  3320     038C  1003               	clrc
  3321     038D  0DF0               	rlf	___awmod@divisor,f
  3322     038E  0DF1               	rlf	___awmod@divisor+1,f
  3323     038F  3EFF               	addlw	-1
  3324     0390  1D03               	skipz
  3325     0391  2B8C               	goto	u705
  3326     0392                     l1363:
  3327     0392  3001               	movlw	1
  3328     0393  00F4               	movwf	??___awmod
  3329     0394  0874               	movf	??___awmod,w
  3330     0395  07F5               	addwf	___awmod@counter,f
  3331     0396                     l1365:
  3332     0396  1FF1               	btfss	___awmod@divisor+1,7
  3333     0397  2B99               	goto	u711
  3334     0398  2B9A               	goto	u710
  3335     0399                     u711:
  3336     0399  2B8B               	goto	l1361
  3337     039A                     u710:
  3338     039A                     l1367:
  3339     039A  0871               	movf	___awmod@divisor+1,w
  3340     039B  0273               	subwf	___awmod@dividend+1,w
  3341     039C  1D03               	skipz
  3342     039D  2BA0               	goto	u725
  3343     039E  0870               	movf	___awmod@divisor,w
  3344     039F  0272               	subwf	___awmod@dividend,w
  3345     03A0                     u725:
  3346     03A0  1C03               	skipc
  3347     03A1  2BA3               	goto	u721
  3348     03A2  2BA4               	goto	u720
  3349     03A3                     u721:
  3350     03A3  2BAA               	goto	l1371
  3351     03A4                     u720:
  3352     03A4                     l1369:
  3353     03A4  0870               	movf	___awmod@divisor,w
  3354     03A5  02F2               	subwf	___awmod@dividend,f
  3355     03A6  0871               	movf	___awmod@divisor+1,w
  3356     03A7  1C03               	skipc
  3357     03A8  03F3               	decf	___awmod@dividend+1,f
  3358     03A9  02F3               	subwf	___awmod@dividend+1,f
  3359     03AA                     l1371:
  3360     03AA  3001               	movlw	1
  3361     03AB                     u735:
  3362     03AB  1003               	clrc
  3363     03AC  0CF1               	rrf	___awmod@divisor+1,f
  3364     03AD  0CF0               	rrf	___awmod@divisor,f
  3365     03AE  3EFF               	addlw	-1
  3366     03AF  1D03               	skipz
  3367     03B0  2BAB               	goto	u735
  3368     03B1                     l1373:
  3369     03B1  3001               	movlw	1
  3370     03B2  02F5               	subwf	___awmod@counter,f
  3371     03B3  1D03               	btfss	3,2
  3372     03B4  2BB6               	goto	u741
  3373     03B5  2BB7               	goto	u740
  3374     03B6                     u741:
  3375     03B6  2B9A               	goto	l1367
  3376     03B7                     u740:
  3377     03B7                     l1375:
  3378     03B7  0876               	movf	___awmod@sign,w
  3379     03B8  1903               	btfsc	3,2
  3380     03B9  2BBB               	goto	u751
  3381     03BA  2BBC               	goto	u750
  3382     03BB                     u751:
  3383     03BB  2BC1               	goto	l1379
  3384     03BC                     u750:
  3385     03BC                     l1377:
  3386     03BC  09F2               	comf	___awmod@dividend,f
  3387     03BD  09F3               	comf	___awmod@dividend+1,f
  3388     03BE  0AF2               	incf	___awmod@dividend,f
  3389     03BF  1903               	skipnz
  3390     03C0  0AF3               	incf	___awmod@dividend+1,f
  3391     03C1                     l1379:
  3392     03C1  0873               	movf	___awmod@dividend+1,w
  3393     03C2  00F1               	movwf	?___awmod+1
  3394     03C3  0872               	movf	___awmod@dividend,w
  3395     03C4  00F0               	movwf	?___awmod
  3396     03C5                     l463:
  3397     03C5  0008               	return
  3398     03C6                     __end_of___awmod:
  3399                           
  3400                           	psect	text19
  3401     04E6                     __ptext19:	
  3402 ;; *************** function ___awdiv *****************
  3403 ;; Defined at:
  3404 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  divisor         2    7[COMMON] int 
  3407 ;;  dividend        2    9[COMMON] int 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  quotient        2    2[BANK0 ] int 
  3410 ;;  sign            1    1[BANK0 ] unsigned char 
  3411 ;;  counter         1    0[BANK0 ] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  2    7[COMMON] int 
  3414 ;; Registers used:
  3415 ;;		wreg, status,2, status,0
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3421 ;;      Params:         4       0       0       0       0
  3422 ;;      Locals:         0       4       0       0       0
  3423 ;;      Temps:          1       0       0       0       0
  3424 ;;      Totals:         5       4       0       0       0
  3425 ;;Total ram usage:        9 bytes
  3426 ;; Hardware stack levels used: 1
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_Division
  3431 ;;		_Division2
  3432 ;;		_Division3
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436     04E6                     ___awdiv:	
  3437                           ;psect for function ___awdiv
  3438                           
  3439     04E6                     l1301:	
  3440                           ;incstack = 0
  3441                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3442                           
  3443     04E6  1283               	bcf	3,5	;RP0=0, select bank0
  3444     04E7  1303               	bcf	3,6	;RP1=0, select bank0
  3445     04E8  01C8               	clrf	___awdiv@sign
  3446     04E9                     l1303:
  3447     04E9  1FF8               	btfss	___awdiv@divisor+1,7
  3448     04EA  2CEC               	goto	u571
  3449     04EB  2CED               	goto	u570
  3450     04EC                     u571:
  3451     04EC  2CF4               	goto	l1309
  3452     04ED                     u570:
  3453     04ED                     l1305:
  3454     04ED  09F7               	comf	___awdiv@divisor,f
  3455     04EE  09F8               	comf	___awdiv@divisor+1,f
  3456     04EF  0AF7               	incf	___awdiv@divisor,f
  3457     04F0  1903               	skipnz
  3458     04F1  0AF8               	incf	___awdiv@divisor+1,f
  3459     04F2                     l1307:
  3460     04F2  01C8               	clrf	___awdiv@sign
  3461     04F3  0AC8               	incf	___awdiv@sign,f
  3462     04F4                     l1309:
  3463     04F4  1FFA               	btfss	___awdiv@dividend+1,7
  3464     04F5  2CF7               	goto	u581
  3465     04F6  2CF8               	goto	u580
  3466     04F7                     u581:
  3467     04F7  2D01               	goto	l1315
  3468     04F8                     u580:
  3469     04F8                     l1311:
  3470     04F8  09F9               	comf	___awdiv@dividend,f
  3471     04F9  09FA               	comf	___awdiv@dividend+1,f
  3472     04FA  0AF9               	incf	___awdiv@dividend,f
  3473     04FB  1903               	skipnz
  3474     04FC  0AFA               	incf	___awdiv@dividend+1,f
  3475     04FD                     l1313:
  3476     04FD  3001               	movlw	1
  3477     04FE  00FB               	movwf	??___awdiv
  3478     04FF  087B               	movf	??___awdiv,w
  3479     0500  06C8               	xorwf	___awdiv@sign,f
  3480     0501                     l1315:
  3481     0501  01C9               	clrf	___awdiv@quotient
  3482     0502  01CA               	clrf	___awdiv@quotient+1
  3483     0503                     l1317:
  3484     0503  0877               	movf	___awdiv@divisor,w
  3485     0504  0478               	iorwf	___awdiv@divisor+1,w
  3486     0505  1903               	btfsc	3,2
  3487     0506  2D08               	goto	u591
  3488     0507  2D09               	goto	u590
  3489     0508                     u591:
  3490     0508  2D40               	goto	l1337
  3491     0509                     u590:
  3492     0509                     l1319:
  3493     0509  01C7               	clrf	___awdiv@counter
  3494     050A  0AC7               	incf	___awdiv@counter,f
  3495     050B  2D17               	goto	l1325
  3496     050C                     l1321:
  3497     050C  3001               	movlw	1
  3498     050D                     u605:
  3499     050D  1003               	clrc
  3500     050E  0DF7               	rlf	___awdiv@divisor,f
  3501     050F  0DF8               	rlf	___awdiv@divisor+1,f
  3502     0510  3EFF               	addlw	-1
  3503     0511  1D03               	skipz
  3504     0512  2D0D               	goto	u605
  3505     0513                     l1323:
  3506     0513  3001               	movlw	1
  3507     0514  00FB               	movwf	??___awdiv
  3508     0515  087B               	movf	??___awdiv,w
  3509     0516  07C7               	addwf	___awdiv@counter,f
  3510     0517                     l1325:
  3511     0517  1FF8               	btfss	___awdiv@divisor+1,7
  3512     0518  2D1A               	goto	u611
  3513     0519  2D1B               	goto	u610
  3514     051A                     u611:
  3515     051A  2D0C               	goto	l1321
  3516     051B                     u610:
  3517     051B                     l1327:
  3518     051B  3001               	movlw	1
  3519     051C                     u625:
  3520     051C  1003               	clrc
  3521     051D  0DC9               	rlf	___awdiv@quotient,f
  3522     051E  0DCA               	rlf	___awdiv@quotient+1,f
  3523     051F  3EFF               	addlw	-1
  3524     0520  1D03               	skipz
  3525     0521  2D1C               	goto	u625
  3526     0522  0878               	movf	___awdiv@divisor+1,w
  3527     0523  027A               	subwf	___awdiv@dividend+1,w
  3528     0524  1D03               	skipz
  3529     0525  2D28               	goto	u635
  3530     0526  0877               	movf	___awdiv@divisor,w
  3531     0527  0279               	subwf	___awdiv@dividend,w
  3532     0528                     u635:
  3533     0528  1C03               	skipc
  3534     0529  2D2B               	goto	u631
  3535     052A  2D2C               	goto	u630
  3536     052B                     u631:
  3537     052B  2D33               	goto	l1333
  3538     052C                     u630:
  3539     052C                     l1329:
  3540     052C  0877               	movf	___awdiv@divisor,w
  3541     052D  02F9               	subwf	___awdiv@dividend,f
  3542     052E  0878               	movf	___awdiv@divisor+1,w
  3543     052F  1C03               	skipc
  3544     0530  03FA               	decf	___awdiv@dividend+1,f
  3545     0531  02FA               	subwf	___awdiv@dividend+1,f
  3546     0532                     l1331:
  3547     0532  1449               	bsf	___awdiv@quotient,0
  3548     0533                     l1333:
  3549     0533  3001               	movlw	1
  3550     0534                     u645:
  3551     0534  1003               	clrc
  3552     0535  0CF8               	rrf	___awdiv@divisor+1,f
  3553     0536  0CF7               	rrf	___awdiv@divisor,f
  3554     0537  3EFF               	addlw	-1
  3555     0538  1D03               	skipz
  3556     0539  2D34               	goto	u645
  3557     053A                     l1335:
  3558     053A  3001               	movlw	1
  3559     053B  02C7               	subwf	___awdiv@counter,f
  3560     053C  1D03               	btfss	3,2
  3561     053D  2D3F               	goto	u651
  3562     053E  2D40               	goto	u650
  3563     053F                     u651:
  3564     053F  2D1B               	goto	l1327
  3565     0540                     u650:
  3566     0540                     l1337:
  3567     0540  0848               	movf	___awdiv@sign,w
  3568     0541  1903               	btfsc	3,2
  3569     0542  2D44               	goto	u661
  3570     0543  2D45               	goto	u660
  3571     0544                     u661:
  3572     0544  2D4A               	goto	l1341
  3573     0545                     u660:
  3574     0545                     l1339:
  3575     0545  09C9               	comf	___awdiv@quotient,f
  3576     0546  09CA               	comf	___awdiv@quotient+1,f
  3577     0547  0AC9               	incf	___awdiv@quotient,f
  3578     0548  1903               	skipnz
  3579     0549  0ACA               	incf	___awdiv@quotient+1,f
  3580     054A                     l1341:
  3581     054A  084A               	movf	___awdiv@quotient+1,w
  3582     054B  00F8               	movwf	?___awdiv+1
  3583     054C  0849               	movf	___awdiv@quotient,w
  3584     054D  00F7               	movwf	?___awdiv
  3585     054E                     l450:
  3586     054E  0008               	return
  3587     054F                     __end_of___awdiv:
  3588     007E                     btemp	set	126	;btemp
  3589     007E                     wtemp0	set	126
  3590                           
  3591                           	psect	idloc
  3592                           
  3593                           ;Config register IDLOC0 @ 0x2000
  3594                           ;	unspecified, using default values
  3595     2000                     	org	8192
  3596     2000  3FFF               	dw	16383
  3597                           
  3598                           ;Config register IDLOC1 @ 0x2001
  3599                           ;	unspecified, using default values
  3600     2001                     	org	8193
  3601     2001  3FFF               	dw	16383
  3602                           
  3603                           ;Config register IDLOC2 @ 0x2002
  3604                           ;	unspecified, using default values
  3605     2002                     	org	8194
  3606     2002  3FFF               	dw	16383
  3607                           
  3608                           ;Config register IDLOC3 @ 0x2003
  3609                           ;	unspecified, using default values
  3610     2003                     	org	8195
  3611     2003  3FFF               	dw	16383
  3612                           
  3613                           	psect	config
  3614                           
  3615                           ;Config register CONFIG1 @ 0x2007
  3616                           ;	Oscillator Selection bits
  3617                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3618                           ;	Watchdog Timer Enable bit
  3619                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3620                           ;	Power-up Timer Enable bit
  3621                           ;	PWRTE = OFF, PWRT disabled
  3622                           ;	RE3/MCLR pin function select bit
  3623                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3624                           ;	Code Protection bit
  3625                           ;	CP = OFF, Program memory code protection is disabled
  3626                           ;	Data Code Protection bit
  3627                           ;	CPD = OFF, Data memory code protection is disabled
  3628                           ;	Brown Out Reset Selection bits
  3629                           ;	BOREN = OFF, BOR disabled
  3630                           ;	Internal External Switchover bit
  3631                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3632                           ;	Fail-Safe Clock Monitor Enabled bit
  3633                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3634                           ;	Low Voltage Programming Enable bit
  3635                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3636                           ;	In-Circuit Debugger Mode bit
  3637                           ;	DEBUG = 0x1, unprogramme  3638     2007                     	org	8199
  3639     2007  20D4               	dw	8404
  3640                           
  3641                           ;Config register CONFIG2 @ 0x2008
  3642                           ;	Brown-out Reset Selection bit
  3643                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3644                           ;	Flash Program Memory Self Write Enable bits
  3645                           ;	WRT = OFF, Write protection off
  3646     2008                     	org	8200
  3647     2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    10
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> buffer3(BANK0[5]), buffer2(BANK0[5]), buffer(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_Str@a	PTR unsigned char  size(2) Largest target is 14
		 -> STR_10(CODE[14]), buffer3(BANK0[5]), buffer2(BANK0[5]), buffer(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_Division
    _main->_Division2
    _main->_Division3
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Write_Str
    _Lcd_Write_Str->_Lcd_Write
    _Lcd_Set->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Division3->___awdiv
    _Division2->___awdiv
    _Division->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->_sprintf
    _Division3->___awdiv
    _Division2->___awdiv
    _Division->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13976
                                             13 BANK0      2     2      0
                           _Division
                          _Division2
                          _Division3
                            _Lcd_Set
                      _Lcd_Write_Str
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2083
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1690
                          _Lcd_Clear
                           _Lcd_Init
                            _Lcd_Set
                      _Lcd_Write_Str
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Str                                        7     5      2     872
                                              2 COMMON     7     5      2
                          _Lcd_Write
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set                                              2     1      1     414
                                              3 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Division3                                            5     5      0    2965
                                             12 COMMON     2     2      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _Division2                                            5     5      0    2965
                                             12 COMMON     2     2      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _Division                                             5     5      0    2965
                                             12 COMMON     2     2      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1664
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Division
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _Division2
     ___awdiv
     ___awmod
   _Division3
     ___awdiv
     ___awmod
   _Lcd_Set
     _Lcd_Cmd
   _Lcd_Write_Str
     _Lcd_Write
   _setup
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd
     _Lcd_Set
     _Lcd_Write_Str
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      44       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      36       5       67.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      44      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 02 13:59:13 2023

                      pc 0002              _SSPSTATbits 0094                       l91 04E5  
                     l85 0425                       l88 0485                       l97 0643  
           ___awdiv@sign 0048                       fsr 0004                      l100 067C  
                    l111 029C                      l103 069A                      l131 01AA  
                    l134 01B0                      l127 0203                      l128 0208  
                    l145 01C1                      l137 01A9                      l171 01DE  
                    l156 01F2                      l165 0226                      l159 01CE  
                    l168 036C                      l177 02DE                      l450 054E  
                    l293 0628                      l463 03C5                      l569 0322  
                    l579 0260                      _RC6 003E                      _RC7 003F  
                    u500 020F                      u501 020E                      u510 021E  
                    u511 021D                      u520 02AA                      u610 051B  
                    u530 02CC                      u611 051A                      u540 02DE  
                    u605 050D                      u541 02DD                      u630 052C  
                    u710 039A                      u550 01FB                      u631 052B  
                    u711 0399                      u551 01FA                      u720 03A4  
                    u560 01B0                      u800 030A                      u625 051C  
                    u721 03A3                      u705 038C                      u561 01AF  
                    u801 0309                      u650 0540                      u570 04ED  
                    u651 053F                      u635 0528                      u571 04EC  
                    u660 0545                      u580 04F8                      u740 03B7  
                    u820 031E                      u900 0593                      u661 0544  
                    u645 0534                      u581 04F7                      u741 03B6  
                    u725 03A0                      u821 031D                      u805 0306  
                    u901 0592                      u590 0509                      u750 03BC  
                    u670 0372                      u830 022D                      u910 05B9  
                    u591 0508                      u751 03BB                      u735 03AB  
                    u671 0371                      u815 0312                      u831 022C  
                    u911 05B8                      u680 037D                      u760 02E7  
                    u920 05C4                      u681 037C                      u761 02E6  
                    u921 05C3                      u690 0388                      u850 023F  
                    u930 05CA                      u691 0387                      u851 023E  
                    u931 05C9                      u915 05B5                      u780 02F9  
                    u860 0249                      u940 0614                      u781 02F8  
                    u861 0248                      u845 0231                      u941 0613  
                    u950 0624                      u775 02EB                      u951 0623  
                    u880 025C                      u960 0649                      u881 025B  
                    u865 0245                      u961 0648                      u890 055B  
                    u970 0682                      u795 02FA                      u875 0250  
                    u891 055A                      u971 0681                      u980 06A0  
                    u981 069F                      u997 0637                      _dec 0035  
                    _cen 0036                      fsr0 0004                      _uni 0034  
                    indf 0000             ___awmod@sign 0076                     l1301 04E6  
                   l1311 04F8                     l1303 04E9                     l1231 01E0  
                   l1321 050C                     l1313 04FD                     l1305 04ED  
                   l1233 01E3                     l1241 01D3                     l1401 0311  
                   l1331 0532                     l1323 0513                     l1315 0501  
                   l1307 04F2                     l1235 01E5                     l1251 0218  
                   l1243 01D5                     l1403 0318                     l1411 022D  
                   l1341 054A                     l1333 0533                     l1325 0517  
                   l1317 0503                     l1309 04F4                     l1237 01EF  
                   l1253 021E                     l1245 01DB                     l1261 02C2  
                   l1405 031E                     l1421 0249                     l1413 0230  
                   l1501 058F                     l1335 053A                     l1327 051B  
                   l1319 0509                     l1351 0377                     l1431 03C9  
                   l1247 020A                     l1239 01D0                     l1255 029D  
                   l1271 0202                     l1263 01F4                     l1423 024F  
                   l1415 0237                     l1503 0593                     l1329 052C  
                   l1337 0540                     l1361 038B                     l1353 0379  
                   l1345 036D                     l1433 0429                     l1281 033D  
                   l1273 0323                     l1249 020F                     l1257 02A0  
                   l1265 01FB                     l1441 0266                     l1425 0256  
                   l1417 023B                     l1409 0227                     l1521 05CA  
                   l1513 059E                     l1505 0597                     l1601 0747  
                   l1339 0545                     l1371 03AA                     l1363 0392  
                   l1355 037D                     l1347 036E                     l1435 0489  
                   l1291 035A                     l1283 0343                     l1275 0326  
                   l1259 02BC                     l1267 01FD                     l1451 026F  
                   l1443 0269                     l1419 023F                     l1427 025C  
                   l1531 0607                     l1523 05CF                     l1507 059C  
                   l1611 0786                     l1603 0758                     l1373 03B1  
                   l1365 0396                     l1357 0382                     l1349 0372  
                   l1293 0360                     l1285 0348                     l1277 032E  
                   l1269 01FF                     l1461 0276                     l1453 0270  
                   l1445 026A                     l1437 0261                     l1533 060B  
                   l1525 05D3                     l1517 05BA                     l1621 07C1  
                   l1613 078E                     l1605 0761                     l1367 039A  
                   l1359 0388                     l1375 03B7                     l1295 0366  
                   l1287 034E                     l1279 0334                     l1471 028B  
                   l1463 0277                     l1455 0271                     l1447 026D  
                   l1439 0265                     l1391 02F1                     l1383 02DF  
                   l1527 05D6                     l1519 05C4                     l1535 0614  
                   l1623 07CA                     l1615 0796                     l1607 0772  
                   l1551 063B                     l1377 03BC                     l1369 03A4  
                   l1297 01C2                     l1289 0354                     l1473 0293  
                   l1465 0278                     l1457 0272                     l1449 026E  
                   l1393 02F5                     l1385 02E1                     l1529 0602  
                   l1537 0624                     l1625 07DB                     l1617 07A7  
                   l1609 077B                     l1561 0669                     l1553 0649  
                   l1545 0629                     l1379 03C1                     l1467 0281  
                   l1459 0273                     l1299 01AA                     l1475 01A5  
                   l1395 02F9                     l1387 02E7                     l1491 0565  
                   l1483 0552                     l1627 07E4                     l1619 07B0  
                   l1571 0694                     l1563 066C                     l1555 0651  
                   l1547 062E                     l1469 0286                     l1477 01B9  
                   l1397 030A                     l1389 02EA                     l1653 0578  
                   l1485 0555                     l1581 06BC                     l1573 06A0  
                   l1565 0676                     l1557 065B                     l1549 0631  
                   l1479 01BE                     l1399 0310                     l1495 0566  
                   l1487 055B                     l1591 06F8                     l1583 06C4  
                   l1575 06A8                     l1567 0682                     l1559 065E  
                   l1497 0583                     l1489 0560                     l1593 0709  
                   l1585 06D5                     l1577 06A9                     l1569 068A  
                   l1499 058B                     l1595 0712                     l1587 06DE  
                   l1579 06B4                     l1597 072D                     l1589 06EF  
                   l1599 073E                     STR_1 002B                     STR_2 002B  
                   STR_3 002B                     STR_4 002B                     STR_5 002B  
                   STR_6 002B                     STR_7 002B                     STR_8 002B  
                   STR_9 002B                     u1007 0657                     u1017 0664  
                   u1107 0338                     u1027 0672                     u1117 0345  
                   u1037 0690                     u1127 01EA                     u1047 06AF  
                   u1057 0718                     u1067 0781                     u1077 07EA  
                   u1087 01D8                     u1097 032A                     _dec2 0032  
                   _dec3 002F                     _cen2 0033                     _cen3 0030  
                   _main 0629                     _uni2 0031                     _uni3 002E  
                   _vol1 0029                     _vol2 0027                     _temp 002B  
                   btemp 007E                     start 0000          __end_of_Lcd_Cmd 01F3  
        __end_of_Lcd_Set 0227                    ?_main 0070          __end_of___awdiv 054F  
                  STR_10 001D          __end_of___awmod 03C6                    _ANSEL 0188  
        ___awdiv@divisor 0077          __end_of___lwdiv 0323          __end_of___lwmod 0261  
        ___awdiv@counter 0047                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088          __end_of_dpowers 001D  
                  _setup 0261                    pclath 000A          __end_of_spiInit 0209  
        __end_of_spiRead 01C2                    status 0003                    wtemp0 007E  
        __end_of_sprintf 0629         __end_of_Lcd_Init 036D          __initialization 07F3  
       __end_of_Division 0426             __end_of_main 07F3                   ??_main 0054  
       ___awdiv@dividend 0079                   ?_setup 0070                   _ANSELH 0189  
              ??_Lcd_Cmd 0070                ??_Lcd_Set 0074                   _TRISC2 043A  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                ??___awdiv 007B                ??___awmod 0074  
              ??___lwdiv 0074                ??___lwmod 007C                   _buffer 0042  
       ___awdiv@quotient 0049          ___awmod@divisor 0070          ___awmod@counter 0075  
  __end_of_Lcd_Write_Str 02DF         __end_of_spiWrite 01AA                ??_spiInit 0073  
              ??_spiRead 0070                ??_sprintf 004A  __end_of__initialization 07FC  
      __end_of_Lcd_Clear 01CF        __end_of_Lcd_Write 01DF           __pcstackCOMMON 0070  
      __end_of_Division2 0486        __end_of_Division3 04E6            __end_of_setup 029D  
              ?_Lcd_Init 0070                  ??_setup 0079                ?_Division 0070  
             __pbssBANK0 0020           Lcd_Write_Str@a 0072           Lcd_Write_Str@i 0077  
             __pmaintext 0629               ??_Lcd_Init 0073                  _SSPSTAT 0094  
             ??_Division 007C               _contadore1 002D               _contadore2 002C  
             __stringtab 0003                  _Lcd_Cmd 01DF                  _Lcd_Set 0209  
              ?_spiWrite 0070                  ___awdiv 04E6                  ___awmod 036D  
                ___lwdiv 02DF                  ___lwmod 0227                  _bandera 0025  
                __ptext1 054F                  __ptext2 0227                  __ptext3 02DF  
                __ptext4 01A4                  __ptext5 01B9                  __ptext6 01AA  
                __ptext7 0261                  __ptext8 01F3                  __ptext9 029D  
                _buffer2 003D                  _buffer3 0038                  _dpowers 0013  
       ___awmod@dividend 0072                  _val_pot 0037                  _spiInit 01F3  
                _spiRead 01B9                  _sprintf 054F                  clrloop0 01B2  
   end_of_initialization 07FC               ??_spiWrite 0070                _PORTCbits 0007  
              Division@y 004D                _TRISCbits 0087              spiWrite@dat 0070  
              _Lcd_Clear 01C2           _spiReceiveWait 01AA                _Lcd_Write 01CF  
              _Division2 0426                _Division3 0486      start_initialization 07F3  
 __end_of_spiReceiveWait 01B1               ?_Lcd_Clear 0070               ?_Lcd_Write 0070  
             ?_Division2 0070               ?_Division3 0070                ___latbits 0002  
          __pcstackBANK0 0047           _Division2$1078 004B           _Division3$1079 004B  
               ?_Lcd_Cmd 0070                 ?_Lcd_Set 0073              sprintf@flag 004E  
            sprintf@prec 004F         ___lwdiv@dividend 0072          ?_spiReceiveWait 0070  
               ?___awdiv 0077                 ?___awmod 0070                 ?___lwdiv 0070  
               ?___lwmod 0078                __pstrings 0003            _Lcd_Write_Str 029D  
               ?_spiInit 0070                 ?_spiRead 0070         ___lwdiv@quotient 0075  
               ?_sprintf 0047     spiInit@sTransmitEdge 0072                clear_ram0 01B1  
     spiInit@sDataSample 0070                 Lcd_Cmd@a 0072                 Lcd_Set@a 0074  
               Lcd_Set@b 0073              ??_Lcd_Clear 0073              ??_Lcd_Write 0070  
            ??_Division2 007C              ??_Division3 007C              __stringbase 0012  
         ?_Lcd_Write_Str 0072                 _Lcd_Init 0323                 _Division 03C6  
          _Division$1077 004B       __end_of__stringtab 0013               sprintf@val 0050  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 01CF  
               __ptext11 0209                 __ptext12 0323                 __ptext13 01C2  
               __ptext14 01DF                 __ptext15 0486                 __ptext16 0426  
               __ptext17 03C6                 __ptext18 036D                 __ptext19 04E6  
               _vol1_str 0020                 _spiWrite 01A4             spiInit@sType 0073  
      spiInit@sClockIdle 0071          ??_Lcd_Write_Str 0074                sprintf@ap 004D  
              sprintf@sp 0052         ___lwmod@dividend 007A         ??_spiReceiveWait 0070  
              stringcode 000D               _OSCCONbits 008F               Lcd_Write@a 0071  
               sprintf@c 0053                 sprintf@f 0047          ___lwmod@divisor 0078  
        ___lwmod@counter 007D                 stringdir 000D                 stringtab 0003  
             Division2@y 004D               Division3@y 004D  
