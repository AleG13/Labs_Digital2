

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 02 14:14:12 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.40
    24                           ; Generated 04/07/2022 GMT
    25                           ; 
    26                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     008F                     	;# 
   103     0090                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0093                     	;# 
   109     0094                     	;# 
   110     0095                     	;# 
   111     0096                     	;# 
   112     0097                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009A                     	;# 
   116     009B                     	;# 
   117     009C                     	;# 
   118     009D                     	;# 
   119     009E                     	;# 
   120     009F                     	;# 
   121     0105                     	;# 
   122     0107                     	;# 
   123     0108                     	;# 
   124     0109                     	;# 
   125     010C                     	;# 
   126     010C                     	;# 
   127     010D                     	;# 
   128     010E                     	;# 
   129     010F                     	;# 
   130     0185                     	;# 
   131     0187                     	;# 
   132     0188                     	;# 
   133     0189                     	;# 
   134     018C                     	;# 
   135     018D                     	;# 
   136     0000                     	;# 
   137     0001                     	;# 
   138     0002                     	;# 
   139     0003                     	;# 
   140     0004                     	;# 
   141     0005                     	;# 
   142     0006                     	;# 
   143     0007                     	;# 
   144     0008                     	;# 
   145     0009                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     0088                     	;# 
   176     0089                     	;# 
   177     008C                     	;# 
   178     008D                     	;# 
   179     008E                     	;# 
   180     008F                     	;# 
   181     0090                     	;# 
   182     0091                     	;# 
   183     0092                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0094                     	;# 
   188     0095                     	;# 
   189     0096                     	;# 
   190     0097                     	;# 
   191     0098                     	;# 
   192     0099                     	;# 
   193     009A                     	;# 
   194     009B                     	;# 
   195     009C                     	;# 
   196     009D                     	;# 
   197     009E                     	;# 
   198     009F                     	;# 
   199     0105                     	;# 
   200     0107                     	;# 
   201     0108                     	;# 
   202     0109                     	;# 
   203     010C                     	;# 
   204     010C                     	;# 
   205     010D                     	;# 
   206     010E                     	;# 
   207     010F                     	;# 
   208     0185                     	;# 
   209     0187                     	;# 
   210     0188                     	;# 
   211     0189                     	;# 
   212     018C                     	;# 
   213     018D                     	;# 
   214     0000                     	;# 
   215     0001                     	;# 
   216     0002                     	;# 
   217     0003                     	;# 
   218     0004                     	;# 
   219     0005                     	;# 
   220     0006                     	;# 
   221     0007                     	;# 
   222     0008                     	;# 
   223     0009                     	;# 
   224     000A                     	;# 
   225     000B                     	;# 
   226     000C                     	;# 
   227     000D                     	;# 
   228     000E                     	;# 
   229     000E                     	;# 
   230     000F                     	;# 
   231     0010                     	;# 
   232     0011                     	;# 
   233     0012                     	;# 
   234     0013                     	;# 
   235     0014                     	;# 
   236     0015                     	;# 
   237     0015                     	;# 
   238     0016                     	;# 
   239     0017                     	;# 
   240     0018                     	;# 
   241     0019                     	;# 
   242     001A                     	;# 
   243     001B                     	;# 
   244     001B                     	;# 
   245     001C                     	;# 
   246     001D                     	;# 
   247     001E                     	;# 
   248     001F                     	;# 
   249     0081                     	;# 
   250     0085                     	;# 
   251     0086                     	;# 
   252     0087                     	;# 
   253     0088                     	;# 
   254     0089                     	;# 
   255     008C                     	;# 
   256     008D                     	;# 
   257     008E                     	;# 
   258     008F                     	;# 
   259     0090                     	;# 
   260     0091                     	;# 
   261     0092                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0093                     	;# 
   265     0094                     	;# 
   266     0095                     	;# 
   267     0096                     	;# 
   268     0097                     	;# 
   269     0098                     	;# 
   270     0099                     	;# 
   271     009A                     	;# 
   272     009B                     	;# 
   273     009C                     	;# 
   274     009D                     	;# 
   275     009E                     	;# 
   276     009F                     	;# 
   277     0105                     	;# 
   278     0107                     	;# 
   279     0108                     	;# 
   280     0109                     	;# 
   281     010C                     	;# 
   282     010C                     	;# 
   283     010D                     	;# 
   284     010E                     	;# 
   285     010F                     	;# 
   286     0185                     	;# 
   287     0187                     	;# 
   288     0188                     	;# 
   289     0189                     	;# 
   290     018C                     	;# 
   291     018D                     	;# 
   292     0000                     	;# 
   293     0001                     	;# 
   294     0002                     	;# 
   295     0003                     	;# 
   296     0004                     	;# 
   297     0005                     	;# 
   298     0006                     	;# 
   299     0007                     	;# 
   300     0008                     	;# 
   301     0009                     	;# 
   302     000A                     	;# 
   303     000B                     	;# 
   304     000C                     	;# 
   305     000D                     	;# 
   306     000E                     	;# 
   307     000E                     	;# 
   308     000F                     	;# 
   309     0010                     	;# 
   310     0011                     	;# 
   311     0012                     	;# 
   312     0013                     	;# 
   313     0014                     	;# 
   314     0015                     	;# 
   315     0015                     	;# 
   316     0016                     	;# 
   317     0017                     	;# 
   318     0018                     	;# 
   319     0019                     	;# 
   320     001A                     	;# 
   321     001B                     	;# 
   322     001B                     	;# 
   323     001C                     	;# 
   324     001D                     	;# 
   325     001E                     	;# 
   326     001F                     	;# 
   327     0081                     	;# 
   328     0085                     	;# 
   329     0086                     	;# 
   330     0087                     	;# 
   331     0088                     	;# 
   332     0089                     	;# 
   333     008C                     	;# 
   334     008D                     	;# 
   335     008E                     	;# 
   336     008F                     	;# 
   337     0090                     	;# 
   338     0091                     	;# 
   339     0092                     	;# 
   340     0093                     	;# 
   341     0093                     	;# 
   342     0093                     	;# 
   343     0094                     	;# 
   344     0095                     	;# 
   345     0096                     	;# 
   346     0097                     	;# 
   347     0098                     	;# 
   348     0099                     	;# 
   349     009A                     	;# 
   350     009B                     	;# 
   351     009C                     	;# 
   352     009D                     	;# 
   353     009E                     	;# 
   354     009F                     	;# 
   355     0105                     	;# 
   356     0107                     	;# 
   357     0108                     	;# 
   358     0109                     	;# 
   359     010C                     	;# 
   360     010C                     	;# 
   361     010D                     	;# 
   362     010E                     	;# 
   363     010F                     	;# 
   364     0185                     	;# 
   365     0187                     	;# 
   366     0188                     	;# 
   367     0189                     	;# 
   368     018C                     	;# 
   369     018D                     	;# 
   370     0013                     _SSPBUF	set	19
   371     0014                     _SSPCON	set	20
   372     000B                     _INTCONbits	set	11
   373     0005                     _PORTA	set	5
   374     0006                     _PORTBbits	set	6
   375     001E                     _ADRESH	set	30
   376     001F                     _ADCON0bits	set	31
   377     000C                     _PIR1bits	set	12
   378     0008                     _PORTD	set	8
   379     0063                     _SSPIF	set	99
   380     009F                     _ADCON1bits	set	159
   381     0094                     _SSPSTATbits	set	148
   382     0094                     _SSPSTAT	set	148
   383     0085                     _TRISAbits	set	133
   384     008C                     _PIE1bits	set	140
   385     0096                     _IOCBbits	set	150
   386     0095                     _WPUBbits	set	149
   387     0081                     _OPTION_REGbits	set	129
   388     008F                     _OSCCONbits	set	143
   389     0085                     _TRISA	set	133
   390     0088                     _TRISD	set	136
   391     0086                     _TRISB	set	134
   392     043B                     _TRISC3	set	1083
   393     043D                     _TRISC5	set	1085
   394     0189                     _ANSELH	set	393
   395     0188                     _ANSEL	set	392
   396                           
   397                           	psect	cinit
   398     000F                     start_initialization:	
   399                           ; #config settings
   400                           
   401     000F                     __initialization:
   402                           
   403                           ; Clear objects allocated to COMMON
   404     000F  01F5               	clrf	__pbssCOMMON& (0+127)
   405     0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   406     0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   407     0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   408                           
   409                           ; Clear objects allocated to BANK0
   410     0013  1283               	bcf	3,5	;RP0=0, select bank0
   411     0014  1303               	bcf	3,6	;RP1=0, select bank0
   412     0015  01A4               	clrf	__pbssBANK0& (0+127)
   413     0016  01A5               	clrf	(__pbssBANK0+1)& (0+127)
   414     0017                     end_of_initialization:	
   415                           ;End of C runtime variable initialization code
   416                           
   417     0017                     __end_of__initialization:
   418     0017  0183               	clrf	3
   419     0018  120A  118A  289A   	ljmp	_main	;jump to C main() function
   420                           
   421                           	psect	bssCOMMON
   422     0075                     __pbssCOMMON:
   423     0075                     _contador:
   424     0075                     	ds	2
   425     0077                     _adc_val:
   426     0077                     	ds	2
   427                           
   428                           	psect	bssBANK0
   429     0024                     __pbssBANK0:
   430     0024                     _bandera:
   431     0024                     	ds	2
   432                           
   433                           	psect	cstackCOMMON
   434     0070                     __pcstackCOMMON:
   435     0070                     ?_spiRead:
   436     0070                     ??_spiRead:	
   437                           ; 1 bytes @ 0x0
   438                           
   439     0070                     ?_spiWrite:	
   440                           ; 1 bytes @ 0x0
   441                           
   442     0070                     ??_spiWrite:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0070                     ?_setup:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0070                     ?_ADC_IF:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0070                     ?_isr:	
   452                           ; 1 bytes @ 0x0
   453                           
   454     0070                     ?_main:	
   455                           ; 1 bytes @ 0x0
   456                           
   457     0070                     ?_spiReceiveWait:	
   458                           ; 1 bytes @ 0x0
   459                           
   460     0070                     ??_spiReceiveWait:	
   461                           ; 1 bytes @ 0x0
   462                           
   463     0070                     spiWrite@dat:	
   464                           ; 1 bytes @ 0x0
   465                           
   466                           
   467                           ; 1 bytes @ 0x0
   468     0070                     	ds	1
   469     0071                     ??_isr:
   470                           
   471                           ; 1 bytes @ 0x1
   472     0071                     	ds	4
   473     0075                     ??_setup:
   474     0075                     ??_ADC_CONF:	
   475                           ; 1 bytes @ 0x5
   476                           
   477     0075                     ??_spiInit:	
   478                           ; 1 bytes @ 0x5
   479                           
   480     0075                     ??_main:	
   481                           ; 1 bytes @ 0x5
   482                           
   483                           
   484                           	psect	cstackBANK0
   485     0020                     __pcstackBANK0:	
   486                           ; 1 bytes @ 0x5
   487                           
   488     0020                     ??_ADC_IF:
   489     0020                     ?_ADC_CONF:	
   490                           ; 1 bytes @ 0x0
   491                           
   492     0020                     ?_spiInit:	
   493                           ; 1 bytes @ 0x0
   494                           
   495     0020                     spiInit@sDataSample:	
   496                           ; 1 bytes @ 0x0
   497                           
   498     0020                     ADC_CONF@frec:	
   499                           ; 1 bytes @ 0x0
   500                           
   501                           
   502                           ; 2 bytes @ 0x0
   503     0020                     	ds	1
   504     0021                     spiInit@sClockIdle:
   505                           
   506                           ; 1 bytes @ 0x1
   507     0021                     	ds	1
   508     0022                     spiInit@sTransmitEdge:
   509                           
   510                           ; 1 bytes @ 0x2
   511     0022                     	ds	1
   512     0023                     spiInit@sType:
   513                           
   514                           ; 1 bytes @ 0x3
   515     0023                     	ds	1
   516                           
   517                           	psect	maintext
   518     009A                     __pmaintext:	
   519 ;;
   520 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   521 ;;
   522 ;; *************** function _main *****************
   523 ;; Defined at:
   524 ;;		line 67 in file "main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : B00/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0
   541 ;;      Totals:         0       0       0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels required when called: 5
   544 ;; This function calls:
   545 ;;		_ADC_IF
   546 ;;		_setup
   547 ;; This function is called by:
   548 ;;		Startup code after reset
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552     009A                     _main:	
   553                           ;psect for function _main
   554                           
   555     009A                     l1107:	
   556                           ;incstack = 0
   557                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   558                           
   559                           
   560                           ;main.c: 68:     setup();
   561     009A  120A  118A  205F  120A  118A  	fcall	_setup
   562     009F                     l1109:
   563                           
   564                           ;main.c: 71:        ADC_IF();
   565     009F  120A  118A  2115  120A  118A  	fcall	_ADC_IF
   566     00A4                     l1111:
   567                           
   568                           ;main.c: 72:         if(!PORTBbits.RB7){
   569     00A4  1283               	bcf	3,5	;RP0=0, select bank0
   570     00A5  1303               	bcf	3,6	;RP1=0, select bank0
   571     00A6  1B86               	btfsc	6,7	;volatile
   572     00A7  28A9               	goto	u201
   573     00A8  28AA               	goto	u200
   574     00A9                     u201:
   575     00A9  28B5               	goto	l73
   576     00AA                     u200:
   577     00AA                     l74:
   578     00AA  1F86               	btfss	6,7	;volatile
   579     00AB  28AD               	goto	u211
   580     00AC  28AE               	goto	u210
   581     00AD                     u211:
   582     00AD  28AA               	goto	l74
   583     00AE                     u210:
   584     00AE                     l1115:
   585                           
   586                           ;main.c: 74:            contador ++;
   587     00AE  3001               	movlw	1
   588     00AF  07F5               	addwf	_contador,f
   589     00B0  1803               	skipnc
   590     00B1  0AF6               	incf	_contador+1,f
   591     00B2  3000               	movlw	0
   592     00B3  07F6               	addwf	_contador+1,f
   593                           
   594                           ;main.c: 75:         }
   595     00B4  289F               	goto	l1109
   596     00B5                     l73:	
   597                           ;main.c: 76:        else if(!PORTBbits.RB5){
   598                           
   599     00B5  1A86               	btfsc	6,5	;volatile
   600     00B6  28B8               	goto	u221
   601     00B7  28B9               	goto	u220
   602     00B8                     u221:
   603     00B8  289F               	goto	l1109
   604     00B9                     u220:
   605     00B9                     l79:
   606     00B9  1E86               	btfss	6,5	;volatile
   607     00BA  28BC               	goto	u231
   608     00BB  28BD               	goto	u230
   609     00BC                     u231:
   610     00BC  28B9               	goto	l79
   611     00BD                     u230:
   612     00BD                     l1119:
   613                           
   614                           ;main.c: 78:             contador = contador - 1;
   615     00BD  0875               	movf	_contador,w
   616     00BE  3EFF               	addlw	255
   617     00BF  00F5               	movwf	_contador
   618     00C0  0876               	movf	_contador+1,w
   619     00C1  1803               	skipnc
   620     00C2  3E01               	addlw	1
   621     00C3  3EFF               	addlw	255
   622     00C4  00F6               	movwf	_contador+1
   623     00C5  289F               	goto	l1109
   624     00C6  120A  118A  280C   	ljmp	start
   625     00C9                     __end_of_main:
   626                           
   627                           	psect	text1
   628     005F                     __ptext1:	
   629 ;; *************** function _setup *****************
   630 ;; Defined at:
   631 ;;		line 87 in file "main.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   645 ;;      Params:         0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0
   648 ;;      Totals:         0       0       0       0       0
   649 ;;Total ram usage:        0 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; Hardware stack levels required when called: 4
   652 ;; This function calls:
   653 ;;		_ADC_CONF
   654 ;;		_spiInit
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660     005F                     _setup:	
   661                           ;psect for function _setup
   662                           
   663     005F                     l1051:	
   664                           ;incstack = 0
   665                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   666                           
   667                           
   668                           ;main.c: 88:     ANSEL = 0;
   669     005F  1683               	bsf	3,5	;RP0=1, select bank3
   670     0060  1703               	bsf	3,6	;RP1=1, select bank3
   671     0061  0188               	clrf	8	;volatile
   672                           
   673                           ;main.c: 89:     ANSELH = 0;
   674     0062  0189               	clrf	9	;volatile
   675     0063                     l1053:
   676                           
   677                           ;main.c: 91:     TRISB = 1;
   678     0063  3001               	movlw	1
   679     0064  1683               	bsf	3,5	;RP0=1, select bank1
   680     0065  1303               	bcf	3,6	;RP1=0, select bank1
   681     0066  0086               	movwf	6	;volatile
   682     0067                     l1055:
   683                           
   684                           ;main.c: 92:     TRISD = 0;
   685     0067  0188               	clrf	8	;volatile
   686     0068                     l1057:
   687                           
   688                           ;main.c: 93:     TRISA = 0;
   689     0068  0185               	clrf	5	;volatile
   690     0069                     l1059:
   691                           
   692                           ;main.c: 94:     OSCCONbits.IRCF = 0b111;
   693     0069  3070               	movlw	112
   694     006A  048F               	iorwf	15,f	;volatile
   695     006B                     l1061:
   696                           
   697                           ;main.c: 95:     OSCCONbits.SCS = 0b10;
   698     006B  100F               	bcf	15,0	;volatile
   699     006C                     l1063:
   700                           
   701                           ;main.c: 96:     PORTD = 0;
   702     006C  1283               	bcf	3,5	;RP0=0, select bank0
   703     006D  1303               	bcf	3,6	;RP1=0, select bank0
   704     006E  0188               	clrf	8	;volatile
   705     006F                     l1065:
   706                           
   707                           ;main.c: 97:     PORTA = 0;
   708     006F  0185               	clrf	5	;volatile
   709     0070                     l1067:
   710                           
   711                           ;main.c: 99:     ADC_CONF(8);
   712     0070  3008               	movlw	8
   713     0071  00A0               	movwf	ADC_CONF@frec
   714     0072  3000               	movlw	0
   715     0073  00A1               	movwf	ADC_CONF@frec+1
   716     0074  120A  118A  20C9  120A  118A  	fcall	_ADC_CONF
   717     0079                     l1069:
   718                           
   719                           ;main.c: 101:     OPTION_REGbits.nRBPU = 0;
   720     0079  1683               	bsf	3,5	;RP0=1, select bank1
   721     007A  1303               	bcf	3,6	;RP1=0, select bank1
   722     007B  1381               	bcf	1,7	;volatile
   723     007C                     l1071:
   724                           
   725                           ;main.c: 102:     WPUBbits.WPUB7 = 1;
   726     007C  1795               	bsf	21,7	;volatile
   727     007D                     l1073:
   728                           
   729                           ;main.c: 103:     IOCBbits.IOCB7 = 1;
   730     007D  1796               	bsf	22,7	;volatile
   731     007E                     l1075:
   732                           
   733                           ;main.c: 104:     WPUBbits.WPUB5 = 1;
   734     007E  1695               	bsf	21,5	;volatile
   735     007F                     l1077:
   736                           
   737                           ;main.c: 105:     IOCBbits.IOCB5 = 1;
   738     007F  1696               	bsf	22,5	;volatile
   739     0080                     l1079:
   740                           
   741                           ;main.c: 107:     INTCONbits.PEIE = 1;
   742     0080  170B               	bsf	11,6	;volatile
   743     0081                     l1081:
   744                           
   745                           ;main.c: 108:     PIE1bits.ADIE = 1;
   746     0081  170C               	bsf	12,6	;volatile
   747     0082                     l1083:
   748                           
   749                           ;main.c: 109:     ADCON0bits.GO = 0;
   750     0082  1283               	bcf	3,5	;RP0=0, select bank0
   751     0083  1303               	bcf	3,6	;RP1=0, select bank0
   752     0084  109F               	bcf	31,1	;volatile
   753     0085                     l1085:
   754                           
   755                           ;main.c: 111:     INTCONbits.GIE = 1;
   756     0085  178B               	bsf	11,7	;volatile
   757     0086                     l1087:
   758                           
   759                           ;main.c: 112:     INTCONbits.PEIE = 1;
   760     0086  170B               	bsf	11,6	;volatile
   761     0087                     l1089:
   762                           
   763                           ;main.c: 113:     PIR1bits.SSPIF = 0;
   764     0087  118C               	bcf	12,3	;volatile
   765     0088                     l1091:
   766                           
   767                           ;main.c: 114:     PIE1bits.SSPIE = 1;
   768     0088  1683               	bsf	3,5	;RP0=1, select bank1
   769     0089  1303               	bcf	3,6	;RP1=0, select bank1
   770     008A  158C               	bsf	12,3	;volatile
   771     008B                     l1093:
   772                           
   773                           ;main.c: 115:     TRISAbits.TRISA5 = 1;
   774     008B  1685               	bsf	5,5	;volatile
   775     008C                     l1095:
   776                           
   777                           ;main.c: 116:     INTCONbits.RBIE = 1;
   778     008C  158B               	bsf	11,3	;volatile
   779     008D                     l1097:
   780                           
   781                           ;main.c: 117:     INTCONbits.RBIF = 0;
   782     008D  100B               	bcf	11,0	;volatile
   783     008E                     l1099:
   784                           
   785                           ;main.c: 118:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   786     008E  1283               	bcf	3,5	;RP0=0, select bank0
   787     008F  1303               	bcf	3,6	;RP1=0, select bank0
   788     0090  01A0               	clrf	spiInit@sDataSample
   789     0091  01A1               	clrf	spiInit@sClockIdle
   790     0092  01A2               	clrf	spiInit@sTransmitEdge
   791     0093  3024               	movlw	36
   792     0094  120A  118A  20F7  120A  118A  	fcall	_spiInit
   793     0099                     l87:
   794     0099  0008               	return
   795     009A                     __end_of_setup:
   796                           
   797                           	psect	text2
   798     00F7                     __ptext2:	
   799 ;; *************** function _spiInit *****************
   800 ;; Defined at:
   801 ;;		line 12 in file "SPI.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  sType           1    wreg     enum E1292
   804 ;;  sDataSample     1    0[BANK0 ] enum E1300
   805 ;;  sClockIdle      1    1[BANK0 ] enum E1304
   806 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  sType           1    3[BANK0 ] enum E1292
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       3       0       0       0
   819 ;;      Locals:         0       1       0       0       0
   820 ;;      Temps:          0       0       0       0       0
   821 ;;      Totals:         0       4       0       0       0
   822 ;;Total ram usage:        4 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; Hardware stack levels required when called: 3
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_setup
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832     00F7                     _spiInit:	
   833                           ;psect for function _spiInit
   834                           
   835                           
   836                           ;incstack = 0
   837                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   838                           ;spiInit@sType stored from wreg
   839     00F7  1283               	bcf	3,5	;RP0=0, select bank0
   840     00F8  1303               	bcf	3,6	;RP1=0, select bank0
   841     00F9  00A3               	movwf	spiInit@sType
   842     00FA                     l1041:
   843                           
   844                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   845     00FA  1683               	bsf	3,5	;RP0=1, select bank1
   846     00FB  1303               	bcf	3,6	;RP1=0, select bank1
   847     00FC  1287               	bcf	7,5	;volatile
   848                           
   849                           ;SPI.c: 15:     if(sType & 0b00000100)
   850     00FD  1283               	bcf	3,5	;RP0=0, select bank0
   851     00FE  1303               	bcf	3,6	;RP1=0, select bank0
   852     00FF  1D23               	btfss	spiInit@sType,2
   853     0100  2902               	goto	u181
   854     0101  2903               	goto	u180
   855     0102                     u181:
   856     0102  2909               	goto	l1047
   857     0103                     u180:
   858     0103                     l1043:
   859                           
   860                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   861     0103  0822               	movf	spiInit@sTransmitEdge,w
   862     0104  1683               	bsf	3,5	;RP0=1, select bank1
   863     0105  1303               	bcf	3,6	;RP1=0, select bank1
   864     0106  0094               	movwf	20	;volatile
   865     0107                     l1045:
   866                           
   867                           ;SPI.c: 18:         TRISC3 = 1;
   868     0107  1587               	bsf	7,3	;volatile
   869                           
   870                           ;SPI.c: 19:     }
   871     0108  290F               	goto	l103
   872     0109                     l1047:
   873                           
   874                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   875     0109  0820               	movf	spiInit@sDataSample,w
   876     010A  0422               	iorwf	spiInit@sTransmitEdge,w
   877     010B  1683               	bsf	3,5	;RP0=1, select bank1
   878     010C  1303               	bcf	3,6	;RP1=0, select bank1
   879     010D  0094               	movwf	20	;volatile
   880     010E                     l1049:
   881                           
   882                           ;SPI.c: 23:         TRISC3 = 0;
   883     010E  1187               	bcf	7,3	;volatile
   884     010F                     l103:	
   885                           ;SPI.c: 24:     }
   886                           
   887                           
   888                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   889     010F  1283               	bcf	3,5	;RP0=0, select bank0
   890     0110  1303               	bcf	3,6	;RP1=0, select bank0
   891     0111  0823               	movf	spiInit@sType,w
   892     0112  0421               	iorwf	spiInit@sClockIdle,w
   893     0113  0094               	movwf	20	;volatile
   894     0114                     l104:
   895     0114  0008               	return
   896     0115                     __end_of_spiInit:
   897                           
   898                           	psect	text3
   899     00C9                     __ptext3:	
   900 ;; *************** function _ADC_CONF *****************
   901 ;; Defined at:
   902 ;;		line 8 in file "C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  frec            2    0[BANK0 ] int 
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         0       2       0       0       0
   917 ;;      Locals:         0       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0
   919 ;;      Totals:         0       2       0       0       0
   920 ;;Total ram usage:        2 bytes
   921 ;; Hardware stack levels used: 1
   922 ;; Hardware stack levels required when called: 3
   923 ;; This function calls:
   924 ;;		Nothing
   925 ;; This function is called by:
   926 ;;		_setup
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930     00C9                     _ADC_CONF:	
   931                           ;psect for function _ADC_CONF
   932                           
   933     00C9                     l1015:	
   934                           ;incstack = 0
   935                           ; Regs used in _ADC_CONF: [wreg-fsr0h+status,2+status,0]
   936                           
   937                           
   938                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 10:     ADCON0bi
      +                          ts.ADON = 1;
   939     00C9  1283               	bcf	3,5	;RP0=0, select bank0
   940     00CA  1303               	bcf	3,6	;RP1=0, select bank0
   941     00CB  141F               	bsf	31,0	;volatile
   942     00CC                     l1017:
   943                           
   944                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 12:     ADCON0bi
      +                          ts.CHS = 0b0101;
   945     00CC  081F               	movf	31,w	;volatile
   946     00CD  39C3               	andlw	-61
   947     00CE  3814               	iorlw	20
   948     00CF  009F               	movwf	31	;volatile
   949     00D0                     l1019:
   950                           
   951                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 14:     ADCON1bi
      +                          ts.ADFM = 0;
   952     00D0  1683               	bsf	3,5	;RP0=1, select bank1
   953     00D1  1303               	bcf	3,6	;RP1=0, select bank1
   954     00D2  139F               	bcf	31,7	;volatile
   955     00D3                     l1021:
   956                           
   957                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 15:     ADCON1bi
      +                          ts.VCFG0 = 0;
   958     00D3  121F               	bcf	31,4	;volatile
   959     00D4                     l1023:
   960                           
   961                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 16:     ADCON1bi
      +                          ts.VCFG1 = 0;
   962     00D4  129F               	bcf	31,5	;volatile
   963     00D5                     l1025:
   964                           
   965                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 18:     ADCON0bi
      +                          ts.GO = 0;
   966     00D5  1283               	bcf	3,5	;RP0=0, select bank0
   967     00D6  1303               	bcf	3,6	;RP1=0, select bank0
   968     00D7  109F               	bcf	31,1	;volatile
   969                           
   970                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 21:     switch(f
      +                          rec){
   971     00D8  28E6               	goto	l1035
   972     00D9                     l1027:
   973                           
   974                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 23:             
      +                          ADCON0bits.ADCS = 0B00;
   975     00D9  303F               	movlw	-193
   976     00DA  059F               	andwf	31,f	;volatile
   977                           
   978                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 24:             
      +                          break;
   979     00DB  28F6               	goto	l135
   980     00DC                     l1029:
   981                           
   982                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 26:             
      +                          ADCON0bits.ADCS = 0B01;
   983     00DC  081F               	movf	31,w	;volatile
   984     00DD  393F               	andlw	-193
   985     00DE  3840               	iorlw	64
   986     00DF  009F               	movwf	31	;volatile
   987                           
   988                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 27:             
      +                          break;
   989     00E0  28F6               	goto	l135
   990     00E1                     l1031:
   991                           
   992                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 29:             
      +                          ADCON0bits.ADCS = 0B10;
   993     00E1  081F               	movf	31,w	;volatile
   994     00E2  393F               	andlw	-193
   995     00E3  3880               	iorlw	128
   996     00E4  009F               	movwf	31	;volatile
   997                           
   998                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 30:             
      +                          break;
   999     00E5  28F6               	goto	l135
  1000     00E6                     l1035:
  1001                           
  1002                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1003                           ; Switch size 1, requested type "simple"
  1004                           ; Number of cases is 1, Range of values is 0 to 0
  1005                           ; switch strategies available:
  1006                           ; Name         Instructions Cycles
  1007                           ; simple_byte            4     3 (average)
  1008                           ; direct_byte           11     8 (fixed)
  1009                           ; jumptable            260     6 (fixed)
  1010                           ;	Chosen strategy is simple_byte
  1011     00E6  0821               	movf	ADC_CONF@frec+1,w
  1012     00E7  3A00               	xorlw	0	; case 0
  1013     00E8  1903               	skipnz
  1014     00E9  28EB               	goto	l1141
  1015     00EA  28F6               	goto	l135
  1016     00EB                     l1141:
  1017                           
  1018                           ; Switch size 1, requested type "simple"
  1019                           ; Number of cases is 3, Range of values is 1 to 8
  1020                           ; switch strategies available:
  1021                           ; Name         Instructions Cycles
  1022                           ; simple_byte           10     6 (average)
  1023                           ; direct_byte           35    11 (fixed)
  1024                           ; jumptable            263     9 (fixed)
  1025                           ;	Chosen strategy is simple_byte
  1026     00EB  0820               	movf	ADC_CONF@frec,w
  1027     00EC  3A01               	xorlw	1	; case 1
  1028     00ED  1903               	skipnz
  1029     00EE  28D9               	goto	l1027
  1030     00EF  3A05               	xorlw	5	; case 4
  1031     00F0  1903               	skipnz
  1032     00F1  28DC               	goto	l1029
  1033     00F2  3A0C               	xorlw	12	; case 8
  1034     00F3  1903               	skipnz
  1035     00F4  28E1               	goto	l1031
  1036     00F5  28F6               	goto	l135
  1037     00F6                     l135:
  1038     00F6  0008               	return
  1039     00F7                     __end_of_ADC_CONF:
  1040                           
  1041                           	psect	text4
  1042     0115                     __ptext4:	
  1043 ;; *************** function _ADC_IF *****************
  1044 ;; Defined at:
  1045 ;;		line 35 in file "C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1059 ;;      Params:         0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0
  1061 ;;      Temps:          0       1       0       0       0
  1062 ;;      Totals:         0       1       0       0       0
  1063 ;;Total ram usage:        1 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 3
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073     0115                     _ADC_IF:	
  1074                           ;psect for function _ADC_IF
  1075                           
  1076     0115                     l1101:	
  1077                           ;incstack = 0
  1078                           ; Regs used in _ADC_IF: [wreg]
  1079                           
  1080                           
  1081                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 36:     if (ADCO
      +                          N0bits.GO == 0){
  1082     0115  1283               	bcf	3,5	;RP0=0, select bank0
  1083     0116  1303               	bcf	3,6	;RP1=0, select bank0
  1084     0117  189F               	btfsc	31,1	;volatile
  1085     0118  291A               	goto	u191
  1086     0119  291B               	goto	u190
  1087     011A                     u191:
  1088     011A  2925               	goto	l139
  1089     011B                     u190:
  1090     011B                     l1103:
  1091                           
  1092                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 38:             
      +                          _delay((unsigned long)((50)*(8000000/4000000.0)));
  1093     011B  3020               	movlw	32
  1094     011C  1283               	bcf	3,5	;RP0=0, select bank0
  1095     011D  1303               	bcf	3,6	;RP1=0, select bank0
  1096     011E  00A0               	movwf	??_ADC_IF
  1097     011F                     u247:
  1098     011F  0BA0               	decfsz	??_ADC_IF,f
  1099     0120  291F               	goto	u247
  1100     0121  0000               	nop
  1101     0122                     l1105:
  1102                           
  1103                           ;C:/Users/Alejandro Gonzalez/OneDrive/Escritorio/SPI/SPI-Slave.X/ADC.c: 39:             
      +                          ADCON0bits.GO = 1;
  1104     0122  1283               	bcf	3,5	;RP0=0, select bank0
  1105     0123  1303               	bcf	3,6	;RP1=0, select bank0
  1106     0124  149F               	bsf	31,1	;volatile
  1107     0125                     l139:
  1108     0125  0008               	return
  1109     0126                     __end_of_ADC_IF:
  1110                           
  1111                           	psect	text5
  1112     001B                     __ptext5:	
  1113 ;; *************** function _isr *****************
  1114 ;; Defined at:
  1115 ;;		line 42 in file "main.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg, status,2, status,0, pclath, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1129 ;;      Params:         0       0       0       0       0
  1130 ;;      Locals:         0       0       0       0       0
  1131 ;;      Temps:          4       0       0       0       0
  1132 ;;      Totals:         4       0       0       0       0
  1133 ;;Total ram usage:        4 bytes
  1134 ;; Hardware stack levels used: 1
  1135 ;; Hardware stack levels required when called: 2
  1136 ;; This function calls:
  1137 ;;		_spiRead
  1138 ;;		_spiWrite
  1139 ;; This function is called by:
  1140 ;;		Interrupt level 1
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144     001B                     _isr:	
  1145                           ;psect for function _isr
  1146                           
  1147     001B                     i1l833:
  1148                           
  1149                           ;main.c: 46:    if(SSPIF == 1){
  1150     001B  1283               	bcf	3,5	;RP0=0, select bank0
  1151     001C  1303               	bcf	3,6	;RP1=0, select bank0
  1152     001D  1D8C               	btfss	12,3	;volatile
  1153     001E  2820               	goto	u4_21
  1154     001F  2821               	goto	u4_20
  1155     0020                     u4_21:
  1156     0020  2843               	goto	i1l847
  1157     0021                     u4_20:
  1158     0021                     i1l835:
  1159                           
  1160                           ;main.c: 47:        PORTD = spiRead();
  1161     0021  120A  118A  2126  120A  118A  	fcall	_spiRead
  1162     0026  1283               	bcf	3,5	;RP0=0, select bank0
  1163     0027  1303               	bcf	3,6	;RP1=0, select bank0
  1164     0028  0088               	movwf	8	;volatile
  1165     0029                     i1l837:
  1166                           
  1167                           ;main.c: 48:        if(PORTD == 0){
  1168     0029  0808               	movf	8,w	;volatile
  1169     002A  1D03               	btfss	3,2
  1170     002B  282D               	goto	u5_21
  1171     002C  282E               	goto	u5_20
  1172     002D                     u5_21:
  1173     002D  2835               	goto	i1l841
  1174     002E                     u5_20:
  1175     002E                     i1l839:
  1176                           
  1177                           ;main.c: 49:         spiWrite(adc_val);
  1178     002E  0877               	movf	_adc_val,w
  1179     002F  120A  118A  2136  120A  118A  	fcall	_spiWrite
  1180                           
  1181                           ;main.c: 50:        }
  1182     0034  2840               	goto	i1l845
  1183     0035                     i1l841:
  1184     0035  0308               	decf	8,w	;volatile
  1185     0036  1D03               	btfss	3,2
  1186     0037  2839               	goto	u6_21
  1187     0038  283A               	goto	u6_20
  1188     0039                     u6_21:
  1189     0039  2840               	goto	i1l845
  1190     003A                     u6_20:
  1191     003A                     i1l843:
  1192                           
  1193                           ;main.c: 52:         spiWrite(contador);
  1194     003A  0875               	movf	_contador,w
  1195     003B  120A  118A  2136  120A  118A  	fcall	_spiWrite
  1196     0040                     i1l845:
  1197                           
  1198                           ;main.c: 54:         SSPIF = 0;
  1199     0040  1283               	bcf	3,5	;RP0=0, select bank0
  1200     0041  1303               	bcf	3,6	;RP1=0, select bank0
  1201     0042  118C               	bcf	12,3	;volatile
  1202     0043                     i1l847:
  1203                           
  1204                           ;main.c: 57:     if (PIR1bits.ADIF){
  1205     0043  1F0C               	btfss	12,6	;volatile
  1206     0044  2846               	goto	u7_21
  1207     0045  2847               	goto	u7_20
  1208     0046                     u7_21:
  1209     0046  2858               	goto	i1l67
  1210     0047                     u7_20:
  1211     0047                     i1l849:
  1212                           
  1213                           ;main.c: 58:         if (ADCON0bits.CHS == 5){
  1214     0047  0C1F               	rrf	31,w	;volatile
  1215     0048  00F1               	movwf	??_isr
  1216     0049  0C71               	rrf	??_isr,w
  1217     004A  390F               	andlw	15
  1218     004B  3A05               	xorlw	5
  1219     004C  1D03               	skipz
  1220     004D  284F               	goto	u8_21
  1221     004E  2850               	goto	u8_20
  1222     004F                     u8_21:
  1223     004F  2857               	goto	i1l853
  1224     0050                     u8_20:
  1225     0050                     i1l851:
  1226                           
  1227                           ;main.c: 59:             adc_val = ADRESH;
  1228     0050  081E               	movf	30,w	;volatile
  1229     0051  00F1               	movwf	??_isr
  1230     0052  01F2               	clrf	??_isr+1
  1231     0053  0871               	movf	??_isr,w
  1232     0054  00F7               	movwf	_adc_val
  1233     0055  0872               	movf	??_isr+1,w
  1234     0056  00F8               	movwf	_adc_val+1
  1235     0057                     i1l853:
  1236                           
  1237                           ;main.c: 61:         PIR1bits.ADIF = 0;
  1238     0057  130C               	bcf	12,6	;volatile
  1239     0058                     i1l67:
  1240     0058  0874               	movf	??_isr+3,w
  1241     0059  008A               	movwf	10
  1242     005A  0E73               	swapf	??_isr+2,w
  1243     005B  0083               	movwf	3
  1244     005C  0EFE               	swapf	btemp,f
  1245     005D  0E7E               	swapf	btemp,w
  1246     005E  0009               	retfie
  1247     005F                     __end_of_isr:
  1248                           
  1249                           	psect	intentry
  1250     0004                     __pintentry:	
  1251                           ;incstack = 0
  1252                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1253                           
  1254     0004                     interrupt_function:
  1255     007E                     saved_w	set	btemp
  1256     0004  00FE               	movwf	btemp
  1257     0005  0E03               	swapf	3,w
  1258     0006  00F3               	movwf	??_isr+2
  1259     0007  080A               	movf	10,w
  1260     0008  00F4               	movwf	??_isr+3
  1261     0009  120A  118A  281B   	ljmp	_isr
  1262                           
  1263                           	psect	text6
  1264     0136                     __ptext6:	
  1265 ;; *************** function _spiWrite *****************
  1266 ;; Defined at:
  1267 ;;		line 34 in file "SPI.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  dat             1    wreg     unsigned char 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  dat             1    0[COMMON] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       0       0       0       0
  1282 ;;      Locals:         1       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0
  1284 ;;      Totals:         1       0       0       0       0
  1285 ;;Total ram usage:        1 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_isr
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294     0136                     _spiWrite:	
  1295                           ;psect for function _spiWrite
  1296                           
  1297                           
  1298                           ;incstack = 0
  1299                           ; Regs used in _spiWrite: [wreg]
  1300                           ;spiWrite@dat stored from wreg
  1301     0136  00F0               	movwf	spiWrite@dat
  1302     0137                     i1l775:
  1303                           
  1304                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1305     0137  0870               	movf	spiWrite@dat,w
  1306     0138  1283               	bcf	3,5	;RP0=0, select bank0
  1307     0139  1303               	bcf	3,6	;RP1=0, select bank0
  1308     013A  0093               	movwf	19	;volatile
  1309     013B                     i1l113:
  1310     013B  0008               	return
  1311     013C                     __end_of_spiWrite:
  1312                           
  1313                           	psect	text7
  1314     0126                     __ptext7:	
  1315 ;; *************** function _spiRead *****************
  1316 ;; Defined at:
  1317 ;;		line 47 in file "SPI.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      unsigned char 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0, pclath, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1331 ;;      Params:         0       0       0       0       0
  1332 ;;      Locals:         0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0
  1334 ;;      Totals:         0       0       0       0       0
  1335 ;;Total ram usage:        0 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; Hardware stack levels required when called: 1
  1338 ;; This function calls:
  1339 ;;		_spiReceiveWait
  1340 ;; This function is called by:
  1341 ;;		_isr
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345     0126                     _spiRead:	
  1346                           ;psect for function _spiRead
  1347                           
  1348     0126                     i1l769:	
  1349                           ;incstack = 0
  1350                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1351                           
  1352                           
  1353                           ;SPI.c: 49:     spiReceiveWait();
  1354     0126  120A  118A  212F  120A  118A  	fcall	_spiReceiveWait
  1355     012B                     i1l771:
  1356                           
  1357                           ;SPI.c: 50:     return(SSPBUF);
  1358     012B  1283               	bcf	3,5	;RP0=0, select bank0
  1359     012C  1303               	bcf	3,6	;RP1=0, select bank0
  1360     012D  0813               	movf	19,w	;volatile
  1361     012E                     i1l121:
  1362     012E  0008               	return
  1363     012F                     __end_of_spiRead:
  1364                           
  1365                           	psect	text8
  1366     012F                     __ptext8:	
  1367 ;; *************** function _spiReceiveWait *****************
  1368 ;; Defined at:
  1369 ;;		line 29 in file "SPI.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		None
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1383 ;;      Params:         0       0       0       0       0
  1384 ;;      Locals:         0       0       0       0       0
  1385 ;;      Temps:          0       0       0       0       0
  1386 ;;      Totals:         0       0       0       0       0
  1387 ;;Total ram usage:        0 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_spiRead
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396     012F                     _spiReceiveWait:	
  1397                           ;psect for function _spiReceiveWait
  1398                           
  1399     012F                     i1l767:	
  1400                           ;incstack = 0
  1401                           ; Regs used in _spiReceiveWait: []
  1402                           
  1403     012F                     i1l107:	
  1404                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1405                           
  1406     012F  1683               	bsf	3,5	;RP0=1, select bank1
  1407     0130  1303               	bcf	3,6	;RP1=0, select bank1
  1408     0131  1C14               	btfss	20,0	;volatile
  1409     0132  2934               	goto	u2_21
  1410     0133  2935               	goto	u2_20
  1411     0134                     u2_21:
  1412     0134  292F               	goto	i1l107
  1413     0135                     u2_20:
  1414     0135                     i1l110:
  1415     0135  0008               	return
  1416     0136                     __end_of_spiReceiveWait:
  1417     007E                     btemp	set	126	;btemp
  1418     007E                     wtemp0	set	126
  1419                           
  1420                           	psect	idloc
  1421                           
  1422                           ;Config register IDLOC0 @ 0x2000
  1423                           ;	unspecified, using default values
  1424     2000                     	org	8192
  1425     2000  3FFF               	dw	16383
  1426                           
  1427                           ;Config register IDLOC1 @ 0x2001
  1428                           ;	unspecified, using default values
  1429     2001                     	org	8193
  1430     2001  3FFF               	dw	16383
  1431                           
  1432                           ;Config register IDLOC2 @ 0x2002
  1433                           ;	unspecified, using default values
  1434     2002                     	org	8194
  1435     2002  3FFF               	dw	16383
  1436                           
  1437                           ;Config register IDLOC3 @ 0x2003
  1438                           ;	unspecified, using default values
  1439     2003                     	org	8195
  1440     2003  3FFF               	dw	16383
  1441                           
  1442                           	psect	config
  1443                           
  1444                           ;Config register CONFIG1 @ 0x2007
  1445                           ;	Oscillator Selection bits
  1446                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1447                           ;	Watchdog Timer Enable bit
  1448                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1449                           ;	Power-up Timer Enable bit
  1450                           ;	PWRTE = OFF, PWRT disabled
  1451                           ;	RE3/MCLR pin function select bit
  1452                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1453                           ;	Code Protection bit
  1454                           ;	CP = OFF, Program memory code protection is disabled
  1455                           ;	Data Code Protection bit
  1456                           ;	CPD = OFF, Data memory code protection is disabled
  1457                           ;	Brown Out Reset Selection bits
  1458                           ;	BOREN = OFF, BOR disabled
  1459                           ;	Internal External Switchover bit
  1460                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1461                           ;	Fail-Safe Clock Monitor Enabled bit
  1462                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1463                           ;	Low Voltage Programming Enable bit
  1464                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1465                           ;	In-Circuit Debugger Mode bit
  1466                           ;	DEBUG = 0x1, unprogramme  1467     2007                     	org	8199
  1468     2007  20D4               	dw	8404
  1469                           
  1470                           ;Config register CONFIG2 @ 0x2008
  1471                           ;	Brown-out Reset Selection bit
  1472                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1473                           ;	Flash Program Memory Self Write Enable bits
  1474                           ;	WRT = OFF, Write protection off
  1475     2008                     	org	8200
  1476     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      4       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     577
                             _ADC_IF
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     577
                           _ADC_CONF
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _ADC_CONF                                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_IF                                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      15
                                              1 COMMON     4     4      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_IF
   _setup
     _ADC_CONF
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 02 14:14:12 2023

            _SSPSTATbits 0094                       l73 00B5                       l74 00AA  
                     l87 0099                       l79 00B9                      l103 010F  
                    l104 0114                      l135 00F6                      l139 0125  
                    u200 00AA                      u201 00A9                      u210 00AE  
                    u211 00AD                      u220 00B9                      u221 00B8  
                    u230 00BD                      u231 00BC                      u180 0103  
                    u181 0102                      u190 011B                      u247 011F  
                    u191 011A                      _isr 001B                     l1101 0115  
                   l1021 00D3                     l1103 011B                     l1031 00E1  
                   l1023 00D4                     l1015 00C9                     l1111 00A4  
                   l1105 0122                     l1025 00D5                     l1017 00CC  
                   l1041 00FA                     l1027 00D9                     l1035 00E6  
                   l1019 00D0                     l1043 0103                     l1051 005F  
                   l1115 00AE                     l1107 009A                     l1141 00EB  
                   l1029 00DC                     l1045 0107                     l1061 006B  
                   l1053 0063                     l1109 009F                     l1047 0109  
                   l1071 007C                     l1063 006C                     l1055 0067  
                   l1119 00BD                     l1049 010E                     l1081 0081  
                   l1073 007D                     l1065 006F                     l1057 0068  
                   l1091 0088                     l1083 0082                     l1075 007E  
                   l1067 0070                     l1059 0069                     l1093 008B  
                   l1085 0085                     l1077 007F                     l1069 0079  
                   l1095 008C                     l1087 0086                     l1079 0080  
                   l1097 008D                     l1089 0087                     l1099 008E  
                   ?_isr 0070                     i1l67 0058                     u2_20 0135  
                   u2_21 0134                     u4_20 0021                     u4_21 0020  
                   u5_20 002E                     u5_21 002D                     u6_20 003A  
                   u6_21 0039                     u7_20 0047                     u7_21 0046  
                   u8_20 0050                     u8_21 004F         __end_of_ADC_CONF 00F7  
                   _main 009A                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l110 0135                    i1l121 012E                    i1l113 013B  
                  i1l107 012F                    i1l841 0035                    i1l833 001B  
                  i1l771 012B                    i1l851 0050                    i1l843 003A  
                  i1l835 0021                    i1l853 0057                    i1l845 0040  
                  i1l837 0029                    i1l767 012F                    i1l775 0137  
                  i1l839 002E                    i1l847 0043                    i1l769 0126  
                  i1l849 0047                    _PORTA 0005                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _SSPIF 0063                    _setup 005F                    pclath 000A  
        __end_of_spiInit 0115          __end_of_spiRead 012F                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00C9  
                 ??_main 0075                   _ADC_IF 0115                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
              ?_ADC_CONF 0020                   saved_w 007E         __end_of_spiWrite 013C  
              ??_spiInit 0075                ??_spiRead 0070  __end_of__initialization 0017  
           ADC_CONF@frec 0020           __pcstackCOMMON 0070            __end_of_setup 009A  
             ??_ADC_CONF 0075           _OPTION_REGbits 0081                  ?_ADC_IF 0070  
                ??_setup 0075               __pbssBANK0 0024               __pmaintext 009A  
             __pintentry 0004                  _SSPSTAT 0094                ?_spiWrite 0070  
                _adc_val 0077                  _bandera 0024                  __ptext1 005F  
                __ptext2 00F7                  __ptext3 00C9                  __ptext4 0115  
                __ptext5 001B                  __ptext6 0136                  __ptext7 0126  
                __ptext8 012F                  _spiInit 00F7                  _spiRead 0126  
   end_of_initialization 0017               ??_spiWrite 0070                _PORTBbits 0006  
              _TRISAbits 0085              spiWrite@dat 0070           __end_of_ADC_IF 0126  
         _spiReceiveWait 012F      start_initialization 000F              __end_of_isr 005F  
               ??_ADC_IF 0020   __end_of_spiReceiveWait 0136              __pbssCOMMON 0075  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
               _ADC_CONF 00C9                 ?_spiInit 0020                 ?_spiRead 0070  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F                 _WPUBbits 0095  
               _contador 0075                 _spiWrite 0136             spiInit@sType 0023  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070               _OSCCONbits 008F  
