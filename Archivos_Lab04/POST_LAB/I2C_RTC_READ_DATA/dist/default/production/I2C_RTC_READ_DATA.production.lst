

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 08 11:19:24 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Version 2.40
    45                           ; Generated 04/07/2022 GMT
    46                           ; 
    47                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79     0000                     	;# 
    80     0001                     	;# 
    81     0002                     	;# 
    82     0003                     	;# 
    83     0004                     	;# 
    84     0005                     	;# 
    85     0006                     	;# 
    86     0007                     	;# 
    87     0008                     	;# 
    88     0009                     	;# 
    89     000A                     	;# 
    90     000B                     	;# 
    91     000C                     	;# 
    92     000D                     	;# 
    93     000E                     	;# 
    94     000E                     	;# 
    95     000F                     	;# 
    96     0010                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0013                     	;# 
   100     0014                     	;# 
   101     0015                     	;# 
   102     0015                     	;# 
   103     0016                     	;# 
   104     0017                     	;# 
   105     0018                     	;# 
   106     0019                     	;# 
   107     001A                     	;# 
   108     001B                     	;# 
   109     001B                     	;# 
   110     001C                     	;# 
   111     001D                     	;# 
   112     001E                     	;# 
   113     001F                     	;# 
   114     0081                     	;# 
   115     0085                     	;# 
   116     0086                     	;# 
   117     0087                     	;# 
   118     0088                     	;# 
   119     0089                     	;# 
   120     008C                     	;# 
   121     008D                     	;# 
   122     008E                     	;# 
   123     008F                     	;# 
   124     0090                     	;# 
   125     0091                     	;# 
   126     0092                     	;# 
   127     0093                     	;# 
   128     0093                     	;# 
   129     0093                     	;# 
   130     0094                     	;# 
   131     0095                     	;# 
   132     0096                     	;# 
   133     0097                     	;# 
   134     0098                     	;# 
   135     0099                     	;# 
   136     009A                     	;# 
   137     009B                     	;# 
   138     009C                     	;# 
   139     009D                     	;# 
   140     009E                     	;# 
   141     009F                     	;# 
   142     0105                     	;# 
   143     0107                     	;# 
   144     0108                     	;# 
   145     0109                     	;# 
   146     010C                     	;# 
   147     010C                     	;# 
   148     010D                     	;# 
   149     010E                     	;# 
   150     010F                     	;# 
   151     0185                     	;# 
   152     0187                     	;# 
   153     0188                     	;# 
   154     0189                     	;# 
   155     018C                     	;# 
   156     018D                     	;# 
   157     0000                     	;# 
   158     0001                     	;# 
   159     0002                     	;# 
   160     0003                     	;# 
   161     0004                     	;# 
   162     0005                     	;# 
   163     0006                     	;# 
   164     0007                     	;# 
   165     0008                     	;# 
   166     0009                     	;# 
   167     000A                     	;# 
   168     000B                     	;# 
   169     000C                     	;# 
   170     000D                     	;# 
   171     000E                     	;# 
   172     000E                     	;# 
   173     000F                     	;# 
   174     0010                     	;# 
   175     0011                     	;# 
   176     0012                     	;# 
   177     0013                     	;# 
   178     0014                     	;# 
   179     0015                     	;# 
   180     0015                     	;# 
   181     0016                     	;# 
   182     0017                     	;# 
   183     0018                     	;# 
   184     0019                     	;# 
   185     001A                     	;# 
   186     001B                     	;# 
   187     001B                     	;# 
   188     001C                     	;# 
   189     001D                     	;# 
   190     001E                     	;# 
   191     001F                     	;# 
   192     0081                     	;# 
   193     0085                     	;# 
   194     0086                     	;# 
   195     0087                     	;# 
   196     0088                     	;# 
   197     0089                     	;# 
   198     008C                     	;# 
   199     008D                     	;# 
   200     008E                     	;# 
   201     008F                     	;# 
   202     0090                     	;# 
   203     0091                     	;# 
   204     0092                     	;# 
   205     0093                     	;# 
   206     0093                     	;# 
   207     0093                     	;# 
   208     0094                     	;# 
   209     0095                     	;# 
   210     0096                     	;# 
   211     0097                     	;# 
   212     0098                     	;# 
   213     0099                     	;# 
   214     009A                     	;# 
   215     009B                     	;# 
   216     009C                     	;# 
   217     009D                     	;# 
   218     009E                     	;# 
   219     009F                     	;# 
   220     0105                     	;# 
   221     0107                     	;# 
   222     0108                     	;# 
   223     0109                     	;# 
   224     010C                     	;# 
   225     010C                     	;# 
   226     010D                     	;# 
   227     010E                     	;# 
   228     010F                     	;# 
   229     0185                     	;# 
   230     0187                     	;# 
   231     0188                     	;# 
   232     0189                     	;# 
   233     018C                     	;# 
   234     018D                     	;# 
   235     0000                     	;# 
   236     0001                     	;# 
   237     0002                     	;# 
   238     0003                     	;# 
   239     0004                     	;# 
   240     0005                     	;# 
   241     0006                     	;# 
   242     0007                     	;# 
   243     0008                     	;# 
   244     0009                     	;# 
   245     000A                     	;# 
   246     000B                     	;# 
   247     000C                     	;# 
   248     000D                     	;# 
   249     000E                     	;# 
   250     000E                     	;# 
   251     000F                     	;# 
   252     0010                     	;# 
   253     0011                     	;# 
   254     0012                     	;# 
   255     0013                     	;# 
   256     0014                     	;# 
   257     0015                     	;# 
   258     0015                     	;# 
   259     0016                     	;# 
   260     0017                     	;# 
   261     0018                     	;# 
   262     0019                     	;# 
   263     001A                     	;# 
   264     001B                     	;# 
   265     001B                     	;# 
   266     001C                     	;# 
   267     001D                     	;# 
   268     001E                     	;# 
   269     001F                     	;# 
   270     0081                     	;# 
   271     0085                     	;# 
   272     0086                     	;# 
   273     0087                     	;# 
   274     0088                     	;# 
   275     0089                     	;# 
   276     008C                     	;# 
   277     008D                     	;# 
   278     008E                     	;# 
   279     008F                     	;# 
   280     0090                     	;# 
   281     0091                     	;# 
   282     0092                     	;# 
   283     0093                     	;# 
   284     0093                     	;# 
   285     0093                     	;# 
   286     0094                     	;# 
   287     0095                     	;# 
   288     0096                     	;# 
   289     0097                     	;# 
   290     0098                     	;# 
   291     0099                     	;# 
   292     009A                     	;# 
   293     009B                     	;# 
   294     009C                     	;# 
   295     009D                     	;# 
   296     009E                     	;# 
   297     009F                     	;# 
   298     0105                     	;# 
   299     0107                     	;# 
   300     0108                     	;# 
   301     0109                     	;# 
   302     010C                     	;# 
   303     010C                     	;# 
   304     010D                     	;# 
   305     010E                     	;# 
   306     010F                     	;# 
   307     0185                     	;# 
   308     0187                     	;# 
   309     0188                     	;# 
   310     0189                     	;# 
   311     018C                     	;# 
   312     018D                     	;# 
   313     0000                     	;# 
   314     0001                     	;# 
   315     0002                     	;# 
   316     0003                     	;# 
   317     0004                     	;# 
   318     0005                     	;# 
   319     0006                     	;# 
   320     0007                     	;# 
   321     0008                     	;# 
   322     0009                     	;# 
   323     000A                     	;# 
   324     000B                     	;# 
   325     000C                     	;# 
   326     000D                     	;# 
   327     000E                     	;# 
   328     000E                     	;# 
   329     000F                     	;# 
   330     0010                     	;# 
   331     0011                     	;# 
   332     0012                     	;# 
   333     0013                     	;# 
   334     0014                     	;# 
   335     0015                     	;# 
   336     0015                     	;# 
   337     0016                     	;# 
   338     0017                     	;# 
   339     0018                     	;# 
   340     0019                     	;# 
   341     001A                     	;# 
   342     001B                     	;# 
   343     001B                     	;# 
   344     001C                     	;# 
   345     001D                     	;# 
   346     001E                     	;# 
   347     001F                     	;# 
   348     0081                     	;# 
   349     0085                     	;# 
   350     0086                     	;# 
   351     0087                     	;# 
   352     0088                     	;# 
   353     0089                     	;# 
   354     008C                     	;# 
   355     008D                     	;# 
   356     008E                     	;# 
   357     008F                     	;# 
   358     0090                     	;# 
   359     0091                     	;# 
   360     0092                     	;# 
   361     0093                     	;# 
   362     0093                     	;# 
   363     0093                     	;# 
   364     0094                     	;# 
   365     0095                     	;# 
   366     0096                     	;# 
   367     0097                     	;# 
   368     0098                     	;# 
   369     0099                     	;# 
   370     009A                     	;# 
   371     009B                     	;# 
   372     009C                     	;# 
   373     009D                     	;# 
   374     009E                     	;# 
   375     009F                     	;# 
   376     0105                     	;# 
   377     0107                     	;# 
   378     0108                     	;# 
   379     0109                     	;# 
   380     010C                     	;# 
   381     010C                     	;# 
   382     010D                     	;# 
   383     010E                     	;# 
   384     010F                     	;# 
   385     0185                     	;# 
   386     0187                     	;# 
   387     0188                     	;# 
   388     0189                     	;# 
   389     018C                     	;# 
   390     018D                     	;# 
   391     0000                     	;# 
   392     0001                     	;# 
   393     0002                     	;# 
   394     0003                     	;# 
   395     0004                     	;# 
   396     0005                     	;# 
   397     0006                     	;# 
   398     0007                     	;# 
   399     0008                     	;# 
   400     0009                     	;# 
   401     000A                     	;# 
   402     000B                     	;# 
   403     000C                     	;# 
   404     000D                     	;# 
   405     000E                     	;# 
   406     000E                     	;# 
   407     000F                     	;# 
   408     0010                     	;# 
   409     0011                     	;# 
   410     0012                     	;# 
   411     0013                     	;# 
   412     0014                     	;# 
   413     0015                     	;# 
   414     0015                     	;# 
   415     0016                     	;# 
   416     0017                     	;# 
   417     0018                     	;# 
   418     0019                     	;# 
   419     001A                     	;# 
   420     001B                     	;# 
   421     001B                     	;# 
   422     001C                     	;# 
   423     001D                     	;# 
   424     001E                     	;# 
   425     001F                     	;# 
   426     0081                     	;# 
   427     0085                     	;# 
   428     0086                     	;# 
   429     0087                     	;# 
   430     0088                     	;# 
   431     0089                     	;# 
   432     008C                     	;# 
   433     008D                     	;# 
   434     008E                     	;# 
   435     008F                     	;# 
   436     0090                     	;# 
   437     0091                     	;# 
   438     0092                     	;# 
   439     0093                     	;# 
   440     0093                     	;# 
   441     0093                     	;# 
   442     0094                     	;# 
   443     0095                     	;# 
   444     0096                     	;# 
   445     0097                     	;# 
   446     0098                     	;# 
   447     0099                     	;# 
   448     009A                     	;# 
   449     009B                     	;# 
   450     009C                     	;# 
   451     009D                     	;# 
   452     009E                     	;# 
   453     009F                     	;# 
   454     0105                     	;# 
   455     0107                     	;# 
   456     0108                     	;# 
   457     0109                     	;# 
   458     010C                     	;# 
   459     010C                     	;# 
   460     010D                     	;# 
   461     010E                     	;# 
   462     010F                     	;# 
   463     0185                     	;# 
   464     0187                     	;# 
   465     0188                     	;# 
   466     0189                     	;# 
   467     018C                     	;# 
   468     018D                     	;# 
   469                           
   470                           	psect	strings
   471     0800                     __pstrings:
   472     0800                     stringtab:
   473     0800                     __stringtab:
   474                           
   475                           ;	String table - string pointers are 1 byte each
   476     0800  1BFF               	btfsc	btemp+1,7
   477     0801  280A               	ljmp	stringcode
   478     0802  1383               	bcf	3,7
   479     0803  187F               	btfsc	btemp+1,0
   480     0804  1783               	bsf	3,7
   481     0805  0800               	movf	0,w
   482     0806  0A84               	incf	4,f
   483     0807  1903               	skipnz
   484     0808  0AFF               	incf	btemp+1,f
   485     0809  0008               	return
   486     080A                     stringcode:
   487     080A                     stringdir:
   488     080A  3008               	movlw	high stringdir
   489     080B  008A               	movwf	10
   490     080C  0804               	movf	4,w
   491     080D  0A84               	incf	4,f
   492     080E  0782               	addwf	2,f
   493     080F                     __stringbase:
   494     080F  3400               	retlw	0
   495     0810                     __end_of__stringtab:
   496     0810                     _dpowers:
   497     0810  3401               	retlw	1
   498     0811  3400               	retlw	0
   499     0812  340A               	retlw	10
   500     0813  3400               	retlw	0
   501     0814  3464               	retlw	100
   502     0815  3400               	retlw	0
   503     0816  34E8               	retlw	232
   504     0817  3403               	retlw	3
   505     0818  3410               	retlw	16
   506     0819  3427               	retlw	39
   507     081A                     __end_of_dpowers:
   508     0013                     _SSPBUF	set	19
   509     0014                     _SSPCON	set	20
   510     000B                     _INTCONbits	set	11
   511     0007                     _PORTCbits	set	7
   512     0008                     _PORTD	set	8
   513     001E                     _ADRESH	set	30
   514     001F                     _ADCON0bits	set	31
   515     000C                     _PIR1bits	set	12
   516     003F                     _RC7	set	63
   517     003E                     _RC6	set	62
   518     0063                     _SSPIF	set	99
   519     005E                     _PEIE	set	94
   520     005F                     _GIE	set	95
   521     009F                     _ADCON1bits	set	159
   522     0091                     _SSPCON2bits	set	145
   523     0094                     _SSPSTAT	set	148
   524     0093                     _SSPADD	set	147
   525     0091                     _SSPCON2	set	145
   526     008C                     _PIE1bits	set	140
   527     0086                     _TRISB	set	134
   528     0088                     _TRISD	set	136
   529     0087                     _TRISCbits	set	135
   530     008F                     _OSCCONbits	set	143
   531     0463                     _SSPIE	set	1123
   532     043C                     _TRISC4	set	1084
   533     043B                     _TRISC3	set	1083
   534     043A                     _TRISC2	set	1082
   535     0189                     _ANSELH	set	393
   536     0188                     _ANSEL	set	392
   537     081A                     STR_20:
   538     081A  3453               	retlw	83	;'S'
   539     081B  3431               	retlw	49	;'1'
   540     081C  3420               	retlw	32	;' '
   541     081D  3420               	retlw	32	;' '
   542     081E  3420               	retlw	32	;' '
   543     081F  3420               	retlw	32	;' '
   544     0820  3420               	retlw	32	;' '
   545     0821  3420               	retlw	32	;' '
   546     0822  3420               	retlw	32	;' '
   547     0823  3400               	retlw	0
   548     0824                     STR_1:
   549     0824  3425               	retlw	37	;'%'
   550     0825  3464               	retlw	100	;'d'
   551     0826  3400               	retlw	0
   552     0827                     STR_11:
   553     0827  342F               	retlw	47	;'/'
   554     0828  3400               	retlw	0
   555     0829                     STR_3:
   556     0829  343A               	retlw	58	;':'
   557     082A  3400               	retlw	0
   558     0827                     
   559                           	psect	cinit
   560     000F                     start_initialization:	
   561                           ; #config settings
   562                           
   563     000F                     __initialization:
   564                           
   565                           ; Clear objects allocated to COMMON
   566     000F  01F9               	clrf	__pbssCOMMON& (0+127)
   567                           
   568                           ; Clear objects allocated to BANK0
   569     0010  1383               	bcf	3,7	;select IRP bank0
   570     0011  3020               	movlw	low __pbssBANK0
   571     0012  0084               	movwf	4
   572     0013  3054               	movlw	low (__pbssBANK0+52)
   573     0014  120A  158A  242E  120A  118A  	fcall	clear_ram0
   574     0019                     end_of_initialization:	
   575                           ;End of C runtime variable initialization code
   576                           
   577     0019                     __end_of__initialization:
   578     0019  0183               	clrf	3
   579     001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   580                           
   581                           	psect	bssCOMMON
   582     0079                     __pbssCOMMON:
   583     0079                     _mil:
   584     0079                     	ds	1
   585                           
   586                           	psect	bssBANK0
   587     0020                     __pbssBANK0:
   588     0020                     _adc_val:
   589     0020                     	ds	2
   590     0022                     _YEAR:
   591     0022                     	ds	2
   592     0024                     _MOTH:
   593     0024                     	ds	2
   594     0026                     _DAY:
   595     0026                     	ds	2
   596     0028                     _HOR:
   597     0028                     	ds	2
   598     002A                     _MIN:
   599     002A                     	ds	2
   600     002C                     _SEG:
   601     002C                     	ds	2
   602     002E                     _cen:
   603     002E                     	ds	1
   604     002F                     _dec:
   605     002F                     	ds	1
   606     0030                     _uni:
   607     0030                     	ds	1
   608     0031                     _buffer_YEAR:
   609     0031                     	ds	5
   610     0036                     _buffer_MOTH:
   611     0036                     	ds	5
   612     003B                     _buffer_DAY:
   613     003B                     	ds	5
   614     0040                     _buffer_HOR:
   615     0040                     	ds	5
   616     0045                     _buffer_MIN:
   617     0045                     	ds	5
   618     004A                     _buffer_ADC:
   619     004A                     	ds	5
   620     004F                     _buffer_SEG:
   621     004F                     	ds	5
   622                           
   623                           	psect	clrtext
   624     0C2E                     clear_ram0:	
   625                           ;	Called with FSR containing the base address, and
   626                           ;	W with the last address+1
   627                           
   628     0C2E  0064               	clrwdt	;clear the watchdog before getting into this loop
   629     0C2F                     clrloop0:
   630     0C2F  0180               	clrf	0	;clear RAM location pointed to by FSR
   631     0C30  0A84               	incf	4,f	;increment pointer
   632     0C31  0604               	xorwf	4,w	;XOR with final address
   633     0C32  1903               	btfsc	3,2	;have we reached the end yet?
   634     0C33  3400               	retlw	0	;all done for this memory range, return
   635     0C34  0604               	xorwf	4,w	;XOR again to restore value
   636     0C35  2C2F               	goto	clrloop0	;do the next byte
   637                           
   638                           	psect	cstackCOMMON
   639     0070                     __pcstackCOMMON:
   640     0070                     ?_setup:
   641     0070                     ?_I2C_Master_Start:	
   642                           ; 1 bytes @ 0x0
   643                           
   644     0070                     ?_Dec_to_Bcd:	
   645                           ; 1 bytes @ 0x0
   646                           
   647     0070                     ?_I2C_Master_Stop:	
   648                           ; 1 bytes @ 0x0
   649                           
   650     0070                     ?_ADC_IF:	
   651                           ; 1 bytes @ 0x0
   652                           
   653     0070                     ?_I2C_Master_RepeatedStart:	
   654                           ; 1 bytes @ 0x0
   655                           
   656     0070                     ?_Bcd_to_Dec:	
   657                           ; 1 bytes @ 0x0
   658                           
   659     0070                     ?_Lcd_Init:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0070                     ?_Lcd_Clear:	
   663                           ; 1 bytes @ 0x0
   664                           
   665     0070                     ?_Division:	
   666                           ; 1 bytes @ 0x0
   667                           
   668     0070                     ?_Division3:	
   669                           ; 1 bytes @ 0x0
   670                           
   671     0070                     ?_isr:	
   672                           ; 1 bytes @ 0x0
   673                           
   674     0070                     ??_isr:	
   675                           ; 1 bytes @ 0x0
   676                           
   677     0070                     ?_main:	
   678                           ; 1 bytes @ 0x0
   679                           
   680     0070                     ?_I2C_Master_Wait:	
   681                           ; 1 bytes @ 0x0
   682                           
   683     0070                     ?_Lcd_Cmd:	
   684                           ; 1 bytes @ 0x0
   685                           
   686     0070                     ?_Lcd_Write:	
   687                           ; 1 bytes @ 0x0
   688                           
   689                           
   690                           ; 1 bytes @ 0x0
   691     0070                     	ds	4
   692     0074                     ??_I2C_Master_Start:
   693     0074                     ??_I2C_Master_Stop:	
   694                           ; 1 bytes @ 0x4
   695                           
   696     0074                     ??_ADC_IF:	
   697                           ; 1 bytes @ 0x4
   698                           
   699     0074                     ??_I2C_Master_RepeatedStart:	
   700                           ; 1 bytes @ 0x4
   701                           
   702     0074                     ?_ADC_CONF:	
   703                           ; 1 bytes @ 0x4
   704                           
   705     0074                     ?_I2C_Master_Init:	
   706                           ; 1 bytes @ 0x4
   707                           
   708     0074                     ??_I2C_Master_Wait:	
   709                           ; 1 bytes @ 0x4
   710                           
   711     0074                     ??_Lcd_Cmd:	
   712                           ; 1 bytes @ 0x4
   713                           
   714     0074                     ??_Lcd_Write:	
   715                           ; 1 bytes @ 0x4
   716                           
   717     0074                     ?___bmul:	
   718                           ; 1 bytes @ 0x4
   719                           
   720     0074                     ?_I2C_Master_Read:	
   721                           ; 1 bytes @ 0x4
   722                           
   723     0074                     ?___awmod:	
   724                           ; 2 bytes @ 0x4
   725                           
   726     0074                     ?___lwdiv:	
   727                           ; 2 bytes @ 0x4
   728                           
   729     0074                     ___bmul@multiplicand:	
   730                           ; 2 bytes @ 0x4
   731                           
   732     0074                     I2C_Master_Read@a:	
   733                           ; 1 bytes @ 0x4
   734                           
   735     0074                     ADC_CONF@frec:	
   736                           ; 2 bytes @ 0x4
   737                           
   738     0074                     ___awmod@divisor:	
   739                           ; 2 bytes @ 0x4
   740                           
   741     0074                     ___lwdiv@divisor:	
   742                           ; 2 bytes @ 0x4
   743                           
   744     0074                     I2C_Master_Init@c:	
   745                           ; 2 bytes @ 0x4
   746                           
   747                           
   748                           ; 4 bytes @ 0x4
   749     0074                     	ds	1
   750     0075                     ??___bmul:
   751     0075                     Lcd_Write@a:	
   752                           ; 1 bytes @ 0x5
   753                           
   754                           
   755                           ; 1 bytes @ 0x5
   756     0075                     	ds	1
   757     0076                     ??_I2C_Master_Read:
   758     0076                     ?_Lcd_Write_Str:	
   759                           ; 1 bytes @ 0x6
   760                           
   761     0076                     ??_ADC_CONF:	
   762                           ; 1 bytes @ 0x6
   763                           
   764     0076                     Lcd_Cmd@a:	
   765                           ; 1 bytes @ 0x6
   766                           
   767     0076                     ___bmul@product:	
   768                           ; 1 bytes @ 0x6
   769                           
   770     0076                     Lcd_Write_Str@a:	
   771                           ; 1 bytes @ 0x6
   772                           
   773     0076                     ___awmod@dividend:	
   774                           ; 2 bytes @ 0x6
   775                           
   776     0076                     ___lwdiv@dividend:	
   777                           ; 2 bytes @ 0x6
   778                           
   779                           
   780                           ; 2 bytes @ 0x6
   781     0076                     	ds	1
   782     0077                     ?_Lcd_Set:
   783     0077                     ??_Lcd_Init:	
   784                           ; 1 bytes @ 0x7
   785                           
   786     0077                     ??_Lcd_Clear:	
   787                           ; 1 bytes @ 0x7
   788                           
   789     0077                     Lcd_Set@b:	
   790                           ; 1 bytes @ 0x7
   791                           
   792     0077                     ___bmul@multiplier:	
   793                           ; 1 bytes @ 0x7
   794                           
   795                           
   796                           ; 1 bytes @ 0x7
   797     0077                     	ds	1
   798     0078                     ??_Lcd_Set:
   799     0078                     ??_I2C_Master_Init:	
   800                           ; 1 bytes @ 0x8
   801                           
   802     0078                     ??___awmod:	
   803                           ; 1 bytes @ 0x8
   804                           
   805     0078                     ??___lwdiv:	
   806                           ; 1 bytes @ 0x8
   807                           
   808     0078                     Lcd_Set@a:	
   809                           ; 1 bytes @ 0x8
   810                           
   811                           
   812                           ; 1 bytes @ 0x8
   813     0078                     	ds	1
   814     0079                     ??_setup:
   815     0079                     ??_I2C_Master_Write:	
   816                           ; 1 bytes @ 0x9
   817                           
   818                           
   819                           	psect	cstackBANK0
   820     0054                     __pcstackBANK0:	
   821                           ; 1 bytes @ 0x9
   822                           
   823     0054                     ??_Bcd_to_Dec:
   824     0054                     ??_Lcd_Write_Str:	
   825                           ; 1 bytes @ 0x0
   826                           
   827     0054                     ___awmod@counter:	
   828                           ; 1 bytes @ 0x0
   829                           
   830     0054                     I2C_Master_Read@temp:	
   831                           ; 1 bytes @ 0x0
   832                           
   833     0054                     ___lwdiv@quotient:	
   834                           ; 2 bytes @ 0x0
   835                           
   836                           
   837                           ; 2 bytes @ 0x0
   838     0054                     	ds	1
   839     0055                     ___awmod@sign:
   840                           
   841                           ; 1 bytes @ 0x1
   842     0055                     	ds	1
   843     0056                     ?___awdiv:
   844     0056                     Bcd_to_Dec@dec:	
   845                           ; 2 bytes @ 0x2
   846                           
   847     0056                     ___lwdiv@counter:	
   848                           ; 1 bytes @ 0x2
   849                           
   850     0056                     ___awdiv@divisor:	
   851                           ; 1 bytes @ 0x2
   852                           
   853                           
   854                           ; 2 bytes @ 0x2
   855     0056                     	ds	1
   856     0057                     ?___lwmod:
   857     0057                     Bcd_to_Dec@bcd:	
   858                           ; 2 bytes @ 0x3
   859                           
   860     0057                     Lcd_Write_Str@i:	
   861                           ; 1 bytes @ 0x3
   862                           
   863     0057                     ___lwmod@divisor:	
   864                           ; 2 bytes @ 0x3
   865                           
   866                           
   867                           ; 2 bytes @ 0x3
   868     0057                     	ds	1
   869     0058                     ___awdiv@dividend:
   870                           
   871                           ; 2 bytes @ 0x4
   872     0058                     	ds	1
   873     0059                     ___lwmod@dividend:
   874                           
   875                           ; 2 bytes @ 0x5
   876     0059                     	ds	1
   877     005A                     ??___awdiv:
   878                           
   879                           ; 1 bytes @ 0x6
   880     005A                     	ds	1
   881     005B                     ??___lwmod:
   882     005B                     ___awdiv@counter:	
   883                           ; 1 bytes @ 0x7
   884                           
   885                           
   886                           ; 1 bytes @ 0x7
   887     005B                     	ds	1
   888     005C                     ___awdiv@sign:
   889     005C                     ___lwmod@counter:	
   890                           ; 1 bytes @ 0x8
   891                           
   892                           
   893                           ; 1 bytes @ 0x8
   894     005C                     	ds	1
   895     005D                     ?_sprintf:
   896     005D                     sprintf@f:	
   897                           ; 2 bytes @ 0x9
   898                           
   899     005D                     ___awdiv@quotient:	
   900                           ; 1 bytes @ 0x9
   901                           
   902                           
   903                           ; 2 bytes @ 0x9
   904     005D                     	ds	2
   905     005F                     ??_Dec_to_Bcd:
   906     005F                     ??_Division:	
   907                           ; 1 bytes @ 0xB
   908                           
   909     005F                     ??_Division3:	
   910                           ; 1 bytes @ 0xB
   911                           
   912                           
   913                           ; 1 bytes @ 0xB
   914     005F                     	ds	1
   915     0060                     ??_sprintf:
   916                           
   917                           ; 1 bytes @ 0xC
   918     0060                     	ds	1
   919     0061                     _Division$1198:
   920     0061                     _Division3$1199:	
   921                           ; 2 bytes @ 0xD
   922                           
   923                           
   924                           ; 2 bytes @ 0xD
   925     0061                     	ds	2
   926     0063                     Division@y:
   927     0063                     Division3@y:	
   928                           ; 1 bytes @ 0xF
   929                           
   930     0063                     sprintf@ap:	
   931                           ; 1 bytes @ 0xF
   932                           
   933                           
   934                           ; 1 bytes @ 0xF
   935     0063                     	ds	1
   936     0064                     sprintf@flag:
   937                           
   938                           ; 1 bytes @ 0x10
   939     0064                     	ds	1
   940     0065                     sprintf@prec:
   941                           
   942                           ; 1 bytes @ 0x11
   943     0065                     	ds	1
   944     0066                     Dec_to_Bcd@dec:
   945     0066                     sprintf@val:	
   946                           ; 1 bytes @ 0x12
   947                           
   948                           
   949                           ; 2 bytes @ 0x12
   950     0066                     	ds	1
   951     0067                     ?_I2C_Master_Write:
   952     0067                     I2C_Master_Write@d:	
   953                           ; 1 bytes @ 0x13
   954                           
   955                           
   956                           ; 2 bytes @ 0x13
   957     0067                     	ds	1
   958     0068                     sprintf@c:
   959                           
   960                           ; 1 bytes @ 0x14
   961     0068                     	ds	1
   962     0069                     sprintf@sp:
   963                           
   964                           ; 1 bytes @ 0x15
   965     0069                     	ds	1
   966     006A                     ??_main:
   967                           
   968                           ; 1 bytes @ 0x16
   969     006A                     	ds	2
   970                           
   971                           	psect	maintext
   972     001D                     __pmaintext:	
   973 ;;
   974 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   975 ;;
   976 ;; *************** function _main *****************
   977 ;; Defined at:
   978 ;;		line 82 in file "main.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : B00/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0
   994 ;;      Temps:          0       2       0       0       0
   995 ;;      Totals:         0       2       0       0       0
   996 ;;Total ram usage:        2 bytes
   997 ;; Hardware stack levels required when called: 4
   998 ;; This function calls:
   999 ;;		_ADC_IF
  1000 ;;		_Bcd_to_Dec
  1001 ;;		_Dec_to_Bcd
  1002 ;;		_Division
  1003 ;;		_Division3
  1004 ;;		_I2C_Master_Read
  1005 ;;		_I2C_Master_RepeatedStart
  1006 ;;		_I2C_Master_Start
  1007 ;;		_I2C_Master_Stop
  1008 ;;		_I2C_Master_Write
  1009 ;;		_Lcd_Set
  1010 ;;		_Lcd_Write_Str
  1011 ;;		_setup
  1012 ;;		_sprintf
  1013 ;; This function is called by:
  1014 ;;		Startup code after reset
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018     001D                     _main:	
  1019                           ;psect for function _main
  1020                           
  1021     001D                     l2708:	
  1022                           ;incstack = 0
  1023                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1024                           
  1025                           
  1026                           ;main.c: 83:    setup();
  1027     001D  120A  158A  26F1  120A  118A  	fcall	_setup
  1028     0022                     l2710:
  1029                           
  1030                           ;main.c: 85:         I2C_Master_Start();
  1031     0022  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1032     0027                     l2712:
  1033                           
  1034                           ;main.c: 86:         I2C_Master_Write(0xD0);
  1035     0027  30D0               	movlw	208
  1036     0028  1283               	bcf	3,5	;RP0=0, select bank0
  1037     0029  1303               	bcf	3,6	;RP1=0, select bank0
  1038     002A  00E7               	movwf	I2C_Master_Write@d
  1039     002B  3000               	movlw	0
  1040     002C  00E8               	movwf	I2C_Master_Write@d+1
  1041     002D  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1042     0032                     l2714:
  1043                           
  1044                           ;main.c: 87:         I2C_Master_Write(0x01);
  1045     0032  3001               	movlw	1
  1046     0033  1283               	bcf	3,5	;RP0=0, select bank0
  1047     0034  1303               	bcf	3,6	;RP1=0, select bank0
  1048     0035  00E7               	movwf	I2C_Master_Write@d
  1049     0036  3000               	movlw	0
  1050     0037  00E8               	movwf	I2C_Master_Write@d+1
  1051     0038  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1052     003D                     l2716:
  1053                           
  1054                           ;main.c: 88:         I2C_Master_Write(Dec_to_Bcd(20));
  1055     003D  3014               	movlw	20
  1056     003E  120A  158A  255A  120A  118A  	fcall	_Dec_to_Bcd
  1057     0043  1283               	bcf	3,5	;RP0=0, select bank0
  1058     0044  1303               	bcf	3,6	;RP1=0, select bank0
  1059     0045  00EA               	movwf	??_main
  1060     0046  01EB               	clrf	??_main+1
  1061     0047  086A               	movf	??_main,w
  1062     0048  00E7               	movwf	I2C_Master_Write@d
  1063     0049  086B               	movf	??_main+1,w
  1064     004A  00E8               	movwf	I2C_Master_Write@d+1
  1065     004B  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1066     0050                     l2718:
  1067                           
  1068                           ;main.c: 89:         I2C_Master_Stop();
  1069     0050  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1070     0055                     l2720:
  1071                           
  1072                           ;main.c: 91:         I2C_Master_Start();
  1073     0055  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1074     005A                     l2722:
  1075                           
  1076                           ;main.c: 92:         I2C_Master_Write(0xD0);
  1077     005A  30D0               	movlw	208
  1078     005B  1283               	bcf	3,5	;RP0=0, select bank0
  1079     005C  1303               	bcf	3,6	;RP1=0, select bank0
  1080     005D  00E7               	movwf	I2C_Master_Write@d
  1081     005E  3000               	movlw	0
  1082     005F  00E8               	movwf	I2C_Master_Write@d+1
  1083     0060  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1084     0065                     l2724:
  1085                           
  1086                           ;main.c: 93:         I2C_Master_Write(0x00);
  1087     0065  3000               	movlw	0
  1088     0066  1283               	bcf	3,5	;RP0=0, select bank0
  1089     0067  1303               	bcf	3,6	;RP1=0, select bank0
  1090     0068  00E7               	movwf	I2C_Master_Write@d
  1091     0069  00E8               	movwf	I2C_Master_Write@d+1
  1092     006A  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1093     006F                     l2726:
  1094                           
  1095                           ;main.c: 94:         I2C_Master_Write(Dec_to_Bcd(0));
  1096     006F  3000               	movlw	0
  1097     0070  120A  158A  255A  120A  118A  	fcall	_Dec_to_Bcd
  1098     0075  1283               	bcf	3,5	;RP0=0, select bank0
  1099     0076  1303               	bcf	3,6	;RP1=0, select bank0
  1100     0077  00EA               	movwf	??_main
  1101     0078  01EB               	clrf	??_main+1
  1102     0079  086A               	movf	??_main,w
  1103     007A  00E7               	movwf	I2C_Master_Write@d
  1104     007B  086B               	movf	??_main+1,w
  1105     007C  00E8               	movwf	I2C_Master_Write@d+1
  1106     007D  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1107     0082                     l2728:
  1108                           
  1109                           ;main.c: 95:         I2C_Master_Stop();
  1110     0082  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1111     0087                     l2730:
  1112                           
  1113                           ;main.c: 97:          I2C_Master_Start();
  1114     0087  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1115     008C                     l2732:
  1116                           
  1117                           ;main.c: 98:         I2C_Master_Write(0xD0);
  1118     008C  30D0               	movlw	208
  1119     008D  1283               	bcf	3,5	;RP0=0, select bank0
  1120     008E  1303               	bcf	3,6	;RP1=0, select bank0
  1121     008F  00E7               	movwf	I2C_Master_Write@d
  1122     0090  3000               	movlw	0
  1123     0091  00E8               	movwf	I2C_Master_Write@d+1
  1124     0092  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1125     0097                     l2734:
  1126                           
  1127                           ;main.c: 99:         I2C_Master_Write(0x02);
  1128     0097  3002               	movlw	2
  1129     0098  1283               	bcf	3,5	;RP0=0, select bank0
  1130     0099  1303               	bcf	3,6	;RP1=0, select bank0
  1131     009A  00E7               	movwf	I2C_Master_Write@d
  1132     009B  3000               	movlw	0
  1133     009C  00E8               	movwf	I2C_Master_Write@d+1
  1134     009D  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1135     00A2                     l2736:
  1136                           
  1137                           ;main.c: 100:         I2C_Master_Write(Dec_to_Bcd(11));
  1138     00A2  300B               	movlw	11
  1139     00A3  120A  158A  255A  120A  118A  	fcall	_Dec_to_Bcd
  1140     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1141     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1142     00AA  00EA               	movwf	??_main
  1143     00AB  01EB               	clrf	??_main+1
  1144     00AC  086A               	movf	??_main,w
  1145     00AD  00E7               	movwf	I2C_Master_Write@d
  1146     00AE  086B               	movf	??_main+1,w
  1147     00AF  00E8               	movwf	I2C_Master_Write@d+1
  1148     00B0  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1149     00B5                     l2738:
  1150                           
  1151                           ;main.c: 101:         I2C_Master_Stop();
  1152     00B5  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1153     00BA                     l2740:
  1154                           
  1155                           ;main.c: 103:         I2C_Master_Start();
  1156     00BA  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1157     00BF                     l2742:
  1158                           
  1159                           ;main.c: 104:         I2C_Master_Write(0xD0);
  1160     00BF  30D0               	movlw	208
  1161     00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1162     00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1163     00C2  00E7               	movwf	I2C_Master_Write@d
  1164     00C3  3000               	movlw	0
  1165     00C4  00E8               	movwf	I2C_Master_Write@d+1
  1166     00C5  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1167     00CA                     l2744:
  1168                           
  1169                           ;main.c: 105:         I2C_Master_Write(0x04);
  1170     00CA  3004               	movlw	4
  1171     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1172     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1173     00CD  00E7               	movwf	I2C_Master_Write@d
  1174     00CE  3000               	movlw	0
  1175     00CF  00E8               	movwf	I2C_Master_Write@d+1
  1176     00D0  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1177     00D5                     l2746:
  1178                           
  1179                           ;main.c: 106:         I2C_Master_Write(Dec_to_Bcd(8));
  1180     00D5  3008               	movlw	8
  1181     00D6  120A  158A  255A  120A  118A  	fcall	_Dec_to_Bcd
  1182     00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1183     00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1184     00DD  00EA               	movwf	??_main
  1185     00DE  01EB               	clrf	??_main+1
  1186     00DF  086A               	movf	??_main,w
  1187     00E0  00E7               	movwf	I2C_Master_Write@d
  1188     00E1  086B               	movf	??_main+1,w
  1189     00E2  00E8               	movwf	I2C_Master_Write@d+1
  1190     00E3  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1191     00E8                     l2748:
  1192                           
  1193                           ;main.c: 107:         I2C_Master_Stop();
  1194     00E8  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1195     00ED                     l2750:
  1196                           
  1197                           ;main.c: 109:         I2C_Master_Start();
  1198     00ED  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1199     00F2                     l2752:
  1200                           
  1201                           ;main.c: 110:         I2C_Master_Write(0xD0);
  1202     00F2  30D0               	movlw	208
  1203     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1204     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1205     00F5  00E7               	movwf	I2C_Master_Write@d
  1206     00F6  3000               	movlw	0
  1207     00F7  00E8               	movwf	I2C_Master_Write@d+1
  1208     00F8  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1209     00FD                     l2754:
  1210                           
  1211                           ;main.c: 111:         I2C_Master_Write(0x05);
  1212     00FD  3005               	movlw	5
  1213     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1214     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1215     0100  00E7               	movwf	I2C_Master_Write@d
  1216     0101  3000               	movlw	0
  1217     0102  00E8               	movwf	I2C_Master_Write@d+1
  1218     0103  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1219     0108                     l2756:
  1220                           
  1221                           ;main.c: 112:         I2C_Master_Write(Dec_to_Bcd(8));
  1222     0108  3008               	movlw	8
  1223     0109  120A  158A  255A  120A  118A  	fcall	_Dec_to_Bcd
  1224     010E  1283               	bcf	3,5	;RP0=0, select bank0
  1225     010F  1303               	bcf	3,6	;RP1=0, select bank0
  1226     0110  00EA               	movwf	??_main
  1227     0111  01EB               	clrf	??_main+1
  1228     0112  086A               	movf	??_main,w
  1229     0113  00E7               	movwf	I2C_Master_Write@d
  1230     0114  086B               	movf	??_main+1,w
  1231     0115  00E8               	movwf	I2C_Master_Write@d+1
  1232     0116  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1233     011B                     l2758:
  1234                           
  1235                           ;main.c: 113:         I2C_Master_Stop();
  1236     011B  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1237     0120                     l2760:
  1238                           
  1239                           ;main.c: 115:         I2C_Master_Start();
  1240     0120  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1241     0125                     l2762:
  1242                           
  1243                           ;main.c: 116:         I2C_Master_Write(0xD0);
  1244     0125  30D0               	movlw	208
  1245     0126  1283               	bcf	3,5	;RP0=0, select bank0
  1246     0127  1303               	bcf	3,6	;RP1=0, select bank0
  1247     0128  00E7               	movwf	I2C_Master_Write@d
  1248     0129  3000               	movlw	0
  1249     012A  00E8               	movwf	I2C_Master_Write@d+1
  1250     012B  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1251     0130                     l2764:
  1252                           
  1253                           ;main.c: 117:         I2C_Master_Write(0x06);
  1254     0130  3006               	movlw	6
  1255     0131  1283               	bcf	3,5	;RP0=0, select bank0
  1256     0132  1303               	bcf	3,6	;RP1=0, select bank0
  1257     0133  00E7               	movwf	I2C_Master_Write@d
  1258     0134  3000               	movlw	0
  1259     0135  00E8               	movwf	I2C_Master_Write@d+1
  1260     0136  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1261     013B                     l2766:
  1262                           
  1263                           ;main.c: 118:         I2C_Master_Write(Dec_to_Bcd(23));
  1264     013B  3017               	movlw	23
  1265     013C  120A  158A  255A  120A  118A  	fcall	_Dec_to_Bcd
  1266     0141  1283               	bcf	3,5	;RP0=0, select bank0
  1267     0142  1303               	bcf	3,6	;RP1=0, select bank0
  1268     0143  00EA               	movwf	??_main
  1269     0144  01EB               	clrf	??_main+1
  1270     0145  086A               	movf	??_main,w
  1271     0146  00E7               	movwf	I2C_Master_Write@d
  1272     0147  086B               	movf	??_main+1,w
  1273     0148  00E8               	movwf	I2C_Master_Write@d+1
  1274     0149  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1275     014E                     l2768:
  1276                           
  1277                           ;main.c: 119:         I2C_Master_Stop();
  1278     014E  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1279     0153                     l2770:
  1280                           
  1281                           ;main.c: 121:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1282     0153  301A               	movlw	26
  1283     0154  1283               	bcf	3,5	;RP0=0, select bank0
  1284     0155  1303               	bcf	3,6	;RP1=0, select bank0
  1285     0156  00EB               	movwf	??_main+1
  1286     0157  30F7               	movlw	247
  1287     0158  00EA               	movwf	??_main
  1288     0159                     u1417:
  1289     0159  0BEA               	decfsz	??_main,f
  1290     015A  2959               	goto	u1417
  1291     015B  0BEB               	decfsz	??_main+1,f
  1292     015C  2959               	goto	u1417
  1293     015D  295E               	nop2
  1294     015E                     l2772:
  1295                           
  1296                           ;main.c: 123:         ADC_IF();
  1297     015E  120A  158A  247F  120A  118A  	fcall	_ADC_IF
  1298     0163                     l2774:
  1299                           
  1300                           ;main.c: 124:         I2C_Master_Start();
  1301     0163  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1302     0168                     l2776:
  1303                           
  1304                           ;main.c: 125:         I2C_Master_Write(0xD0);
  1305     0168  30D0               	movlw	208
  1306     0169  1283               	bcf	3,5	;RP0=0, select bank0
  1307     016A  1303               	bcf	3,6	;RP1=0, select bank0
  1308     016B  00E7               	movwf	I2C_Master_Write@d
  1309     016C  3000               	movlw	0
  1310     016D  00E8               	movwf	I2C_Master_Write@d+1
  1311     016E  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1312     0173                     l2778:
  1313                           
  1314                           ;main.c: 126:         I2C_Master_Write(0x00);
  1315     0173  3000               	movlw	0
  1316     0174  1283               	bcf	3,5	;RP0=0, select bank0
  1317     0175  1303               	bcf	3,6	;RP1=0, select bank0
  1318     0176  00E7               	movwf	I2C_Master_Write@d
  1319     0177  00E8               	movwf	I2C_Master_Write@d+1
  1320     0178  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1321     017D                     l2780:
  1322                           
  1323                           ;main.c: 127:         I2C_Master_Stop();
  1324     017D  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1325     0182                     l2782:
  1326                           
  1327                           ;main.c: 128:         I2C_Master_Start();
  1328     0182  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1329     0187                     l2784:
  1330                           
  1331                           ;main.c: 129:         I2C_Master_Write(0xD0);
  1332     0187  30D0               	movlw	208
  1333     0188  1283               	bcf	3,5	;RP0=0, select bank0
  1334     0189  1303               	bcf	3,6	;RP1=0, select bank0
  1335     018A  00E7               	movwf	I2C_Master_Write@d
  1336     018B  3000               	movlw	0
  1337     018C  00E8               	movwf	I2C_Master_Write@d+1
  1338     018D  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1339     0192                     l2786:
  1340                           
  1341                           ;main.c: 130:         I2C_Master_Write(0x00);
  1342     0192  3000               	movlw	0
  1343     0193  1283               	bcf	3,5	;RP0=0, select bank0
  1344     0194  1303               	bcf	3,6	;RP1=0, select bank0
  1345     0195  00E7               	movwf	I2C_Master_Write@d
  1346     0196  00E8               	movwf	I2C_Master_Write@d+1
  1347     0197  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1348     019C                     l2788:
  1349                           
  1350                           ;main.c: 131:         I2C_Master_RepeatedStart();
  1351     019C  120A  158A  2441  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1352     01A1                     l2790:
  1353                           
  1354                           ;main.c: 132:         I2C_Master_Write(0xD1);
  1355     01A1  30D1               	movlw	209
  1356     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1357     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1358     01A4  00E7               	movwf	I2C_Master_Write@d
  1359     01A5  3000               	movlw	0
  1360     01A6  00E8               	movwf	I2C_Master_Write@d+1
  1361     01A7  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1362     01AC                     l2792:
  1363                           
  1364                           ;main.c: 133:         SEG = Bcd_to_Dec(I2C_Master_Read(0));
  1365     01AC  3000               	movlw	0
  1366     01AD  00F4               	movwf	I2C_Master_Read@a
  1367     01AE  00F5               	movwf	I2C_Master_Read@a+1
  1368     01AF  120A  118A  27CB  120A  118A  	fcall	_I2C_Master_Read
  1369     01B4  0874               	movf	?_I2C_Master_Read,w
  1370     01B5  120A  158A  24D4  120A  118A  	fcall	_Bcd_to_Dec
  1371     01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1372     01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1373     01BC  00EA               	movwf	??_main
  1374     01BD  01EB               	clrf	??_main+1
  1375     01BE  086A               	movf	??_main,w
  1376     01BF  00AC               	movwf	_SEG
  1377     01C0  086B               	movf	??_main+1,w
  1378     01C1  00AD               	movwf	_SEG+1
  1379     01C2                     l2794:
  1380                           
  1381                           ;main.c: 134:         I2C_Master_Stop();
  1382     01C2  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1383     01C7                     l2796:
  1384                           
  1385                           ;main.c: 135:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1386     01C7  301A               	movlw	26
  1387     01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1388     01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1389     01CA  00EB               	movwf	??_main+1
  1390     01CB  30F7               	movlw	247
  1391     01CC  00EA               	movwf	??_main
  1392     01CD                     u1427:
  1393     01CD  0BEA               	decfsz	??_main,f
  1394     01CE  29CD               	goto	u1427
  1395     01CF  0BEB               	decfsz	??_main+1,f
  1396     01D0  29CD               	goto	u1427
  1397     01D1  29D2               	nop2
  1398     01D2                     l2798:
  1399                           
  1400                           ;main.c: 137:         I2C_Master_Start();
  1401     01D2  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1402     01D7                     l2800:
  1403                           
  1404                           ;main.c: 138:         I2C_Master_Write(0xD0);
  1405     01D7  30D0               	movlw	208
  1406     01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1407     01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1408     01DA  00E7               	movwf	I2C_Master_Write@d
  1409     01DB  3000               	movlw	0
  1410     01DC  00E8               	movwf	I2C_Master_Write@d+1
  1411     01DD  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1412     01E2                     l2802:
  1413                           
  1414                           ;main.c: 139:         I2C_Master_Write(0x01);
  1415     01E2  3001               	movlw	1
  1416     01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1417     01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1418     01E5  00E7               	movwf	I2C_Master_Write@d
  1419     01E6  3000               	movlw	0
  1420     01E7  00E8               	movwf	I2C_Master_Write@d+1
  1421     01E8  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1422     01ED                     l2804:
  1423                           
  1424                           ;main.c: 140:         I2C_Master_Stop();
  1425     01ED  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1426     01F2                     l2806:
  1427                           
  1428                           ;main.c: 141:         I2C_Master_Start();
  1429     01F2  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1430     01F7                     l2808:
  1431                           
  1432                           ;main.c: 142:         I2C_Master_Write(0xD0);
  1433     01F7  30D0               	movlw	208
  1434     01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1435     01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1436     01FA  00E7               	movwf	I2C_Master_Write@d
  1437     01FB  3000               	movlw	0
  1438     01FC  00E8               	movwf	I2C_Master_Write@d+1
  1439     01FD  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1440     0202                     l2810:
  1441                           
  1442                           ;main.c: 143:         I2C_Master_Write(0x01);
  1443     0202  3001               	movlw	1
  1444     0203  1283               	bcf	3,5	;RP0=0, select bank0
  1445     0204  1303               	bcf	3,6	;RP1=0, select bank0
  1446     0205  00E7               	movwf	I2C_Master_Write@d
  1447     0206  3000               	movlw	0
  1448     0207  00E8               	movwf	I2C_Master_Write@d+1
  1449     0208  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1450     020D                     l2812:
  1451                           
  1452                           ;main.c: 144:         I2C_Master_RepeatedStart();
  1453     020D  120A  158A  2441  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1454     0212                     l2814:
  1455                           
  1456                           ;main.c: 145:         I2C_Master_Write(0xD1);
  1457     0212  30D1               	movlw	209
  1458     0213  1283               	bcf	3,5	;RP0=0, select bank0
  1459     0214  1303               	bcf	3,6	;RP1=0, select bank0
  1460     0215  00E7               	movwf	I2C_Master_Write@d
  1461     0216  3000               	movlw	0
  1462     0217  00E8               	movwf	I2C_Master_Write@d+1
  1463     0218  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1464     021D                     l2816:
  1465                           
  1466                           ;main.c: 146:         MIN = Bcd_to_Dec(I2C_Master_Read(0));
  1467     021D  3000               	movlw	0
  1468     021E  00F4               	movwf	I2C_Master_Read@a
  1469     021F  00F5               	movwf	I2C_Master_Read@a+1
  1470     0220  120A  118A  27CB  120A  118A  	fcall	_I2C_Master_Read
  1471     0225  0874               	movf	?_I2C_Master_Read,w
  1472     0226  120A  158A  24D4  120A  118A  	fcall	_Bcd_to_Dec
  1473     022B  1283               	bcf	3,5	;RP0=0, select bank0
  1474     022C  1303               	bcf	3,6	;RP1=0, select bank0
  1475     022D  00EA               	movwf	??_main
  1476     022E  01EB               	clrf	??_main+1
  1477     022F  086A               	movf	??_main,w
  1478     0230  00AA               	movwf	_MIN
  1479     0231  086B               	movf	??_main+1,w
  1480     0232  00AB               	movwf	_MIN+1
  1481     0233                     l2818:
  1482                           
  1483                           ;main.c: 147:         I2C_Master_Stop();
  1484     0233  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1485     0238                     l2820:
  1486                           
  1487                           ;main.c: 148:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1488     0238  301A               	movlw	26
  1489     0239  1283               	bcf	3,5	;RP0=0, select bank0
  1490     023A  1303               	bcf	3,6	;RP1=0, select bank0
  1491     023B  00EB               	movwf	??_main+1
  1492     023C  30F7               	movlw	247
  1493     023D  00EA               	movwf	??_main
  1494     023E                     u1437:
  1495     023E  0BEA               	decfsz	??_main,f
  1496     023F  2A3E               	goto	u1437
  1497     0240  0BEB               	decfsz	??_main+1,f
  1498     0241  2A3E               	goto	u1437
  1499     0242  2A43               	nop2
  1500     0243                     l2822:
  1501                           
  1502                           ;main.c: 150:         I2C_Master_Start();
  1503     0243  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1504     0248                     l2824:
  1505                           
  1506                           ;main.c: 151:         I2C_Master_Write(0xD0);
  1507     0248  30D0               	movlw	208
  1508     0249  1283               	bcf	3,5	;RP0=0, select bank0
  1509     024A  1303               	bcf	3,6	;RP1=0, select bank0
  1510     024B  00E7               	movwf	I2C_Master_Write@d
  1511     024C  3000               	movlw	0
  1512     024D  00E8               	movwf	I2C_Master_Write@d+1
  1513     024E  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1514     0253                     l2826:
  1515                           
  1516                           ;main.c: 152:         I2C_Master_Write(0x02);
  1517     0253  3002               	movlw	2
  1518     0254  1283               	bcf	3,5	;RP0=0, select bank0
  1519     0255  1303               	bcf	3,6	;RP1=0, select bank0
  1520     0256  00E7               	movwf	I2C_Master_Write@d
  1521     0257  3000               	movlw	0
  1522     0258  00E8               	movwf	I2C_Master_Write@d+1
  1523     0259  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1524     025E                     l2828:
  1525                           
  1526                           ;main.c: 153:         I2C_Master_Stop();
  1527     025E  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1528     0263                     l2830:
  1529                           
  1530                           ;main.c: 154:         I2C_Master_Start();
  1531     0263  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1532     0268                     l2832:
  1533                           
  1534                           ;main.c: 155:         I2C_Master_Write(0xD0);
  1535     0268  30D0               	movlw	208
  1536     0269  1283               	bcf	3,5	;RP0=0, select bank0
  1537     026A  1303               	bcf	3,6	;RP1=0, select bank0
  1538     026B  00E7               	movwf	I2C_Master_Write@d
  1539     026C  3000               	movlw	0
  1540     026D  00E8               	movwf	I2C_Master_Write@d+1
  1541     026E  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1542     0273                     l2834:
  1543                           
  1544                           ;main.c: 156:         I2C_Master_Write(0x02);
  1545     0273  3002               	movlw	2
  1546     0274  1283               	bcf	3,5	;RP0=0, select bank0
  1547     0275  1303               	bcf	3,6	;RP1=0, select bank0
  1548     0276  00E7               	movwf	I2C_Master_Write@d
  1549     0277  3000               	movlw	0
  1550     0278  00E8               	movwf	I2C_Master_Write@d+1
  1551     0279  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1552     027E                     l2836:
  1553                           
  1554                           ;main.c: 157:         I2C_Master_RepeatedStart();
  1555     027E  120A  158A  2441  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1556     0283                     l2838:
  1557                           
  1558                           ;main.c: 158:         I2C_Master_Write(0xD1);
  1559     0283  30D1               	movlw	209
  1560     0284  1283               	bcf	3,5	;RP0=0, select bank0
  1561     0285  1303               	bcf	3,6	;RP1=0, select bank0
  1562     0286  00E7               	movwf	I2C_Master_Write@d
  1563     0287  3000               	movlw	0
  1564     0288  00E8               	movwf	I2C_Master_Write@d+1
  1565     0289  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1566     028E                     l2840:
  1567                           
  1568                           ;main.c: 159:         HOR = Bcd_to_Dec(I2C_Master_Read(0));
  1569     028E  3000               	movlw	0
  1570     028F  00F4               	movwf	I2C_Master_Read@a
  1571     0290  00F5               	movwf	I2C_Master_Read@a+1
  1572     0291  120A  118A  27CB  120A  118A  	fcall	_I2C_Master_Read
  1573     0296  0874               	movf	?_I2C_Master_Read,w
  1574     0297  120A  158A  24D4  120A  118A  	fcall	_Bcd_to_Dec
  1575     029C  1283               	bcf	3,5	;RP0=0, select bank0
  1576     029D  1303               	bcf	3,6	;RP1=0, select bank0
  1577     029E  00EA               	movwf	??_main
  1578     029F  01EB               	clrf	??_main+1
  1579     02A0  086A               	movf	??_main,w
  1580     02A1  00A8               	movwf	_HOR
  1581     02A2  086B               	movf	??_main+1,w
  1582     02A3  00A9               	movwf	_HOR+1
  1583     02A4                     l2842:
  1584                           
  1585                           ;main.c: 160:         I2C_Master_Stop();
  1586     02A4  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1587     02A9                     l2844:
  1588                           
  1589                           ;main.c: 161:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1590     02A9  301A               	movlw	26
  1591     02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1592     02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1593     02AC  00EB               	movwf	??_main+1
  1594     02AD  30F7               	movlw	247
  1595     02AE  00EA               	movwf	??_main
  1596     02AF                     u1447:
  1597     02AF  0BEA               	decfsz	??_main,f
  1598     02B0  2AAF               	goto	u1447
  1599     02B1  0BEB               	decfsz	??_main+1,f
  1600     02B2  2AAF               	goto	u1447
  1601     02B3  2AB4               	nop2
  1602     02B4                     l2846:
  1603                           
  1604                           ;main.c: 163:         I2C_Master_Start();
  1605     02B4  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1606     02B9                     l2848:
  1607                           
  1608                           ;main.c: 164:         I2C_Master_Write(0xD0);
  1609     02B9  30D0               	movlw	208
  1610     02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1611     02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1612     02BC  00E7               	movwf	I2C_Master_Write@d
  1613     02BD  3000               	movlw	0
  1614     02BE  00E8               	movwf	I2C_Master_Write@d+1
  1615     02BF  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1616     02C4                     l2850:
  1617                           
  1618                           ;main.c: 165:         I2C_Master_Write(0x04);
  1619     02C4  3004               	movlw	4
  1620     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1621     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1622     02C7  00E7               	movwf	I2C_Master_Write@d
  1623     02C8  3000               	movlw	0
  1624     02C9  00E8               	movwf	I2C_Master_Write@d+1
  1625     02CA  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1626     02CF                     l2852:
  1627                           
  1628                           ;main.c: 166:         I2C_Master_Stop();
  1629     02CF  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1630     02D4                     l2854:
  1631                           
  1632                           ;main.c: 167:         I2C_Master_Start();
  1633     02D4  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1634     02D9                     l2856:
  1635                           
  1636                           ;main.c: 168:         I2C_Master_Write(0xD0);
  1637     02D9  30D0               	movlw	208
  1638     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1639     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1640     02DC  00E7               	movwf	I2C_Master_Write@d
  1641     02DD  3000               	movlw	0
  1642     02DE  00E8               	movwf	I2C_Master_Write@d+1
  1643     02DF  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1644     02E4                     l2858:
  1645                           
  1646                           ;main.c: 169:         I2C_Master_Write(0x04);
  1647     02E4  3004               	movlw	4
  1648     02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1649     02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1650     02E7  00E7               	movwf	I2C_Master_Write@d
  1651     02E8  3000               	movlw	0
  1652     02E9  00E8               	movwf	I2C_Master_Write@d+1
  1653     02EA  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1654     02EF                     l2860:
  1655                           
  1656                           ;main.c: 170:         I2C_Master_RepeatedStart();
  1657     02EF  120A  158A  2441  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1658     02F4                     l2862:
  1659                           
  1660                           ;main.c: 171:         I2C_Master_Write(0xD1);
  1661     02F4  30D1               	movlw	209
  1662     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1663     02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1664     02F7  00E7               	movwf	I2C_Master_Write@d
  1665     02F8  3000               	movlw	0
  1666     02F9  00E8               	movwf	I2C_Master_Write@d+1
  1667     02FA  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1668     02FF                     l2864:
  1669                           
  1670                           ;main.c: 172:         DAY = Bcd_to_Dec(I2C_Master_Read(0));
  1671     02FF  3000               	movlw	0
  1672     0300  00F4               	movwf	I2C_Master_Read@a
  1673     0301  00F5               	movwf	I2C_Master_Read@a+1
  1674     0302  120A  118A  27CB  120A  118A  	fcall	_I2C_Master_Read
  1675     0307  0874               	movf	?_I2C_Master_Read,w
  1676     0308  120A  158A  24D4  120A  118A  	fcall	_Bcd_to_Dec
  1677     030D  1283               	bcf	3,5	;RP0=0, select bank0
  1678     030E  1303               	bcf	3,6	;RP1=0, select bank0
  1679     030F  00EA               	movwf	??_main
  1680     0310  01EB               	clrf	??_main+1
  1681     0311  086A               	movf	??_main,w
  1682     0312  00A6               	movwf	_DAY
  1683     0313  086B               	movf	??_main+1,w
  1684     0314  00A7               	movwf	_DAY+1
  1685     0315                     l2866:
  1686                           
  1687                           ;main.c: 173:         I2C_Master_Stop();
  1688     0315  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1689     031A                     l2868:
  1690                           
  1691                           ;main.c: 174:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1692     031A  301A               	movlw	26
  1693     031B  1283               	bcf	3,5	;RP0=0, select bank0
  1694     031C  1303               	bcf	3,6	;RP1=0, select bank0
  1695     031D  00EB               	movwf	??_main+1
  1696     031E  30F7               	movlw	247
  1697     031F  00EA               	movwf	??_main
  1698     0320                     u1457:
  1699     0320  0BEA               	decfsz	??_main,f
  1700     0321  2B20               	goto	u1457
  1701     0322  0BEB               	decfsz	??_main+1,f
  1702     0323  2B20               	goto	u1457
  1703     0324  2B25               	nop2
  1704     0325                     l2870:
  1705                           
  1706                           ;main.c: 176:         I2C_Master_Start();
  1707     0325  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1708     032A                     l2872:
  1709                           
  1710                           ;main.c: 177:         I2C_Master_Write(0xD0);
  1711     032A  30D0               	movlw	208
  1712     032B  1283               	bcf	3,5	;RP0=0, select bank0
  1713     032C  1303               	bcf	3,6	;RP1=0, select bank0
  1714     032D  00E7               	movwf	I2C_Master_Write@d
  1715     032E  3000               	movlw	0
  1716     032F  00E8               	movwf	I2C_Master_Write@d+1
  1717     0330  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1718     0335                     l2874:
  1719                           
  1720                           ;main.c: 178:         I2C_Master_Write(0x05);
  1721     0335  3005               	movlw	5
  1722     0336  1283               	bcf	3,5	;RP0=0, select bank0
  1723     0337  1303               	bcf	3,6	;RP1=0, select bank0
  1724     0338  00E7               	movwf	I2C_Master_Write@d
  1725     0339  3000               	movlw	0
  1726     033A  00E8               	movwf	I2C_Master_Write@d+1
  1727     033B  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1728     0340                     l2876:
  1729                           
  1730                           ;main.c: 179:         I2C_Master_Stop();
  1731     0340  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1732     0345                     l2878:
  1733                           
  1734                           ;main.c: 180:         I2C_Master_Start();
  1735     0345  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1736     034A                     l2880:
  1737                           
  1738                           ;main.c: 181:         I2C_Master_Write(0xD0);
  1739     034A  30D0               	movlw	208
  1740     034B  1283               	bcf	3,5	;RP0=0, select bank0
  1741     034C  1303               	bcf	3,6	;RP1=0, select bank0
  1742     034D  00E7               	movwf	I2C_Master_Write@d
  1743     034E  3000               	movlw	0
  1744     034F  00E8               	movwf	I2C_Master_Write@d+1
  1745     0350  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1746     0355                     l2882:
  1747                           
  1748                           ;main.c: 182:         I2C_Master_Write(0x05);
  1749     0355  3005               	movlw	5
  1750     0356  1283               	bcf	3,5	;RP0=0, select bank0
  1751     0357  1303               	bcf	3,6	;RP1=0, select bank0
  1752     0358  00E7               	movwf	I2C_Master_Write@d
  1753     0359  3000               	movlw	0
  1754     035A  00E8               	movwf	I2C_Master_Write@d+1
  1755     035B  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1756     0360                     l2884:
  1757                           
  1758                           ;main.c: 183:         I2C_Master_RepeatedStart();
  1759     0360  120A  158A  2441  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1760     0365                     l2886:
  1761                           
  1762                           ;main.c: 184:         I2C_Master_Write(0xD1);
  1763     0365  30D1               	movlw	209
  1764     0366  1283               	bcf	3,5	;RP0=0, select bank0
  1765     0367  1303               	bcf	3,6	;RP1=0, select bank0
  1766     0368  00E7               	movwf	I2C_Master_Write@d
  1767     0369  3000               	movlw	0
  1768     036A  00E8               	movwf	I2C_Master_Write@d+1
  1769     036B  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1770     0370                     l2888:
  1771                           
  1772                           ;main.c: 185:         MOTH = Bcd_to_Dec(I2C_Master_Read(0));
  1773     0370  3000               	movlw	0
  1774     0371  00F4               	movwf	I2C_Master_Read@a
  1775     0372  00F5               	movwf	I2C_Master_Read@a+1
  1776     0373  120A  118A  27CB  120A  118A  	fcall	_I2C_Master_Read
  1777     0378  0874               	movf	?_I2C_Master_Read,w
  1778     0379  120A  158A  24D4  120A  118A  	fcall	_Bcd_to_Dec
  1779     037E  1283               	bcf	3,5	;RP0=0, select bank0
  1780     037F  1303               	bcf	3,6	;RP1=0, select bank0
  1781     0380  00EA               	movwf	??_main
  1782     0381  01EB               	clrf	??_main+1
  1783     0382  086A               	movf	??_main,w
  1784     0383  00A4               	movwf	_MOTH
  1785     0384  086B               	movf	??_main+1,w
  1786     0385  00A5               	movwf	_MOTH+1
  1787     0386                     l2890:
  1788                           
  1789                           ;main.c: 186:         I2C_Master_Stop();
  1790     0386  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1791     038B                     l2892:
  1792                           
  1793                           ;main.c: 187:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1794     038B  301A               	movlw	26
  1795     038C  1283               	bcf	3,5	;RP0=0, select bank0
  1796     038D  1303               	bcf	3,6	;RP1=0, select bank0
  1797     038E  00EB               	movwf	??_main+1
  1798     038F  30F7               	movlw	247
  1799     0390  00EA               	movwf	??_main
  1800     0391                     u1467:
  1801     0391  0BEA               	decfsz	??_main,f
  1802     0392  2B91               	goto	u1467
  1803     0393  0BEB               	decfsz	??_main+1,f
  1804     0394  2B91               	goto	u1467
  1805     0395  2B96               	nop2
  1806     0396                     l2894:
  1807                           
  1808                           ;main.c: 189:         I2C_Master_Start();
  1809     0396  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1810     039B                     l2896:
  1811                           
  1812                           ;main.c: 190:         I2C_Master_Write(0xD0);
  1813     039B  30D0               	movlw	208
  1814     039C  1283               	bcf	3,5	;RP0=0, select bank0
  1815     039D  1303               	bcf	3,6	;RP1=0, select bank0
  1816     039E  00E7               	movwf	I2C_Master_Write@d
  1817     039F  3000               	movlw	0
  1818     03A0  00E8               	movwf	I2C_Master_Write@d+1
  1819     03A1  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1820     03A6                     l2898:
  1821                           
  1822                           ;main.c: 191:         I2C_Master_Write(0x06);
  1823     03A6  3006               	movlw	6
  1824     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  1825     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  1826     03A9  00E7               	movwf	I2C_Master_Write@d
  1827     03AA  3000               	movlw	0
  1828     03AB  00E8               	movwf	I2C_Master_Write@d+1
  1829     03AC  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1830     03B1                     l2900:
  1831                           
  1832                           ;main.c: 192:         I2C_Master_Stop();
  1833     03B1  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1834     03B6                     l2902:
  1835                           
  1836                           ;main.c: 193:         I2C_Master_Start();
  1837     03B6  120A  158A  244D  120A  118A  	fcall	_I2C_Master_Start
  1838     03BB                     l2904:
  1839                           
  1840                           ;main.c: 194:         I2C_Master_Write(0xD0);
  1841     03BB  30D0               	movlw	208
  1842     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1843     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1844     03BE  00E7               	movwf	I2C_Master_Write@d
  1845     03BF  3000               	movlw	0
  1846     03C0  00E8               	movwf	I2C_Master_Write@d+1
  1847     03C1  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1848     03C6                     l2906:
  1849                           
  1850                           ;main.c: 195:         I2C_Master_Write(0x06);
  1851     03C6  3006               	movlw	6
  1852     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1853     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1854     03C9  00E7               	movwf	I2C_Master_Write@d
  1855     03CA  3000               	movlw	0
  1856     03CB  00E8               	movwf	I2C_Master_Write@d+1
  1857     03CC  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1858     03D1                     l2908:
  1859                           
  1860                           ;main.c: 196:         I2C_Master_RepeatedStart();
  1861     03D1  120A  158A  2441  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1862     03D6                     l2910:
  1863                           
  1864                           ;main.c: 197:         I2C_Master_Write(0xD1);
  1865     03D6  30D1               	movlw	209
  1866     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1867     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1868     03D9  00E7               	movwf	I2C_Master_Write@d
  1869     03DA  3000               	movlw	0
  1870     03DB  00E8               	movwf	I2C_Master_Write@d+1
  1871     03DC  120A  158A  2436  120A  118A  	fcall	_I2C_Master_Write
  1872     03E1                     l2912:
  1873                           
  1874                           ;main.c: 198:         YEAR = Bcd_to_Dec(I2C_Master_Read(0));
  1875     03E1  3000               	movlw	0
  1876     03E2  00F4               	movwf	I2C_Master_Read@a
  1877     03E3  00F5               	movwf	I2C_Master_Read@a+1
  1878     03E4  120A  118A  27CB  120A  118A  	fcall	_I2C_Master_Read
  1879     03E9  0874               	movf	?_I2C_Master_Read,w
  1880     03EA  120A  158A  24D4  120A  118A  	fcall	_Bcd_to_Dec
  1881     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1882     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1883     03F1  00EA               	movwf	??_main
  1884     03F2  01EB               	clrf	??_main+1
  1885     03F3  086A               	movf	??_main,w
  1886     03F4  00A2               	movwf	_YEAR
  1887     03F5  086B               	movf	??_main+1,w
  1888     03F6  00A3               	movwf	_YEAR+1
  1889     03F7                     l2914:
  1890                           
  1891                           ;main.c: 199:         I2C_Master_Stop();
  1892     03F7  120A  158A  2459  120A  118A  	fcall	_I2C_Master_Stop
  1893     03FC                     l2916:
  1894                           
  1895                           ;main.c: 200:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1896     03FC  301A               	movlw	26
  1897     03FD  1283               	bcf	3,5	;RP0=0, select bank0
  1898     03FE  1303               	bcf	3,6	;RP1=0, select bank0
  1899     03FF  00EB               	movwf	??_main+1
  1900     0400  30F7               	movlw	247
  1901     0401  00EA               	movwf	??_main
  1902     0402                     u1477:
  1903     0402  0BEA               	decfsz	??_main,f
  1904     0403  2C02               	goto	u1477
  1905     0404  0BEB               	decfsz	??_main+1,f
  1906     0405  2C02               	goto	u1477
  1907     0406  2C07               	nop2
  1908     0407                     l2918:
  1909                           
  1910                           ;main.c: 204:         Division(SEG);
  1911     0407  1283               	bcf	3,5	;RP0=0, select bank0
  1912     0408  1303               	bcf	3,6	;RP1=0, select bank0
  1913     0409  082C               	movf	_SEG,w
  1914     040A  120A  158A  26A3  120A  118A  	fcall	_Division
  1915     040F                     l2920:
  1916                           
  1917                           ;main.c: 205:         Lcd_Set(1, 13);
  1918     040F  300D               	movlw	13
  1919     0410  00F7               	movwf	Lcd_Set@b
  1920     0411  3001               	movlw	1
  1921     0412  120A  158A  250E  120A  118A  	fcall	_Lcd_Set
  1922     0417                     l2922:
  1923                           
  1924                           ;main.c: 206:         sprintf(buffer_SEG, "%d", dec);
  1925     0417  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1926     0418  1283               	bcf	3,5	;RP0=0, select bank0
  1927     0419  1303               	bcf	3,6	;RP1=0, select bank0
  1928     041A  00DD               	movwf	sprintf@f
  1929     041B  082F               	movf	_dec,w
  1930     041C  00EA               	movwf	??_main
  1931     041D  01EB               	clrf	??_main+1
  1932     041E  086A               	movf	??_main,w
  1933     041F  00DE               	movwf	?_sprintf+1
  1934     0420  086B               	movf	??_main+1,w
  1935     0421  00DF               	movwf	?_sprintf+2
  1936     0422  304F               	movlw	(low (_buffer_SEG| 0))& (0+255)
  1937     0423  120A  118A  2686  120A  118A  	fcall	_sprintf
  1938     0428                     l2924:
  1939                           
  1940                           ;main.c: 207:         Lcd_Write_Str(buffer_SEG);
  1941     0428  304F               	movlw	(low (_buffer_SEG| 0))& (0+255)
  1942     0429  00F6               	movwf	Lcd_Write_Str@a
  1943     042A  3000               	movlw	0
  1944     042B  00F7               	movwf	Lcd_Write_Str@a+1
  1945     042C  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  1946     0431                     l2926:
  1947                           
  1948                           ;main.c: 208:         sprintf(buffer_SEG, "%d", uni);
  1949     0431  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1950     0432  1283               	bcf	3,5	;RP0=0, select bank0
  1951     0433  1303               	bcf	3,6	;RP1=0, select bank0
  1952     0434  00DD               	movwf	sprintf@f
  1953     0435  0830               	movf	_uni,w
  1954     0436  00EA               	movwf	??_main
  1955     0437  01EB               	clrf	??_main+1
  1956     0438  086A               	movf	??_main,w
  1957     0439  00DE               	movwf	?_sprintf+1
  1958     043A  086B               	movf	??_main+1,w
  1959     043B  00DF               	movwf	?_sprintf+2
  1960     043C  304F               	movlw	(low (_buffer_SEG| 0))& (0+255)
  1961     043D  120A  118A  2686  120A  118A  	fcall	_sprintf
  1962     0442                     l2928:
  1963                           
  1964                           ;main.c: 209:         Lcd_Write_Str(buffer_SEG);
  1965     0442  304F               	movlw	(low (_buffer_SEG| 0))& (0+255)
  1966     0443  00F6               	movwf	Lcd_Write_Str@a
  1967     0444  3000               	movlw	0
  1968     0445  00F7               	movwf	Lcd_Write_Str@a+1
  1969     0446  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  1970     044B                     l2930:
  1971                           
  1972                           ;main.c: 210:          _delay((unsigned long)((10)*(8000000/4000.0)));
  1973     044B  301A               	movlw	26
  1974     044C  1283               	bcf	3,5	;RP0=0, select bank0
  1975     044D  1303               	bcf	3,6	;RP1=0, select bank0
  1976     044E  00EB               	movwf	??_main+1
  1977     044F  30F7               	movlw	247
  1978     0450  00EA               	movwf	??_main
  1979     0451                     u1487:
  1980     0451  0BEA               	decfsz	??_main,f
  1981     0452  2C51               	goto	u1487
  1982     0453  0BEB               	decfsz	??_main+1,f
  1983     0454  2C51               	goto	u1487
  1984     0455  2C56               	nop2
  1985     0456                     l2932:
  1986                           
  1987                           ;main.c: 211:         Lcd_Set(1, 12);
  1988     0456  300C               	movlw	12
  1989     0457  00F7               	movwf	Lcd_Set@b
  1990     0458  3001               	movlw	1
  1991     0459  120A  158A  250E  120A  118A  	fcall	_Lcd_Set
  1992                           
  1993                           ;main.c: 212:         Lcd_Write_Str(":");
  1994     045E  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1995     045F  00F6               	movwf	Lcd_Write_Str@a
  1996     0460  3080               	movlw	128
  1997     0461  00F7               	movwf	Lcd_Write_Str@a+1
  1998     0462  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  1999     0467                     l2934:
  2000                           
  2001                           ;main.c: 213:         Division(MIN);
  2002     0467  1283               	bcf	3,5	;RP0=0, select bank0
  2003     0468  1303               	bcf	3,6	;RP1=0, select bank0
  2004     0469  082A               	movf	_MIN,w
  2005     046A  120A  158A  26A3  120A  118A  	fcall	_Division
  2006     046F                     l2936:
  2007                           
  2008                           ;main.c: 214:         Lcd_Set(1, 10);
  2009     046F  300A               	movlw	10
  2010     0470  00F7               	movwf	Lcd_Set@b
  2011     0471  3001               	movlw	1
  2012     0472  120A  158A  250E  120A  118A  	fcall	_Lcd_Set
  2013                           
  2014                           ;main.c: 215:         sprintf(buffer_MIN, "%d", dec);
  2015     0477  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2016     0478  1283               	bcf	3,5	;RP0=0, select bank0
  2017     0479  1303               	bcf	3,6	;RP1=0, select bank0
  2018     047A  00DD               	movwf	sprintf@f
  2019     047B  082F               	movf	_dec,w
  2020     047C  00EA               	movwf	??_main
  2021     047D  01EB               	clrf	??_main+1
  2022     047E  086A               	movf	??_main,w
  2023     047F  00DE               	movwf	?_sprintf+1
  2024     0480  086B               	movf	??_main+1,w
  2025     0481  00DF               	movwf	?_sprintf+2
  2026     0482  3045               	movlw	(low (_buffer_MIN| 0))& (0+255)
  2027     0483  120A  118A  2686  120A  118A  	fcall	_sprintf
  2028                           
  2029                           ;main.c: 216:         Lcd_Write_Str(buffer_MIN);
  2030     0488  3045               	movlw	(low (_buffer_MIN| 0))& (0+255)
  2031     0489  00F6               	movwf	Lcd_Write_Str@a
  2032     048A  3000               	movlw	0
  2033     048B  00F7               	movwf	Lcd_Write_Str@a+1
  2034     048C  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2035                           
  2036                           ;main.c: 217:         sprintf(buffer_MIN, "%d", uni);
  2037     0491  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2038     0492  1283               	bcf	3,5	;RP0=0, select bank0
  2039     0493  1303               	bcf	3,6	;RP1=0, select bank0
  2040     0494  00DD               	movwf	sprintf@f
  2041     0495  0830               	movf	_uni,w
  2042     0496  00EA               	movwf	??_main
  2043     0497  01EB               	clrf	??_main+1
  2044     0498  086A               	movf	??_main,w
  2045     0499  00DE               	movwf	?_sprintf+1
  2046     049A  086B               	movf	??_main+1,w
  2047     049B  00DF               	movwf	?_sprintf+2
  2048     049C  3045               	movlw	(low (_buffer_MIN| 0))& (0+255)
  2049     049D  120A  118A  2686  120A  118A  	fcall	_sprintf
  2050                           
  2051                           ;main.c: 218:         Lcd_Write_Str(buffer_MIN);
  2052     04A2  3045               	movlw	(low (_buffer_MIN| 0))& (0+255)
  2053     04A3  00F6               	movwf	Lcd_Write_Str@a
  2054     04A4  3000               	movlw	0
  2055     04A5  00F7               	movwf	Lcd_Write_Str@a+1
  2056     04A6  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2057     04AB                     l2938:
  2058                           
  2059                           ;main.c: 219:          _delay((unsigned long)((10)*(8000000/4000.0)));
  2060     04AB  301A               	movlw	26
  2061     04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2062     04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2063     04AE  00EB               	movwf	??_main+1
  2064     04AF  30F7               	movlw	247
  2065     04B0  00EA               	movwf	??_main
  2066     04B1                     u1497:
  2067     04B1  0BEA               	decfsz	??_main,f
  2068     04B2  2CB1               	goto	u1497
  2069     04B3  0BEB               	decfsz	??_main+1,f
  2070     04B4  2CB1               	goto	u1497
  2071     04B5  2CB6               	nop2
  2072     04B6                     l2940:
  2073                           
  2074                           ;main.c: 220:         Lcd_Set(1, 9);
  2075     04B6  3009               	movlw	9
  2076     04B7  00F7               	movwf	Lcd_Set@b
  2077     04B8  3001               	movlw	1
  2078     04B9  120A  158A  250E  120A  118A  	fcall	_Lcd_Set
  2079     04BE                     l2942:
  2080                           
  2081                           ;main.c: 221:         Lcd_Write_Str(":");
  2082     04BE  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2083     04BF  00F6               	movwf	Lcd_Write_Str@a
  2084     04C0  3080               	movlw	128
  2085     04C1  00F7               	movwf	Lcd_Write_Str@a+1
  2086     04C2  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2087     04C7                     l2944:
  2088                           
  2089                           ;main.c: 222:         Division(HOR);
  2090     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2091     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2092     04C9  0828               	movf	_HOR,w
  2093     04CA  120A  158A  26A3  120A  118A  	fcall	_Division
  2094     04CF                     l2946:
  2095                           
  2096                           ;main.c: 223:         Lcd_Set(1, 7);
  2097     04CF  3007               	movlw	7
  2098     04D0  00F7               	movwf	Lcd_Set@b
  2099     04D1  3001               	movlw	1
  2100     04D2  120A  158A  250E  120A  118A  	fcall	_Lcd_Set
  2101     04D7                     l2948:
  2102                           
  2103                           ;main.c: 224:         sprintf(buffer_HOR, "%d", dec);
  2104     04D7  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2105     04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2106     04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2107     04DA  00DD               	movwf	sprintf@f
  2108     04DB  082F               	movf	_dec,w
  2109     04DC  00EA               	movwf	??_main
  2110     04DD  01EB               	clrf	??_main+1
  2111     04DE  086A               	movf	??_main,w
  2112     04DF  00DE               	movwf	?_sprintf+1
  2113     04E0  086B               	movf	??_main+1,w
  2114     04E1  00DF               	movwf	?_sprintf+2
  2115     04E2  3040               	movlw	(low (_buffer_HOR| 0))& (0+255)
  2116     04E3  120A  118A  2686  120A  118A  	fcall	_sprintf
  2117     04E8                     l2950:
  2118                           
  2119                           ;main.c: 225:         Lcd_Write_Str(buffer_HOR);
  2120     04E8  3040               	movlw	(low (_buffer_HOR| 0))& (0+255)
  2121     04E9  00F6               	movwf	Lcd_Write_Str@a
  2122     04EA  3000               	movlw	0
  2123     04EB  00F7               	movwf	Lcd_Write_Str@a+1
  2124     04EC  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2125     04F1                     l2952:
  2126                           
  2127                           ;main.c: 226:         sprintf(buffer_HOR, "%d", uni);
  2128     04F1  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2129     04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2130     04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2131     04F4  00DD               	movwf	sprintf@f
  2132     04F5  0830               	movf	_uni,w
  2133     04F6  00EA               	movwf	??_main
  2134     04F7  01EB               	clrf	??_main+1
  2135     04F8  086A               	movf	??_main,w
  2136     04F9  00DE               	movwf	?_sprintf+1
  2137     04FA  086B               	movf	??_main+1,w
  2138     04FB  00DF               	movwf	?_sprintf+2
  2139     04FC  3040               	movlw	(low (_buffer_HOR| 0))& (0+255)
  2140     04FD  120A  118A  2686  120A  118A  	fcall	_sprintf
  2141     0502                     l2954:
  2142                           
  2143                           ;main.c: 227:         Lcd_Write_Str(buffer_HOR);
  2144     0502  3040               	movlw	(low (_buffer_HOR| 0))& (0+255)
  2145     0503  00F6               	movwf	Lcd_Write_Str@a
  2146     0504  3000               	movlw	0
  2147     0505  00F7               	movwf	Lcd_Write_Str@a+1
  2148     0506  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2149     050B                     l2956:
  2150                           
  2151                           ;main.c: 228:          _delay((unsigned long)((10)*(8000000/4000.0)));
  2152     050B  301A               	movlw	26
  2153     050C  1283               	bcf	3,5	;RP0=0, select bank0
  2154     050D  1303               	bcf	3,6	;RP1=0, select bank0
  2155     050E  00EB               	movwf	??_main+1
  2156     050F  30F7               	movlw	247
  2157     0510  00EA               	movwf	??_main
  2158     0511                     u1507:
  2159     0511  0BEA               	decfsz	??_main,f
  2160     0512  2D11               	goto	u1507
  2161     0513  0BEB               	decfsz	??_main+1,f
  2162     0514  2D11               	goto	u1507
  2163     0515  2D16               	nop2
  2164                           
  2165                           ;main.c: 230:         Division(DAY);
  2166     0516  1283               	bcf	3,5	;RP0=0, select bank0
  2167     0517  1303               	bcf	3,6	;RP1=0, select bank0
  2168     0518  0826               	movf	_DAY,w
  2169     0519  120A  158A  26A3  120A  118A  	fcall	_Division
  2170                           
  2171                           ;main.c: 231:         Lcd_Set(2, 7);
  2172     051E  3007               	movlw	7
  2173     051F  00F7               	movwf	Lcd_Set@b
  2174     0520  3002               	movlw	2
  2175     0521  120A  158A  250E  120A  118A  	fcall	_Lcd_Set
  2176     0526                     l2958:
  2177                           
  2178                           ;main.c: 232:         sprintf(buffer_DAY, "%d", dec);
  2179     0526  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2180     0527  1283               	bcf	3,5	;RP0=0, select bank0
  2181     0528  1303               	bcf	3,6	;RP1=0, select bank0
  2182     0529  00DD               	movwf	sprintf@f
  2183     052A  082F               	movf	_dec,w
  2184     052B  00EA               	movwf	??_main
  2185     052C  01EB               	clrf	??_main+1
  2186     052D  086A               	movf	??_main,w
  2187     052E  00DE               	movwf	?_sprintf+1
  2188     052F  086B               	movf	??_main+1,w
  2189     0530  00DF               	movwf	?_sprintf+2
  2190     0531  303B               	movlw	(low (_buffer_DAY| 0))& (0+255)
  2191     0532  120A  118A  2686  120A  118A  	fcall	_sprintf
  2192     0537                     l2960:
  2193                           
  2194                           ;main.c: 233:         Lcd_Write_Str(buffer_DAY);
  2195     0537  303B               	movlw	(low (_buffer_DAY| 0))& (0+255)
  2196     0538  00F6               	movwf	Lcd_Write_Str@a
  2197     0539  3000               	movlw	0
  2198     053A  00F7               	movwf	Lcd_Write_Str@a+1
  2199     053B  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2200     0540                     l2962:
  2201                           
  2202                           ;main.c: 234:         sprintf(buffer_DAY, "%d", uni);
  2203     0540  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2204     0541  1283               	bcf	3,5	;RP0=0, select bank0
  2205     0542  1303               	bcf	3,6	;RP1=0, select bank0
  2206     0543  00DD               	movwf	sprintf@f
  2207     0544  0830               	movf	_uni,w
  2208     0545  00EA               	movwf	??_main
  2209     0546  01EB               	clrf	??_main+1
  2210     0547  086A               	movf	??_main,w
  2211     0548  00DE               	movwf	?_sprintf+1
  2212     0549  086B               	movf	??_main+1,w
  2213     054A  00DF               	movwf	?_sprintf+2
  2214     054B  303B               	movlw	(low (_buffer_DAY| 0))& (0+255)
  2215     054C  120A  118A  2686  120A  118A  	fcall	_sprintf
  2216     0551                     l2964:
  2217                           
  2218                           ;main.c: 235:         Lcd_Write_Str(buffer_DAY);
  2219     0551  303B               	movlw	(low (_buffer_DAY| 0))& (0+255)
  2220     0552  00F6               	movwf	Lcd_Write_Str@a
  2221     0553  3000               	movlw	0
  2222     0554  00F7               	movwf	Lcd_Write_Str@a+1
  2223     0555  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2224     055A                     l2966:
  2225                           
  2226                           ;main.c: 236:          _delay((unsigned long)((10)*(8000000/4000.0)));
  2227     055A  301A               	movlw	26
  2228     055B  1283               	bcf	3,5	;RP0=0, select bank0
  2229     055C  1303               	bcf	3,6	;RP1=0, select bank0
  2230     055D  00EB               	movwf	??_main+1
  2231     055E  30F7               	movlw	247
  2232     055F  00EA               	movwf	??_main
  2233     0560                     u1517:
  2234     0560  0BEA               	decfsz	??_main,f
  2235     0561  2D60               	goto	u1517
  2236     0562  0BEB               	decfsz	??_main+1,f
  2237     0563  2D60               	goto	u1517
  2238     0564  2D65               	nop2
  2239     0565                     l2968:
  2240                           
  2241                           ;main.c: 237:         Lcd_Set(2, 9);
  2242     0565  3009               	movlw	9
  2243     0566  00F7               	movwf	Lcd_Set@b
  2244     0567  3002               	movlw	2
  2245     0568  120A  158A  250E  120A  118A  	fcall	_Lcd_Set
  2246     056D                     l2970:
  2247                           
  2248                           ;main.c: 238:         Lcd_Write_Str("/");
  2249     056D  3018               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2250     056E  00F6               	movwf	Lcd_Write_Str@a
  2251     056F  3080               	movlw	128
  2252     0570  00F7               	movwf	Lcd_Write_Str@a+1
  2253     0571  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2254     0576                     l2972:
  2255                           
  2256                           ;main.c: 239:         Division(MOTH);
  2257     0576  1283               	bcf	3,5	;RP0=0, select bank0
  2258     0577  1303               	bcf	3,6	;RP1=0, select bank0
  2259     0578  0824               	movf	_MOTH,w
  2260     0579  120A  158A  26A3  120A  118A  	fcall	_Division
  2261     057E                     l2974:
  2262                           
  2263                           ;main.c: 240:         Lcd_Set(2, 10);
  2264     057E  300A               	movlw	10
  2265     057F  00F7               	movwf	Lcd_Set@b
  2266     0580  3002               	movlw	2
  2267     0581  120A  158A  250E  120A  118A  	fcall	_Lcd_Set
  2268     0586                     l2976:
  2269                           
  2270                           ;main.c: 241:         sprintf(buffer_MOTH, "%d", dec);
  2271     0586  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2272     0587  1283               	bcf	3,5	;RP0=0, select bank0
  2273     0588  1303               	bcf	3,6	;RP1=0, select bank0
  2274     0589  00DD               	movwf	sprintf@f
  2275     058A  082F               	movf	_dec,w
  2276     058B  00EA               	movwf	??_main
  2277     058C  01EB               	clrf	??_main+1
  2278     058D  086A               	movf	??_main,w
  2279     058E  00DE               	movwf	?_sprintf+1
  2280     058F  086B               	movf	??_main+1,w
  2281     0590  00DF               	movwf	?_sprintf+2
  2282     0591  3036               	movlw	(low (_buffer_MOTH| 0))& (0+255)
  2283     0592  120A  118A  2686  120A  118A  	fcall	_sprintf
  2284     0597                     l2978:
  2285                           
  2286                           ;main.c: 242:         Lcd_Write_Str(buffer_MOTH);
  2287     0597  3036               	movlw	(low (_buffer_MOTH| 0))& (0+255)
  2288     0598  00F6               	movwf	Lcd_Write_Str@a
  2289     0599  3000               	movlw	0
  2290     059A  00F7               	movwf	Lcd_Write_Str@a+1
  2291     059B  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2292     05A0                     l2980:
  2293                           
  2294                           ;main.c: 243:         sprintf(buffer_MOTH, "%d", uni);
  2295     05A0  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2296     05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2297     05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2298     05A3  00DD               	movwf	sprintf@f
  2299     05A4  0830               	movf	_uni,w
  2300     05A5  00EA               	movwf	??_main
  2301     05A6  01EB               	clrf	??_main+1
  2302     05A7  086A               	movf	??_main,w
  2303     05A8  00DE               	movwf	?_sprintf+1
  2304     05A9  086B               	movf	??_main+1,w
  2305     05AA  00DF               	movwf	?_sprintf+2
  2306     05AB  3036               	movlw	(low (_buffer_MOTH| 0))& (0+255)
  2307     05AC  120A  118A  2686  120A  118A  	fcall	_sprintf
  2308     05B1                     l2982:
  2309                           
  2310                           ;main.c: 244:         Lcd_Write_Str(buffer_MOTH);
  2311     05B1  3036               	movlw	(low (_buffer_MOTH| 0))& (0+255)
  2312     05B2  00F6               	movwf	Lcd_Write_Str@a
  2313     05B3  3000               	movlw	0
  2314     05B4  00F7               	movwf	Lcd_Write_Str@a+1
  2315     05B5  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2316     05BA                     l2984:
  2317                           
  2318                           ;main.c: 245:          _delay((unsigned long)((10)*(8000000/4000.0)));
  2319     05BA  301A               	movlw	26
  2320     05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2321     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2322     05BD  00EB               	movwf	??_main+1
  2323     05BE  30F7               	movlw	247
  2324     05BF  00EA               	movwf	??_main
  2325     05C0                     u1527:
  2326     05C0  0BEA               	decfsz	??_main,f
  2327     05C1  2DC0               	goto	u1527
  2328     05C2  0BEB               	decfsz	??_main+1,f
  2329     05C3  2DC0               	goto	u1527
  2330     05C4  2DC5               	nop2
  2331     05C5                     l2986:
  2332                           
  2333                           ;main.c: 246:          Lcd_Set(2, 12);
  2334     05C5  300C               	movlw	12
  2335     05C6  00F7               	movwf	Lcd_Set@b
  2336     05C7  3002               	movlw	2
  2337     05C8  120A  158A  250E  120A  118A  	fcall	_Lcd_Set
  2338     05CD                     l2988:
  2339                           
  2340                           ;main.c: 247:         Lcd_Write_Str("/");
  2341     05CD  3018               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2342     05CE  00F6               	movwf	Lcd_Write_Str@a
  2343     05CF  3080               	movlw	128
  2344     05D0  00F7               	movwf	Lcd_Write_Str@a+1
  2345     05D1  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2346                           
  2347                           ;main.c: 248:         Division(YEAR);
  2348     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  2349     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  2350     05D8  0822               	movf	_YEAR,w
  2351     05D9  120A  158A  26A3  120A  118A  	fcall	_Division
  2352                           
  2353                           ;main.c: 249:         Lcd_Set(2, 13);
  2354     05DE  300D               	movlw	13
  2355     05DF  00F7               	movwf	Lcd_Set@b
  2356     05E0  3002               	movlw	2
  2357     05E1  120A  158A  250E  120A  118A  	fcall	_Lcd_Set
  2358     05E6                     l2990:
  2359                           
  2360                           ;main.c: 250:         sprintf(buffer_YEAR, "%d", dec);
  2361     05E6  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2362     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  2363     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  2364     05E9  00DD               	movwf	sprintf@f
  2365     05EA  082F               	movf	_dec,w
  2366     05EB  00EA               	movwf	??_main
  2367     05EC  01EB               	clrf	??_main+1
  2368     05ED  086A               	movf	??_main,w
  2369     05EE  00DE               	movwf	?_sprintf+1
  2370     05EF  086B               	movf	??_main+1,w
  2371     05F0  00DF               	movwf	?_sprintf+2
  2372     05F1  3031               	movlw	(low (_buffer_YEAR| 0))& (0+255)
  2373     05F2  120A  118A  2686  120A  118A  	fcall	_sprintf
  2374     05F7                     l2992:
  2375                           
  2376                           ;main.c: 251:         Lcd_Write_Str(buffer_YEAR);
  2377     05F7  3031               	movlw	(low (_buffer_YEAR| 0))& (0+255)
  2378     05F8  00F6               	movwf	Lcd_Write_Str@a
  2379     05F9  3000               	movlw	0
  2380     05FA  00F7               	movwf	Lcd_Write_Str@a+1
  2381     05FB  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2382     0600                     l2994:
  2383                           
  2384                           ;main.c: 252:         sprintf(buffer_YEAR, "%d", uni);
  2385     0600  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2386     0601  1283               	bcf	3,5	;RP0=0, select bank0
  2387     0602  1303               	bcf	3,6	;RP1=0, select bank0
  2388     0603  00DD               	movwf	sprintf@f
  2389     0604  0830               	movf	_uni,w
  2390     0605  00EA               	movwf	??_main
  2391     0606  01EB               	clrf	??_main+1
  2392     0607  086A               	movf	??_main,w
  2393     0608  00DE               	movwf	?_sprintf+1
  2394     0609  086B               	movf	??_main+1,w
  2395     060A  00DF               	movwf	?_sprintf+2
  2396     060B  3031               	movlw	(low (_buffer_YEAR| 0))& (0+255)
  2397     060C  120A  118A  2686  120A  118A  	fcall	_sprintf
  2398     0611                     l2996:
  2399                           
  2400                           ;main.c: 253:         Lcd_Write_Str(buffer_YEAR);
  2401     0611  3031               	movlw	(low (_buffer_YEAR| 0))& (0+255)
  2402     0612  00F6               	movwf	Lcd_Write_Str@a
  2403     0613  3000               	movlw	0
  2404     0614  00F7               	movwf	Lcd_Write_Str@a+1
  2405     0615  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2406     061A                     l2998:
  2407                           
  2408                           ;main.c: 254:          _delay((unsigned long)((10)*(8000000/4000.0)));
  2409     061A  301A               	movlw	26
  2410     061B  1283               	bcf	3,5	;RP0=0, select bank0
  2411     061C  1303               	bcf	3,6	;RP1=0, select bank0
  2412     061D  00EB               	movwf	??_main+1
  2413     061E  30F7               	movlw	247
  2414     061F  00EA               	movwf	??_main
  2415     0620                     u1537:
  2416     0620  0BEA               	decfsz	??_main,f
  2417     0621  2E20               	goto	u1537
  2418     0622  0BEB               	decfsz	??_main+1,f
  2419     0623  2E20               	goto	u1537
  2420     0624  2E25               	nop2
  2421     0625                     l3000:
  2422                           
  2423                           ;main.c: 257:         Division3(adc_val);
  2424     0625  1283               	bcf	3,5	;RP0=0, select bank0
  2425     0626  1303               	bcf	3,6	;RP1=0, select bank0
  2426     0627  0820               	movf	_adc_val,w
  2427     0628  120A  158A  279E  120A  118A  	fcall	_Division3
  2428     062D                     l3002:
  2429                           
  2430                           ;main.c: 258:         Lcd_Set(2, 0);
  2431     062D  01F7               	clrf	Lcd_Set@b
  2432     062E  3002               	movlw	2
  2433     062F  120A  158A  250E  120A  118A  	fcall	_Lcd_Set
  2434     0634                     l3004:
  2435                           
  2436                           ;main.c: 259:         sprintf(buffer_ADC, "%d", cen);
  2437     0634  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2438     0635  1283               	bcf	3,5	;RP0=0, select bank0
  2439     0636  1303               	bcf	3,6	;RP1=0, select bank0
  2440     0637  00DD               	movwf	sprintf@f
  2441     0638  082E               	movf	_cen,w
  2442     0639  00EA               	movwf	??_main
  2443     063A  01EB               	clrf	??_main+1
  2444     063B  086A               	movf	??_main,w
  2445     063C  00DE               	movwf	?_sprintf+1
  2446     063D  086B               	movf	??_main+1,w
  2447     063E  00DF               	movwf	?_sprintf+2
  2448     063F  304A               	movlw	(low (_buffer_ADC| 0))& (0+255)
  2449     0640  120A  118A  2686  120A  118A  	fcall	_sprintf
  2450     0645                     l3006:
  2451                           
  2452                           ;main.c: 260:         Lcd_Write_Str(buffer_ADC);
  2453     0645  304A               	movlw	(low (_buffer_ADC| 0))& (0+255)
  2454     0646  00F6               	movwf	Lcd_Write_Str@a
  2455     0647  3000               	movlw	0
  2456     0648  00F7               	movwf	Lcd_Write_Str@a+1
  2457     0649  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2458     064E                     l3008:
  2459                           
  2460                           ;main.c: 261:         sprintf(buffer_ADC, "%d", dec);
  2461     064E  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2462     064F  1283               	bcf	3,5	;RP0=0, select bank0
  2463     0650  1303               	bcf	3,6	;RP1=0, select bank0
  2464     0651  00DD               	movwf	sprintf@f
  2465     0652  082F               	movf	_dec,w
  2466     0653  00EA               	movwf	??_main
  2467     0654  01EB               	clrf	??_main+1
  2468     0655  086A               	movf	??_main,w
  2469     0656  00DE               	movwf	?_sprintf+1
  2470     0657  086B               	movf	??_main+1,w
  2471     0658  00DF               	movwf	?_sprintf+2
  2472     0659  304A               	movlw	(low (_buffer_ADC| 0))& (0+255)
  2473     065A  120A  118A  2686  120A  118A  	fcall	_sprintf
  2474     065F                     l3010:
  2475                           
  2476                           ;main.c: 262:         Lcd_Write_Str(buffer_ADC);
  2477     065F  304A               	movlw	(low (_buffer_ADC| 0))& (0+255)
  2478     0660  00F6               	movwf	Lcd_Write_Str@a
  2479     0661  3000               	movlw	0
  2480     0662  00F7               	movwf	Lcd_Write_Str@a+1
  2481     0663  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2482     0668                     l3012:
  2483                           
  2484                           ;main.c: 263:         sprintf(buffer_ADC, "%d", uni);
  2485     0668  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2486     0669  1283               	bcf	3,5	;RP0=0, select bank0
  2487     066A  1303               	bcf	3,6	;RP1=0, select bank0
  2488     066B  00DD               	movwf	sprintf@f
  2489     066C  0830               	movf	_uni,w
  2490     066D  00EA               	movwf	??_main
  2491     066E  01EB               	clrf	??_main+1
  2492     066F  086A               	movf	??_main,w
  2493     0670  00DE               	movwf	?_sprintf+1
  2494     0671  086B               	movf	??_main+1,w
  2495     0672  00DF               	movwf	?_sprintf+2
  2496     0673  304A               	movlw	(low (_buffer_ADC| 0))& (0+255)
  2497     0674  120A  118A  2686  120A  118A  	fcall	_sprintf
  2498     0679                     l3014:
  2499                           
  2500                           ;main.c: 264:         Lcd_Write_Str(buffer_ADC);
  2501     0679  304A               	movlw	(low (_buffer_ADC| 0))& (0+255)
  2502     067A  00F6               	movwf	Lcd_Write_Str@a
  2503     067B  3000               	movlw	0
  2504     067C  00F7               	movwf	Lcd_Write_Str@a+1
  2505     067D  120A  158A  25CD  120A  118A  	fcall	_Lcd_Write_Str
  2506     0682  2953               	goto	l2770
  2507     0683  120A  118A  280C   	ljmp	start
  2508     0686                     __end_of_main:
  2509                           
  2510                           	psect	text1
  2511     0686                     __ptext1:	
  2512 ;; *************** function _sprintf *****************
  2513 ;; Defined at:
  2514 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  sp              1    wreg     PTR unsigned char 
  2517 ;;		 -> buffer_ADC(5), buffer_YEAR(5), buffer_MOTH(5), buffer_DAY(5), 
  2518 ;;		 -> buffer_HOR(5), buffer_MIN(5), buffer_SEG(5), 
  2519 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  2520 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(3), 
  2521 ;;		 -> STR_15(3), STR_13(3), STR_12(3), STR_10(3), 
  2522 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_5(3), 
  2523 ;;		 -> STR_4(3), STR_2(3), STR_1(3), 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  2526 ;;		 -> buffer_ADC(5), buffer_YEAR(5), buffer_MOTH(5), buffer_DAY(5), 
  2527 ;;		 -> buffer_HOR(5), buffer_MIN(5), buffer_SEG(5), 
  2528 ;;  tmpval          4    0        struct .
  2529 ;;  val             2   18[BANK0 ] unsigned int 
  2530 ;;  cp              2    0        PTR const unsigned char 
  2531 ;;  len             2    0        unsigned int 
  2532 ;;  c               1   20[BANK0 ] unsigned char 
  2533 ;;  prec            1   17[BANK0 ] char 
  2534 ;;  flag            1   16[BANK0 ] unsigned char 
  2535 ;;  ap              1   15[BANK0 ] PTR void [1]
  2536 ;;		 -> ?_sprintf(2), 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  2    9[BANK0 ] int 
  2539 ;; Registers used:
  2540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       3       0       0       0
  2547 ;;      Locals:         0       7       0       0       0
  2548 ;;      Temps:          0       3       0       0       0
  2549 ;;      Totals:         0      13       0       0       0
  2550 ;;Total ram usage:       13 bytes
  2551 ;; Hardware stack levels used: 1
  2552 ;; Hardware stack levels required when called: 2
  2553 ;; This function calls:
  2554 ;;		___lwdiv
  2555 ;;		___lwmod
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561     0686                     _sprintf:	
  2562                           ;psect for function _sprintf
  2563                           
  2564                           
  2565                           ;incstack = 0
  2566                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2567                           ;sprintf@sp stored from wreg
  2568     0686  1283               	bcf	3,5	;RP0=0, select bank0
  2569     0687  1303               	bcf	3,6	;RP1=0, select bank0
  2570     0688  00E9               	movwf	sprintf@sp
  2571     0689                     l2646:
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2574     0689  305E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2575     068A  00E3               	movwf	sprintf@ap
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2578     068B  2F4D               	goto	l2698
  2579     068C                     l2648:
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2582     068C  3025               	movlw	37
  2583     068D  0668               	xorwf	sprintf@c,w
  2584     068E  1903               	btfsc	3,2
  2585     068F  2E91               	goto	u1341
  2586     0690  2E92               	goto	u1340
  2587     0691                     u1341:
  2588     0691  2E9C               	goto	l2654
  2589     0692                     u1340:
  2590     0692                     l2650:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2593     0692  0869               	movf	sprintf@sp,w
  2594     0693  0084               	movwf	4
  2595     0694  0868               	movf	sprintf@c,w
  2596     0695  1383               	bcf	3,7	;select IRP bank0
  2597     0696  0080               	movwf	0
  2598     0697                     l2652:
  2599     0697  3001               	movlw	1
  2600     0698  00E0               	movwf	??_sprintf
  2601     0699  0860               	movf	??_sprintf,w
  2602     069A  07E9               	addwf	sprintf@sp,f
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2605     069B  2F4D               	goto	l2698
  2606     069C                     l2654:
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2609     069C  01E4               	clrf	sprintf@flag
  2610     069D                     l2658:	
  2611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2612                           
  2613     069D  3001               	movlw	1
  2614     069E  07DD               	addwf	sprintf@f,f
  2615     069F  30FF               	movlw	-1
  2616     06A0  075D               	addwf	sprintf@f,w
  2617     06A1  0084               	movwf	4
  2618     06A2  120A  158A  200A  120A  118A  	fcall	stringdir
  2619     06A7  00E8               	movwf	sprintf@c
  2620     06A8  00E0               	movwf	??_sprintf
  2621     06A9  01E1               	clrf	??_sprintf+1
  2622                           
  2623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2624                           ; Switch size 1, requested type "simple"
  2625                           ; Number of cases is 1, Range of values is 0 to 0
  2626                           ; switch strategies available:
  2627                           ; Name         Instructions Cycles
  2628                           ; simple_byte            4     3 (average)
  2629                           ; direct_byte           11     8 (fixed)
  2630                           ; jumptable            260     6 (fixed)
  2631                           ;	Chosen strategy is simple_byte
  2632     06AA  0861               	movf	??_sprintf+1,w
  2633     06AB  3A00               	xorlw	0	; case 0
  2634     06AC  1903               	skipnz
  2635     06AD  2EAF               	goto	l3058
  2636     06AE  2F4D               	goto	l2698
  2637     06AF                     l3058:
  2638                           
  2639                           ; Switch size 1, requested type "simple"
  2640                           ; Number of cases is 3, Range of values is 0 to 105
  2641                           ; switch strategies available:
  2642                           ; Name         Instructions Cycles
  2643                           ; simple_byte           10     6 (average)
  2644                           ; jumptable            260     6 (fixed)
  2645                           ;	Chosen strategy is simple_byte
  2646     06AF  0860               	movf	??_sprintf,w
  2647     06B0  3A00               	xorlw	0	; case 0
  2648     06B1  1903               	skipnz
  2649     06B2  2F5D               	goto	l2700
  2650     06B3  3A64               	xorlw	100	; case 100
  2651     06B4  1903               	skipnz
  2652     06B5  2EBA               	goto	l2660
  2653     06B6  3A0D               	xorlw	13	; case 105
  2654     06B7  1903               	skipnz
  2655     06B8  2EBA               	goto	l2660
  2656     06B9  2F4D               	goto	l2698
  2657     06BA                     l2660:
  2658                           
  2659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2660     06BA  0863               	movf	sprintf@ap,w
  2661     06BB  0084               	movwf	4
  2662     06BC  1383               	bcf	3,7	;select IRP bank0
  2663     06BD  0800               	movf	0,w
  2664     06BE  00E6               	movwf	sprintf@val
  2665     06BF  0A84               	incf	4,f
  2666     06C0  0800               	movf	0,w
  2667     06C1  00E7               	movwf	sprintf@val+1
  2668     06C2                     l2662:
  2669     06C2  3002               	movlw	2
  2670     06C3  00E0               	movwf	??_sprintf
  2671     06C4  0860               	movf	??_sprintf,w
  2672     06C5  07E3               	addwf	sprintf@ap,f
  2673     06C6                     l2664:
  2674                           
  2675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2676     06C6  1FE7               	btfss	sprintf@val+1,7
  2677     06C7  2EC9               	goto	u1351
  2678     06C8  2ECA               	goto	u1350
  2679     06C9                     u1351:
  2680     06C9  2ED3               	goto	l2670
  2681     06CA                     u1350:
  2682     06CA                     l2666:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2685     06CA  3003               	movlw	3
  2686     06CB  00E0               	movwf	??_sprintf
  2687     06CC  0860               	movf	??_sprintf,w
  2688     06CD  04E4               	iorwf	sprintf@flag,f
  2689     06CE                     l2668:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2692     06CE  09E6               	comf	sprintf@val,f
  2693     06CF  09E7               	comf	sprintf@val+1,f
  2694     06D0  0AE6               	incf	sprintf@val,f
  2695     06D1  1903               	skipnz
  2696     06D2  0AE7               	incf	sprintf@val+1,f
  2697     06D3                     l2670:
  2698                           
  2699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2700     06D3  01E8               	clrf	sprintf@c
  2701     06D4  0AE8               	incf	sprintf@c,f
  2702     06D5                     l2676:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2705     06D5  0868               	movf	sprintf@c,w
  2706     06D6  00E0               	movwf	??_sprintf
  2707     06D7  0760               	addwf	??_sprintf,w
  2708     06D8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2709     06D9  0084               	movwf	4
  2710     06DA  120A  158A  200A  120A  118A  	fcall	stringdir
  2711     06DF  00E1               	movwf	??_sprintf+1
  2712     06E0  120A  158A  200A  120A  118A  	fcall	stringdir
  2713     06E5  00E2               	movwf	??_sprintf+2
  2714     06E6  0862               	movf	??_sprintf+2,w
  2715     06E7  0267               	subwf	sprintf@val+1,w
  2716     06E8  1D03               	skipz
  2717     06E9  2EEC               	goto	u1365
  2718     06EA  0861               	movf	??_sprintf+1,w
  2719     06EB  0266               	subwf	sprintf@val,w
  2720     06EC                     u1365:
  2721     06EC  1803               	skipnc
  2722     06ED  2EEF               	goto	u1361
  2723     06EE  2EF0               	goto	u1360
  2724     06EF                     u1361:
  2725     06EF  2EF1               	goto	l2680
  2726     06F0                     u1360:
  2727     06F0  2EFB               	goto	l2682
  2728     06F1                     l2680:
  2729     06F1  3001               	movlw	1
  2730     06F2  00E0               	movwf	??_sprintf
  2731     06F3  0860               	movf	??_sprintf,w
  2732     06F4  07E8               	addwf	sprintf@c,f
  2733     06F5  3005               	movlw	5
  2734     06F6  0668               	xorwf	sprintf@c,w
  2735     06F7  1D03               	btfss	3,2
  2736     06F8  2EFA               	goto	u1371
  2737     06F9  2EFB               	goto	u1370
  2738     06FA                     u1371:
  2739     06FA  2ED5               	goto	l2676
  2740     06FB                     u1370:
  2741     06FB                     l2682:
  2742                           
  2743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2744     06FB  0864               	movf	sprintf@flag,w
  2745     06FC  3903               	andlw	3
  2746     06FD  1903               	btfsc	3,2
  2747     06FE  2F00               	goto	u1381
  2748     06FF  2F01               	goto	u1380
  2749     0700                     u1381:
  2750     0700  2F0A               	goto	l2688
  2751     0701                     u1380:
  2752     0701                     l2684:
  2753                           
  2754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2755     0701  0869               	movf	sprintf@sp,w
  2756     0702  0084               	movwf	4
  2757     0703  302D               	movlw	45
  2758     0704  1383               	bcf	3,7	;select IRP bank0
  2759     0705  0080               	movwf	0
  2760     0706                     l2686:
  2761     0706  3001               	movlw	1
  2762     0707  00E0               	movwf	??_sprintf
  2763     0708  0860               	movf	??_sprintf,w
  2764     0709  07E9               	addwf	sprintf@sp,f
  2765     070A                     l2688:
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2768     070A  0868               	movf	sprintf@c,w
  2769     070B  00E5               	movwf	sprintf@prec
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2772     070C  2F44               	goto	l2696
  2773     070D                     l2690:
  2774                           
  2775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2776     070D  300A               	movlw	10
  2777     070E  00D7               	movwf	___lwmod@divisor
  2778     070F  3000               	movlw	0
  2779     0710  00D8               	movwf	___lwmod@divisor+1
  2780     0711  0865               	movf	sprintf@prec,w
  2781     0712  00E0               	movwf	??_sprintf
  2782     0713  0760               	addwf	??_sprintf,w
  2783     0714  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2784     0715  0084               	movwf	4
  2785     0716  120A  158A  200A  120A  118A  	fcall	stringdir
  2786     071B  00F4               	movwf	___lwdiv@divisor
  2787     071C  120A  158A  200A  120A  118A  	fcall	stringdir
  2788     0721  00F5               	movwf	___lwdiv@divisor+1
  2789     0722  0867               	movf	sprintf@val+1,w
  2790     0723  00F7               	movwf	___lwdiv@dividend+1
  2791     0724  0866               	movf	sprintf@val,w
  2792     0725  00F6               	movwf	___lwdiv@dividend
  2793     0726  120A  158A  2613  120A  118A  	fcall	___lwdiv
  2794     072B  0875               	movf	?___lwdiv+1,w
  2795     072C  1283               	bcf	3,5	;RP0=0, select bank0
  2796     072D  1303               	bcf	3,6	;RP1=0, select bank0
  2797     072E  00DA               	movwf	___lwmod@dividend+1
  2798     072F  0874               	movf	?___lwdiv,w
  2799     0730  00D9               	movwf	___lwmod@dividend
  2800     0731  120A  158A  2591  120A  118A  	fcall	___lwmod
  2801     0736  1283               	bcf	3,5	;RP0=0, select bank0
  2802     0737  1303               	bcf	3,6	;RP1=0, select bank0
  2803     0738  0857               	movf	?___lwmod,w
  2804     0739  3E30               	addlw	48
  2805     073A  00E8               	movwf	sprintf@c
  2806     073B                     l2692:
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2809     073B  0869               	movf	sprintf@sp,w
  2810     073C  0084               	movwf	4
  2811     073D  0868               	movf	sprintf@c,w
  2812     073E  1383               	bcf	3,7	;select IRP bank0
  2813     073F  0080               	movwf	0
  2814     0740                     l2694:
  2815     0740  3001               	movlw	1
  2816     0741  00E0               	movwf	??_sprintf
  2817     0742  0860               	movf	??_sprintf,w
  2818     0743  07E9               	addwf	sprintf@sp,f
  2819     0744                     l2696:
  2820                           
  2821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2822     0744  30FF               	movlw	255
  2823     0745  00E0               	movwf	??_sprintf
  2824     0746  0860               	movf	??_sprintf,w
  2825     0747  07E5               	addwf	sprintf@prec,f
  2826     0748  0A65               	incf	sprintf@prec,w
  2827     0749  1D03               	btfss	3,2
  2828     074A  2F4C               	goto	u1391
  2829     074B  2F4D               	goto	u1390
  2830     074C                     u1391:
  2831     074C  2F0D               	goto	l2690
  2832     074D                     u1390:
  2833     074D                     l2698:
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2836     074D  3001               	movlw	1
  2837     074E  07DD               	addwf	sprintf@f,f
  2838     074F  30FF               	movlw	-1
  2839     0750  075D               	addwf	sprintf@f,w
  2840     0751  0084               	movwf	4
  2841     0752  120A  158A  200A  120A  118A  	fcall	stringdir
  2842     0757  00E8               	movwf	sprintf@c
  2843     0758  0868               	movf	sprintf@c,w
  2844     0759  1D03               	btfss	3,2
  2845     075A  2F5C               	goto	u1401
  2846     075B  2F5D               	goto	u1400
  2847     075C                     u1401:
  2848     075C  2E8C               	goto	l2648
  2849     075D                     u1400:
  2850     075D                     l2700:
  2851                           
  2852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2853     075D  0869               	movf	sprintf@sp,w
  2854     075E  0084               	movwf	4
  2855     075F  1383               	bcf	3,7	;select IRP bank0
  2856     0760  0180               	clrf	0
  2857     0761                     l368:
  2858     0761  0008               	return
  2859     0762                     __end_of_sprintf:
  2860                           
  2861                           	psect	text2
  2862     0D91                     __ptext2:	
  2863 ;; *************** function ___lwmod *****************
  2864 ;; Defined at:
  2865 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  divisor         2    3[BANK0 ] unsigned int 
  2868 ;;  dividend        2    5[BANK0 ] unsigned int 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  counter         1    8[BANK0 ] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  2    3[BANK0 ] unsigned int 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2880 ;;      Params:         0       4       0       0       0
  2881 ;;      Locals:         0       1       0       0       0
  2882 ;;      Temps:          0       1       0       0       0
  2883 ;;      Totals:         0       6       0       0       0
  2884 ;;Total ram usage:        6 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 1
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_sprintf
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894     0D91                     ___lwmod:	
  2895                           ;psect for function ___lwmod
  2896                           
  2897     0D91                     l2520:	
  2898                           ;incstack = 0
  2899                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2900                           
  2901     0D91  1283               	bcf	3,5	;RP0=0, select bank0
  2902     0D92  1303               	bcf	3,6	;RP1=0, select bank0
  2903     0D93  0857               	movf	___lwmod@divisor,w
  2904     0D94  0458               	iorwf	___lwmod@divisor+1,w
  2905     0D95  1903               	btfsc	3,2
  2906     0D96  2D98               	goto	u1251
  2907     0D97  2D99               	goto	u1250
  2908     0D98                     u1251:
  2909     0D98  2DC8               	goto	l2538
  2910     0D99                     u1250:
  2911     0D99                     l2522:
  2912     0D99  01DC               	clrf	___lwmod@counter
  2913     0D9A  0ADC               	incf	___lwmod@counter,f
  2914     0D9B  2DA7               	goto	l2528
  2915     0D9C                     l2524:
  2916     0D9C  3001               	movlw	1
  2917     0D9D                     u1265:
  2918     0D9D  1003               	clrc
  2919     0D9E  0DD7               	rlf	___lwmod@divisor,f
  2920     0D9F  0DD8               	rlf	___lwmod@divisor+1,f
  2921     0DA0  3EFF               	addlw	-1
  2922     0DA1  1D03               	skipz
  2923     0DA2  2D9D               	goto	u1265
  2924     0DA3                     l2526:
  2925     0DA3  3001               	movlw	1
  2926     0DA4  00DB               	movwf	??___lwmod
  2927     0DA5  085B               	movf	??___lwmod,w
  2928     0DA6  07DC               	addwf	___lwmod@counter,f
  2929     0DA7                     l2528:
  2930     0DA7  1FD8               	btfss	___lwmod@divisor+1,7
  2931     0DA8  2DAA               	goto	u1271
  2932     0DA9  2DAB               	goto	u1270
  2933     0DAA                     u1271:
  2934     0DAA  2D9C               	goto	l2524
  2935     0DAB                     u1270:
  2936     0DAB                     l2530:
  2937     0DAB  0858               	movf	___lwmod@divisor+1,w
  2938     0DAC  025A               	subwf	___lwmod@dividend+1,w
  2939     0DAD  1D03               	skipz
  2940     0DAE  2DB1               	goto	u1285
  2941     0DAF  0857               	movf	___lwmod@divisor,w
  2942     0DB0  0259               	subwf	___lwmod@dividend,w
  2943     0DB1                     u1285:
  2944     0DB1  1C03               	skipc
  2945     0DB2  2DB4               	goto	u1281
  2946     0DB3  2DB5               	goto	u1280
  2947     0DB4                     u1281:
  2948     0DB4  2DBB               	goto	l2534
  2949     0DB5                     u1280:
  2950     0DB5                     l2532:
  2951     0DB5  0857               	movf	___lwmod@divisor,w
  2952     0DB6  02D9               	subwf	___lwmod@dividend,f
  2953     0DB7  0858               	movf	___lwmod@divisor+1,w
  2954     0DB8  1C03               	skipc
  2955     0DB9  03DA               	decf	___lwmod@dividend+1,f
  2956     0DBA  02DA               	subwf	___lwmod@dividend+1,f
  2957     0DBB                     l2534:
  2958     0DBB  3001               	movlw	1
  2959     0DBC                     u1295:
  2960     0DBC  1003               	clrc
  2961     0DBD  0CD8               	rrf	___lwmod@divisor+1,f
  2962     0DBE  0CD7               	rrf	___lwmod@divisor,f
  2963     0DBF  3EFF               	addlw	-1
  2964     0DC0  1D03               	skipz
  2965     0DC1  2DBC               	goto	u1295
  2966     0DC2                     l2536:
  2967     0DC2  3001               	movlw	1
  2968     0DC3  02DC               	subwf	___lwmod@counter,f
  2969     0DC4  1D03               	btfss	3,2
  2970     0DC5  2DC7               	goto	u1301
  2971     0DC6  2DC8               	goto	u1300
  2972     0DC7                     u1301:
  2973     0DC7  2DAB               	goto	l2530
  2974     0DC8                     u1300:
  2975     0DC8                     l2538:
  2976     0DC8  085A               	movf	___lwmod@dividend+1,w
  2977     0DC9  00D8               	movwf	?___lwmod+1
  2978     0DCA  0859               	movf	___lwmod@dividend,w
  2979     0DCB  00D7               	movwf	?___lwmod
  2980     0DCC                     l654:
  2981     0DCC  0008               	return
  2982     0DCD                     __end_of___lwmod:
  2983                           
  2984                           	psect	text3
  2985     0E13                     __ptext3:	
  2986 ;; *************** function ___lwdiv *****************
  2987 ;; Defined at:
  2988 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  divisor         2    4[COMMON] unsigned int 
  2991 ;;  dividend        2    6[COMMON] unsigned int 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  quotient        2    0[BANK0 ] unsigned int 
  2994 ;;  counter         1    2[BANK0 ] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2    4[COMMON] unsigned int 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3004 ;;      Params:         4       0       0       0       0
  3005 ;;      Locals:         0       3       0       0       0
  3006 ;;      Temps:          1       0       0       0       0
  3007 ;;      Totals:         5       3       0       0       0
  3008 ;;Total ram usage:        8 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; Hardware stack levels required when called: 1
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_sprintf
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018     0E13                     ___lwdiv:	
  3019                           ;psect for function ___lwdiv
  3020                           
  3021     0E13                     l1874:	
  3022                           ;incstack = 0
  3023                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3024                           
  3025     0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3026     0E14  1303               	bcf	3,6	;RP1=0, select bank0
  3027     0E15  01D4               	clrf	___lwdiv@quotient
  3028     0E16  01D5               	clrf	___lwdiv@quotient+1
  3029     0E17                     l1876:
  3030     0E17  0874               	movf	___lwdiv@divisor,w
  3031     0E18  0475               	iorwf	___lwdiv@divisor+1,w
  3032     0E19  1903               	btfsc	3,2
  3033     0E1A  2E1C               	goto	u841
  3034     0E1B  2E1D               	goto	u840
  3035     0E1C                     u841:
  3036     0E1C  2E54               	goto	l1896
  3037     0E1D                     u840:
  3038     0E1D                     l1878:
  3039     0E1D  01D6               	clrf	___lwdiv@counter
  3040     0E1E  0AD6               	incf	___lwdiv@counter,f
  3041     0E1F  2E2B               	goto	l1884
  3042     0E20                     l1880:
  3043     0E20  3001               	movlw	1
  3044     0E21                     u855:
  3045     0E21  1003               	clrc
  3046     0E22  0DF4               	rlf	___lwdiv@divisor,f
  3047     0E23  0DF5               	rlf	___lwdiv@divisor+1,f
  3048     0E24  3EFF               	addlw	-1
  3049     0E25  1D03               	skipz
  3050     0E26  2E21               	goto	u855
  3051     0E27                     l1882:
  3052     0E27  3001               	movlw	1
  3053     0E28  00F8               	movwf	??___lwdiv
  3054     0E29  0878               	movf	??___lwdiv,w
  3055     0E2A  07D6               	addwf	___lwdiv@counter,f
  3056     0E2B                     l1884:
  3057     0E2B  1FF5               	btfss	___lwdiv@divisor+1,7
  3058     0E2C  2E2E               	goto	u861
  3059     0E2D  2E2F               	goto	u860
  3060     0E2E                     u861:
  3061     0E2E  2E20               	goto	l1880
  3062     0E2F                     u860:
  3063     0E2F                     l1886:
  3064     0E2F  3001               	movlw	1
  3065     0E30                     u875:
  3066     0E30  1003               	clrc
  3067     0E31  0DD4               	rlf	___lwdiv@quotient,f
  3068     0E32  0DD5               	rlf	___lwdiv@quotient+1,f
  3069     0E33  3EFF               	addlw	-1
  3070     0E34  1D03               	skipz
  3071     0E35  2E30               	goto	u875
  3072     0E36  0875               	movf	___lwdiv@divisor+1,w
  3073     0E37  0277               	subwf	___lwdiv@dividend+1,w
  3074     0E38  1D03               	skipz
  3075     0E39  2E3C               	goto	u885
  3076     0E3A  0874               	movf	___lwdiv@divisor,w
  3077     0E3B  0276               	subwf	___lwdiv@dividend,w
  3078     0E3C                     u885:
  3079     0E3C  1C03               	skipc
  3080     0E3D  2E3F               	goto	u881
  3081     0E3E  2E40               	goto	u880
  3082     0E3F                     u881:
  3083     0E3F  2E47               	goto	l1892
  3084     0E40                     u880:
  3085     0E40                     l1888:
  3086     0E40  0874               	movf	___lwdiv@divisor,w
  3087     0E41  02F6               	subwf	___lwdiv@dividend,f
  3088     0E42  0875               	movf	___lwdiv@divisor+1,w
  3089     0E43  1C03               	skipc
  3090     0E44  03F7               	decf	___lwdiv@dividend+1,f
  3091     0E45  02F7               	subwf	___lwdiv@dividend+1,f
  3092     0E46                     l1890:
  3093     0E46  1454               	bsf	___lwdiv@quotient,0
  3094     0E47                     l1892:
  3095     0E47  3001               	movlw	1
  3096     0E48                     u895:
  3097     0E48  1003               	clrc
  3098     0E49  0CF5               	rrf	___lwdiv@divisor+1,f
  3099     0E4A  0CF4               	rrf	___lwdiv@divisor,f
  3100     0E4B  3EFF               	addlw	-1
  3101     0E4C  1D03               	skipz
  3102     0E4D  2E48               	goto	u895
  3103     0E4E                     l1894:
  3104     0E4E  3001               	movlw	1
  3105     0E4F  02D6               	subwf	___lwdiv@counter,f
  3106     0E50  1D03               	btfss	3,2
  3107     0E51  2E53               	goto	u901
  3108     0E52  2E54               	goto	u900
  3109     0E53                     u901:
  3110     0E53  2E2F               	goto	l1886
  3111     0E54                     u900:
  3112     0E54                     l1896:
  3113     0E54  0855               	movf	___lwdiv@quotient+1,w
  3114     0E55  00F5               	movwf	?___lwdiv+1
  3115     0E56  0854               	movf	___lwdiv@quotient,w
  3116     0E57  00F4               	movwf	?___lwdiv
  3117     0E58                     l644:
  3118     0E58  0008               	return
  3119     0E59                     __end_of___lwdiv:
  3120                           
  3121                           	psect	text4
  3122     0EF1                     __ptext4:	
  3123 ;; *************** function _setup *****************
  3124 ;; Defined at:
  3125 ;;		line 274 in file "main.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3139 ;;      Params:         0       0       0       0       0
  3140 ;;      Locals:         0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0
  3142 ;;      Totals:         0       0       0       0       0
  3143 ;;Total ram usage:        0 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; Hardware stack levels required when called: 3
  3146 ;; This function calls:
  3147 ;;		_ADC_CONF
  3148 ;;		_I2C_Master_Init
  3149 ;;		_Lcd_Clear
  3150 ;;		_Lcd_Init
  3151 ;;		_Lcd_Set
  3152 ;;		_Lcd_Write_Str
  3153 ;; This function is called by:
  3154 ;;		_main
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158     0EF1                     _setup:	
  3159                           ;psect for function _setup
  3160                           
  3161     0EF1                     l2546:	
  3162                           ;incstack = 0
  3163                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3164                           
  3165                           
  3166                           ;main.c: 276:     OSCCONbits.IRCF = 0b0111;
  3167     0EF1  3070               	movlw	112
  3168     0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3169     0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  3170     0EF4  048F               	iorwf	15,f	;volatile
  3171     0EF5                     l2548:
  3172                           
  3173                           ;main.c: 277:     OSCCONbits.SCS = 1;
  3174     0EF5  140F               	bsf	15,0	;volatile
  3175     0EF6                     l2550:
  3176                           
  3177                           ;main.c: 278:     ADC_CONF(8);
  3178     0EF6  3008               	movlw	8
  3179     0EF7  00F4               	movwf	ADC_CONF@frec
  3180     0EF8  3000               	movlw	0
  3181     0EF9  00F5               	movwf	ADC_CONF@frec+1
  3182     0EFA  120A  158A  252C  120A  158A  	fcall	_ADC_CONF
  3183     0EFF                     l2552:
  3184                           
  3185                           ;main.c: 279:     ANSEL = 0;
  3186     0EFF  1683               	bsf	3,5	;RP0=1, select bank3
  3187     0F00  1703               	bsf	3,6	;RP1=1, select bank3
  3188     0F01  0188               	clrf	8	;volatile
  3189     0F02                     l2554:
  3190                           
  3191                           ;main.c: 280:     ANSELH = 0;
  3192     0F02  0189               	clrf	9	;volatile
  3193     0F03                     l2556:
  3194                           
  3195                           ;main.c: 281:     TRISC2 = 0;
  3196     0F03  1683               	bsf	3,5	;RP0=1, select bank1
  3197     0F04  1303               	bcf	3,6	;RP1=0, select bank1
  3198     0F05  1107               	bcf	7,2	;volatile
  3199     0F06                     l2558:
  3200                           
  3201                           ;main.c: 282:     TRISCbits.TRISC1 = 0;
  3202     0F06  1087               	bcf	7,1	;volatile
  3203     0F07                     l2560:
  3204                           
  3205                           ;main.c: 283:     TRISCbits.TRISC2 = 0;
  3206     0F07  1107               	bcf	7,2	;volatile
  3207     0F08                     l2562:
  3208                           
  3209                           ;main.c: 284:     TRISCbits.TRISC6 = 0;
  3210     0F08  1307               	bcf	7,6	;volatile
  3211     0F09                     l2564:
  3212                           
  3213                           ;main.c: 285:     TRISCbits.TRISC7 = 0;
  3214     0F09  1387               	bcf	7,7	;volatile
  3215     0F0A                     l2566:
  3216                           
  3217                           ;main.c: 286:     TRISD = 0;
  3218     0F0A  0188               	clrf	8	;volatile
  3219     0F0B                     l2568:
  3220                           
  3221                           ;main.c: 287:     TRISB = 0;
  3222     0F0B  0186               	clrf	6	;volatile
  3223     0F0C                     l2570:
  3224                           
  3225                           ;main.c: 288:     PORTD = 0;
  3226     0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  3227     0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  3228     0F0E  0188               	clrf	8	;volatile
  3229     0F0F                     l2572:
  3230                           
  3231                           ;main.c: 289:     PORTCbits.RC4 = 1;
  3232     0F0F  1607               	bsf	7,4	;volatile
  3233     0F10                     l2574:
  3234                           
  3235                           ;main.c: 290:     PORTCbits.RC3 = 1;
  3236     0F10  1587               	bsf	7,3	;volatile
  3237     0F11                     l2576:
  3238                           
  3239                           ;main.c: 291:     I2C_Master_Init(100000);
  3240     0F11  3000               	movlw	0
  3241     0F12  00F7               	movwf	I2C_Master_Init@c+3
  3242     0F13  3001               	movlw	1
  3243     0F14  00F6               	movwf	I2C_Master_Init@c+2
  3244     0F15  3086               	movlw	134
  3245     0F16  00F5               	movwf	I2C_Master_Init@c+1
  3246     0F17  30A0               	movlw	160
  3247     0F18  00F4               	movwf	I2C_Master_Init@c
  3248     0F19  120A  158A  248D  120A  158A  	fcall	_I2C_Master_Init
  3249     0F1E                     l2578:
  3250                           
  3251                           ;main.c: 292:     Lcd_Init();
  3252     0F1E  120A  158A  2659  120A  158A  	fcall	_Lcd_Init
  3253     0F23                     l2580:
  3254                           
  3255                           ;main.c: 293:     Lcd_Clear();
  3256     0F23  120A  158A  2472  120A  158A  	fcall	_Lcd_Clear
  3257     0F28                     l2582:
  3258                           
  3259                           ;main.c: 294:     Lcd_Set(1,1);
  3260     0F28  01F7               	clrf	Lcd_Set@b
  3261     0F29  0AF7               	incf	Lcd_Set@b,f
  3262     0F2A  3001               	movlw	1
  3263     0F2B  120A  158A  250E  120A  158A  	fcall	_Lcd_Set
  3264     0F30                     l2584:
  3265                           
  3266                           ;main.c: 295:     Lcd_Write_Str("S1       ");
  3267     0F30  300B               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  3268     0F31  00F6               	movwf	Lcd_Write_Str@a
  3269     0F32  3080               	movlw	128
  3270     0F33  00F7               	movwf	Lcd_Write_Str@a+1
  3271     0F34  120A  158A  25CD  120A  158A  	fcall	_Lcd_Write_Str
  3272     0F39                     l2586:
  3273                           
  3274                           ;main.c: 297:     INTCONbits.PEIE = 1;
  3275     0F39  170B               	bsf	11,6	;volatile
  3276     0F3A                     l2588:
  3277                           
  3278                           ;main.c: 298:     PIE1bits.ADIE = 1;
  3279     0F3A  1683               	bsf	3,5	;RP0=1, select bank1
  3280     0F3B  1303               	bcf	3,6	;RP1=0, select bank1
  3281     0F3C  170C               	bsf	12,6	;volatile
  3282     0F3D                     l2590:
  3283                           
  3284                           ;main.c: 299:     ADCON0bits.GO = 0;
  3285     0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  3286     0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  3287     0F3F  109F               	bcf	31,1	;volatile
  3288     0F40                     l2592:
  3289                           
  3290                           ;main.c: 300:     INTCONbits.GIE = 1;
  3291     0F40  178B               	bsf	11,7	;volatile
  3292     0F41                     l2594:
  3293                           
  3294                           ;main.c: 301:     INTCONbits.PEIE = 1;
  3295     0F41  170B               	bsf	11,6	;volatile
  3296     0F42                     l130:
  3297     0F42  0008               	return
  3298     0F43                     __end_of_setup:
  3299                           
  3300                           	psect	text5
  3301     0DCD                     __ptext5:	
  3302 ;; *************** function _Lcd_Write_Str *****************
  3303 ;; Defined at:
  3304 ;;		line 61 in file "C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/Digital 2/ARC
      +HIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  a               2    6[COMMON] PTR unsigned char 
  3307 ;;		 -> STR_20(10), buffer_ADC(5), buffer_YEAR(5), STR_14(2), 
  3308 ;;		 -> buffer_MOTH(5), STR_11(2), buffer_DAY(5), buffer_HOR(5), 
  3309 ;;		 -> STR_6(2), buffer_MIN(5), STR_3(2), buffer_SEG(5), 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  i               2    3[BANK0 ] int 
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3321 ;;      Params:         2       0       0       0       0
  3322 ;;      Locals:         0       2       0       0       0
  3323 ;;      Temps:          0       3       0       0       0
  3324 ;;      Totals:         2       5       0       0       0
  3325 ;;Total ram usage:        7 bytes
  3326 ;; Hardware stack levels used: 1
  3327 ;; Hardware stack levels required when called: 2
  3328 ;; This function calls:
  3329 ;;		_Lcd_Write
  3330 ;; This function is called by:
  3331 ;;		_main
  3332 ;;		_setup
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336     0DCD                     _Lcd_Write_Str:	
  3337                           ;psect for function _Lcd_Write_Str
  3338                           
  3339     0DCD                     l2464:	
  3340                           ;incstack = 0
  3341                           ; Regs used in _Lcd_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3342                           
  3343                           
  3344                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 62:     int i;;C:/Users/Alejand
      +                          ro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/Digital 2/ARCHIVOS
      +                          _LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 63:     for (i = 0; a[i] != '\0'; i++)
  3345     0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  3346     0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  3347     0DCF  01D7               	clrf	Lcd_Write_Str@i
  3348     0DD0  01D8               	clrf	Lcd_Write_Str@i+1
  3349     0DD1  2DF6               	goto	l2470
  3350     0DD2                     l2466:
  3351                           
  3352                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 64:         Lcd_Write(a[i]);
  3353     0DD2  0857               	movf	Lcd_Write_Str@i,w
  3354     0DD3  0776               	addwf	Lcd_Write_Str@a,w
  3355     0DD4  00D5               	movwf	??_Lcd_Write_Str+1
  3356     0DD5  0877               	movf	Lcd_Write_Str@a+1,w
  3357     0DD6  00D4               	movwf	??_Lcd_Write_Str
  3358     0DD7  1803               	skipnc
  3359     0DD8  0AD4               	incf	??_Lcd_Write_Str,f
  3360     0DD9  1FD7               	btfss	Lcd_Write_Str@i,7
  3361     0DDA  2DDC               	goto	u1100
  3362     0DDB  03D4               	decf	??_Lcd_Write_Str,f
  3363     0DDC                     u1100:
  3364     0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  3365     0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  3366     0DDE  0854               	movf	??_Lcd_Write_Str,w
  3367     0DDF  00D6               	movwf	??_Lcd_Write_Str+2
  3368     0DE0  0856               	movf	??_Lcd_Write_Str+2,w
  3369     0DE1  00FF               	movwf	btemp+1
  3370     0DE2  0855               	movf	??_Lcd_Write_Str+1,w
  3371     0DE3  0084               	movwf	4
  3372     0DE4  120A  158A  2000  120A  158A  	fcall	stringtab
  3373     0DE9  120A  158A  249B  120A  158A  	fcall	_Lcd_Write
  3374     0DEE                     l2468:
  3375     0DEE  3001               	movlw	1
  3376     0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  3377     0DF0  1303               	bcf	3,6	;RP1=0, select bank0
  3378     0DF1  07D7               	addwf	Lcd_Write_Str@i,f
  3379     0DF2  1803               	skipnc
  3380     0DF3  0AD8               	incf	Lcd_Write_Str@i+1,f
  3381     0DF4  3000               	movlw	0
  3382     0DF5  07D8               	addwf	Lcd_Write_Str@i+1,f
  3383     0DF6                     l2470:
  3384     0DF6  0857               	movf	Lcd_Write_Str@i,w
  3385     0DF7  0776               	addwf	Lcd_Write_Str@a,w
  3386     0DF8  00D5               	movwf	??_Lcd_Write_Str+1
  3387     0DF9  0877               	movf	Lcd_Write_Str@a+1,w
  3388     0DFA  00D4               	movwf	??_Lcd_Write_Str
  3389     0DFB  1803               	skipnc
  3390     0DFC  0AD4               	incf	??_Lcd_Write_Str,f
  3391     0DFD  1FD7               	btfss	Lcd_Write_Str@i,7
  3392     0DFE  2E00               	goto	u1110
  3393     0DFF  03D4               	decf	??_Lcd_Write_Str,f
  3394     0E00                     u1110:
  3395     0E00  1283               	bcf	3,5	;RP0=0, select bank0
  3396     0E01  1303               	bcf	3,6	;RP1=0, select bank0
  3397     0E02  0854               	movf	??_Lcd_Write_Str,w
  3398     0E03  00D6               	movwf	??_Lcd_Write_Str+2
  3399     0E04  0856               	movf	??_Lcd_Write_Str+2,w
  3400     0E05  00FF               	movwf	btemp+1
  3401     0E06  0855               	movf	??_Lcd_Write_Str+1,w
  3402     0E07  0084               	movwf	4
  3403     0E08  120A  158A  2000  120A  158A  	fcall	stringtab
  3404     0E0D  3A00               	xorlw	0
  3405     0E0E  1D03               	skipz
  3406     0E0F  2E11               	goto	u1121
  3407     0E10  2E12               	goto	u1120
  3408     0E11                     u1121:
  3409     0E11  2DD2               	goto	l2466
  3410     0E12                     u1120:
  3411     0E12                     l234:
  3412     0E12  0008               	return
  3413     0E13                     __end_of_Lcd_Write_Str:
  3414                           
  3415                           	psect	text6
  3416     0C9B                     __ptext6:	
  3417 ;; *************** function _Lcd_Write *****************
  3418 ;; Defined at:
  3419 ;;		line 53 in file "C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/Digital 2/ARC
      +HIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;  a               1    wreg     unsigned char 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;  a               1    5[COMMON] unsigned char 
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      void 
  3426 ;; Registers used:
  3427 ;;		wreg
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3433 ;;      Params:         0       0       0       0       0
  3434 ;;      Locals:         1       0       0       0       0
  3435 ;;      Temps:          1       0       0       0       0
  3436 ;;      Totals:         2       0       0       0       0
  3437 ;;Total ram usage:        2 bytes
  3438 ;; Hardware stack levels used: 1
  3439 ;; Hardware stack levels required when called: 1
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_Lcd_Write_Str
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447     0C9B                     _Lcd_Write:	
  3448                           ;psect for function _Lcd_Write
  3449                           
  3450                           
  3451                           ;incstack = 0
  3452                           ; Regs used in _Lcd_Write: [wreg]
  3453                           ;Lcd_Write@a stored from wreg
  3454     0C9B  00F5               	movwf	Lcd_Write@a
  3455     0C9C                     l2456:
  3456                           
  3457                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 54:     RC6 = 1;
  3458     0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  3459     0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  3460     0C9E  1707               	bsf	7,6	;volatile
  3461     0C9F                     l2458:
  3462                           
  3463                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 55:     PORTD = a;
  3464     0C9F  0875               	movf	Lcd_Write@a,w
  3465     0CA0  0088               	movwf	8	;volatile
  3466     0CA1                     l2460:
  3467                           
  3468                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 56:     RC7 = 1;
  3469     0CA1  1787               	bsf	7,7	;volatile
  3470                           
  3471                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 57:     _delay((unsigned long)(
      +                          (40)*(8000000/4000000.0)));
  3472     0CA2  301A               	movlw	26
  3473     0CA3  00F4               	movwf	??_Lcd_Write
  3474     0CA4                     u1547:
  3475     0CA4  0BF4               	decfsz	??_Lcd_Write,f
  3476     0CA5  2CA4               	goto	u1547
  3477     0CA6  0000               	nop
  3478     0CA7                     l2462:
  3479                           
  3480                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 58:     RC7 = 0;
  3481     0CA7  1283               	bcf	3,5	;RP0=0, select bank0
  3482     0CA8  1303               	bcf	3,6	;RP1=0, select bank0
  3483     0CA9  1387               	bcf	7,7	;volatile
  3484     0CAA                     l228:
  3485     0CAA  0008               	return
  3486     0CAB                     __end_of_Lcd_Write:
  3487                           
  3488                           	psect	text7
  3489     0D0E                     __ptext7:	
  3490 ;; *************** function _Lcd_Set *****************
  3491 ;; Defined at:
  3492 ;;		line 21 in file "C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/Digital 2/ARC
      +HIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  a               1    wreg     unsigned char 
  3495 ;;  b               1    7[COMMON] unsigned char 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  a               1    8[COMMON] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1    wreg      void 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0, pclath, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3507 ;;      Params:         1       0       0       0       0
  3508 ;;      Locals:         1       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0
  3510 ;;      Totals:         2       0       0       0       0
  3511 ;;Total ram usage:        2 bytes
  3512 ;; Hardware stack levels used: 1
  3513 ;; Hardware stack levels required when called: 2
  3514 ;; This function calls:
  3515 ;;		_Lcd_Cmd
  3516 ;; This function is called by:
  3517 ;;		_main
  3518 ;;		_setup
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522     0D0E                     _Lcd_Set:	
  3523                           ;psect for function _Lcd_Set
  3524                           
  3525                           
  3526                           ;incstack = 0
  3527                           ; Regs used in _Lcd_Set: [wreg+status,2+status,0+pclath+cstack]
  3528                           ;Lcd_Set@a stored from wreg
  3529     0D0E  00F8               	movwf	Lcd_Set@a
  3530     0D0F                     l1694:
  3531                           
  3532                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 22:     if (a == 1){
  3533     0D0F  0378               	decf	Lcd_Set@a,w
  3534     0D10  1D03               	btfss	3,2
  3535     0D11  2D13               	goto	u561
  3536     0D12  2D14               	goto	u560
  3537     0D13                     u561:
  3538     0D13  2D1D               	goto	l1698
  3539     0D14                     u560:
  3540     0D14                     l1696:
  3541                           
  3542                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 23:         Lcd_Cmd((b & 0x0F)|
      +                          0x80);
  3543     0D14  0877               	movf	Lcd_Set@b,w
  3544     0D15  390F               	andlw	15
  3545     0D16  3880               	iorlw	128
  3546     0D17  120A  158A  24AB  120A  158A  	fcall	_Lcd_Cmd
  3547                           
  3548                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 24:     }
  3549     0D1C  2D2B               	goto	l222
  3550     0D1D                     l1698:
  3551     0D1D  3002               	movlw	2
  3552     0D1E  0678               	xorwf	Lcd_Set@a,w
  3553     0D1F  1D03               	btfss	3,2
  3554     0D20  2D22               	goto	u571
  3555     0D21  2D23               	goto	u570
  3556     0D22                     u571:
  3557     0D22  2D2B               	goto	l222
  3558     0D23                     u570:
  3559     0D23                     l1700:
  3560                           
  3561                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 26:         Lcd_Cmd((b & 0x0F)|
      +                          0xC0);
  3562     0D23  0877               	movf	Lcd_Set@b,w
  3563     0D24  390F               	andlw	15
  3564     0D25  38C0               	iorlw	192
  3565     0D26  120A  158A  24AB  120A  158A  	fcall	_Lcd_Cmd
  3566     0D2B                     l222:
  3567     0D2B  0008               	return
  3568     0D2C                     __end_of_Lcd_Set:
  3569                           
  3570                           	psect	text8
  3571     0E59                     __ptext8:	
  3572 ;; *************** function _Lcd_Init *****************
  3573 ;; Defined at:
  3574 ;;		line 30 in file "C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/Digital 2/ARC
      +HIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2, status,0, pclath, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3588 ;;      Params:         0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0
  3590 ;;      Temps:          2       0       0       0       0
  3591 ;;      Totals:         2       0       0       0       0
  3592 ;;Total ram usage:        2 bytes
  3593 ;; Hardware stack levels used: 1
  3594 ;; Hardware stack levels required when called: 2
  3595 ;; This function calls:
  3596 ;;		_Lcd_Cmd
  3597 ;; This function is called by:
  3598 ;;		_setup
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602     0E59                     _Lcd_Init:	
  3603                           ;psect for function _Lcd_Init
  3604                           
  3605     0E59                     l1748:	
  3606                           ;incstack = 0
  3607                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3608                           
  3609                           
  3610                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 31:     PORTD = (0x00);
  3611     0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3612     0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  3613     0E5B  0188               	clrf	8	;volatile
  3614     0E5C                     l1750:
  3615                           
  3616                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 32:     _delay((unsigned long)(
      +                          (15)*(8000000/4000.0)));
  3617     0E5C  3027               	movlw	39
  3618     0E5D  00F8               	movwf	??_Lcd_Init+1
  3619     0E5E  30F5               	movlw	245
  3620     0E5F  00F7               	movwf	??_Lcd_Init
  3621     0E60                     u1557:
  3622     0E60  0BF7               	decfsz	??_Lcd_Init,f
  3623     0E61  2E60               	goto	u1557
  3624     0E62  0BF8               	decfsz	??_Lcd_Init+1,f
  3625     0E63  2E60               	goto	u1557
  3626     0E64                     l1752:
  3627                           
  3628                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 34:     Lcd_Cmd(0x30);
  3629     0E64  3030               	movlw	48
  3630     0E65  120A  158A  24AB  120A  158A  	fcall	_Lcd_Cmd
  3631     0E6A                     l1754:
  3632                           
  3633                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 35:     _delay((unsigned long)(
      +                          (4)*(8000000/4000.0)));
  3634     0E6A  300B               	movlw	11
  3635     0E6B  00F8               	movwf	??_Lcd_Init+1
  3636     0E6C  3062               	movlw	98
  3637     0E6D  00F7               	movwf	??_Lcd_Init
  3638     0E6E                     u1567:
  3639     0E6E  0BF7               	decfsz	??_Lcd_Init,f
  3640     0E6F  2E6E               	goto	u1567
  3641     0E70  0BF8               	decfsz	??_Lcd_Init+1,f
  3642     0E71  2E6E               	goto	u1567
  3643     0E72  0000               	nop
  3644     0E73                     l1756:
  3645                           
  3646                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 36:     Lcd_Cmd(0x30);
  3647     0E73  3030               	movlw	48
  3648     0E74  120A  158A  24AB  120A  158A  	fcall	_Lcd_Cmd
  3649     0E79                     l1758:
  3650                           
  3651                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 37:     _delay((unsigned long)(
      +                          (100)*(8000000/4000000.0)));
  3652     0E79  3042               	movlw	66
  3653     0E7A  00F7               	movwf	??_Lcd_Init
  3654     0E7B                     u1577:
  3655     0E7B  0BF7               	decfsz	??_Lcd_Init,f
  3656     0E7C  2E7B               	goto	u1577
  3657     0E7D  0000               	nop
  3658     0E7E                     l1760:
  3659                           
  3660                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 38:     Lcd_Cmd(0x30);
  3661     0E7E  3030               	movlw	48
  3662     0E7F  120A  158A  24AB  120A  158A  	fcall	_Lcd_Cmd
  3663     0E84                     l1762:
  3664                           
  3665                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 40:     Lcd_Cmd(0x38);
  3666     0E84  3038               	movlw	56
  3667     0E85  120A  158A  24AB  120A  158A  	fcall	_Lcd_Cmd
  3668     0E8A                     l1764:
  3669                           
  3670                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 42:     Lcd_Cmd(0x00);
  3671     0E8A  3000               	movlw	0
  3672     0E8B  120A  158A  24AB  120A  158A  	fcall	_Lcd_Cmd
  3673     0E90                     l1766:
  3674                           
  3675                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 44:     Lcd_Cmd(0x0C);
  3676     0E90  300C               	movlw	12
  3677     0E91  120A  158A  24AB  120A  158A  	fcall	_Lcd_Cmd
  3678     0E96                     l1768:
  3679                           
  3680                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 46:     Lcd_Cmd(0x00);
  3681     0E96  3000               	movlw	0
  3682     0E97  120A  158A  24AB  120A  158A  	fcall	_Lcd_Cmd
  3683     0E9C                     l1770:
  3684                           
  3685                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 48:     Lcd_Cmd(0x06);
  3686     0E9C  3006               	movlw	6
  3687     0E9D  120A  158A  24AB  120A  158A  	fcall	_Lcd_Cmd
  3688     0EA2                     l225:
  3689     0EA2  0008               	return
  3690     0EA3                     __end_of_Lcd_Init:
  3691                           
  3692                           	psect	text9
  3693     0C72                     __ptext9:	
  3694 ;; *************** function _Lcd_Clear *****************
  3695 ;; Defined at:
  3696 ;;		line 16 in file "C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/Digital 2/ARC
      +HIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0, pclath, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3710 ;;      Params:         0       0       0       0       0
  3711 ;;      Locals:         0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0
  3713 ;;      Totals:         0       0       0       0       0
  3714 ;;Total ram usage:        0 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; Hardware stack levels required when called: 2
  3717 ;; This function calls:
  3718 ;;		_Lcd_Cmd
  3719 ;; This function is called by:
  3720 ;;		_setup
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724     0C72                     _Lcd_Clear:	
  3725                           ;psect for function _Lcd_Clear
  3726                           
  3727     0C72                     l1772:	
  3728                           ;incstack = 0
  3729                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3730                           
  3731                           
  3732                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 17:     Lcd_Cmd(0);
  3733     0C72  3000               	movlw	0
  3734     0C73  120A  158A  24AB  120A  158A  	fcall	_Lcd_Cmd
  3735                           
  3736                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 18:     Lcd_Cmd(1);
  3737     0C78  3001               	movlw	1
  3738     0C79  120A  158A  24AB  120A  158A  	fcall	_Lcd_Cmd
  3739     0C7E                     l216:
  3740     0C7E  0008               	return
  3741     0C7F                     __end_of_Lcd_Clear:
  3742                           
  3743                           	psect	text10
  3744     0CAB                     __ptext10:	
  3745 ;; *************** function _Lcd_Cmd *****************
  3746 ;; Defined at:
  3747 ;;		line 8 in file "C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/Digital 2/ARCH
      +IVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  a               1    wreg     unsigned char 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  a               1    6[COMMON] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3761 ;;      Params:         0       0       0       0       0
  3762 ;;      Locals:         1       0       0       0       0
  3763 ;;      Temps:          2       0       0       0       0
  3764 ;;      Totals:         3       0       0       0       0
  3765 ;;Total ram usage:        3 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 1
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_Lcd_Clear
  3772 ;;		_Lcd_Set
  3773 ;;		_Lcd_Init
  3774 ;;		_Lcd_ShiftR
  3775 ;;		_Lcd_ShiftL
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779     0CAB                     _Lcd_Cmd:	
  3780                           ;psect for function _Lcd_Cmd
  3781                           
  3782                           
  3783                           ;incstack = 0
  3784                           ; Regs used in _Lcd_Cmd: [wreg]
  3785                           ;Lcd_Cmd@a stored from wreg
  3786     0CAB  00F6               	movwf	Lcd_Cmd@a
  3787     0CAC                     l1678:
  3788                           
  3789                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 9:     RC6 = 0;
  3790     0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  3791     0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  3792     0CAE  1307               	bcf	7,6	;volatile
  3793     0CAF                     l1680:
  3794                           
  3795                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 10:     PORTD = a;
  3796     0CAF  0876               	movf	Lcd_Cmd@a,w
  3797     0CB0  0088               	movwf	8	;volatile
  3798     0CB1                     l1682:
  3799                           
  3800                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 11:     RC7 = 1;
  3801     0CB1  1787               	bsf	7,7	;volatile
  3802                           
  3803                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 12:     _delay((unsigned long)(
      +                          (4)*(8000000/4000.0)));
  3804     0CB2  300B               	movlw	11
  3805     0CB3  00F5               	movwf	??_Lcd_Cmd+1
  3806     0CB4  3062               	movlw	98
  3807     0CB5  00F4               	movwf	??_Lcd_Cmd
  3808     0CB6                     u1587:
  3809     0CB6  0BF4               	decfsz	??_Lcd_Cmd,f
  3810     0CB7  2CB6               	goto	u1587
  3811     0CB8  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3812     0CB9  2CB6               	goto	u1587
  3813     0CBA  0000               	nop
  3814     0CBB                     l1684:
  3815                           
  3816                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/LCD.c: 13:     RC7 = 0;
  3817     0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  3818     0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  3819     0CBD  1387               	bcf	7,7	;volatile
  3820     0CBE                     l213:
  3821     0CBE  0008               	return
  3822     0CBF                     __end_of_Lcd_Cmd:
  3823                           
  3824                           	psect	text11
  3825     0C8D                     __ptext11:	
  3826 ;; *************** function _I2C_Master_Init *****************
  3827 ;; Defined at:
  3828 ;;		line 5 in file "I2C.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  c               4    4[COMMON] const unsigned long 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3842 ;;      Params:         4       0       0       0       0
  3843 ;;      Locals:         0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0
  3845 ;;      Totals:         4       0       0       0       0
  3846 ;;Total ram usage:        4 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 1
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_setup
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856     0C8D                     _I2C_Master_Init:	
  3857                           ;psect for function _I2C_Master_Init
  3858                           
  3859     0C8D                     l1736:	
  3860                           ;incstack = 0
  3861                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  3862                           
  3863                           
  3864                           ;I2C.c: 5: void I2C_Master_Init(const unsigned long c);I2C.c: 6: {;I2C.c: 7:     SSPCON 
      +                          = 0x28;
  3865     0C8D  3028               	movlw	40
  3866     0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  3867     0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  3868     0C90  0094               	movwf	20	;volatile
  3869     0C91                     l1738:
  3870                           
  3871                           ;I2C.c: 8:     SSPCON2 = 0;
  3872     0C91  1683               	bsf	3,5	;RP0=1, select bank1
  3873     0C92  1303               	bcf	3,6	;RP1=0, select bank1
  3874     0C93  0191               	clrf	17	;volatile
  3875     0C94                     l1740:
  3876                           
  3877                           ;I2C.c: 9:     SSPADD = 119;
  3878     0C94  3077               	movlw	119
  3879     0C95  0093               	movwf	19	;volatile
  3880     0C96                     l1742:
  3881                           
  3882                           ;I2C.c: 10:     SSPSTAT = 0x80;
  3883     0C96  3080               	movlw	128
  3884     0C97  0094               	movwf	20	;volatile
  3885     0C98                     l1744:
  3886                           
  3887                           ;I2C.c: 11:     TRISCbits.TRISC3 = 1;
  3888     0C98  1587               	bsf	7,3	;volatile
  3889     0C99                     l1746:
  3890                           
  3891                           ;I2C.c: 12:     TRISCbits.TRISC4 = 1;
  3892     0C99  1607               	bsf	7,4	;volatile
  3893     0C9A                     l167:
  3894     0C9A  0008               	return
  3895     0C9B                     __end_of_I2C_Master_Init:
  3896                           
  3897                           	psect	text12
  3898     0D2C                     __ptext12:	
  3899 ;; *************** function _ADC_CONF *****************
  3900 ;; Defined at:
  3901 ;;		line 8 in file "C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/Digital 2/ARCH
      +IVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  frec            2    4[COMMON] int 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3915 ;;      Params:         2       0       0       0       0
  3916 ;;      Locals:         0       0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0
  3918 ;;      Totals:         2       0       0       0       0
  3919 ;;Total ram usage:        2 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: 1
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_setup
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929     0D2C                     _ADC_CONF:	
  3930                           ;psect for function _ADC_CONF
  3931                           
  3932     0D2C                     l1710:	
  3933                           ;incstack = 0
  3934                           ; Regs used in _ADC_CONF: [wreg-fsr0h+status,2+status,0]
  3935                           
  3936                           
  3937                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 10:     ADCON0bits.ADON = 1;
  3938     0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  3939     0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  3940     0D2E  141F               	bsf	31,0	;volatile
  3941     0D2F                     l1712:
  3942                           
  3943                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 12:     ADCON0bits.CHS = 0b0101
      +                          ;
  3944     0D2F  081F               	movf	31,w	;volatile
  3945     0D30  39C3               	andlw	-61
  3946     0D31  3814               	iorlw	20
  3947     0D32  009F               	movwf	31	;volatile
  3948     0D33                     l1714:
  3949                           
  3950                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 14:     ADCON1bits.ADFM = 0;
  3951     0D33  1683               	bsf	3,5	;RP0=1, select bank1
  3952     0D34  1303               	bcf	3,6	;RP1=0, select bank1
  3953     0D35  139F               	bcf	31,7	;volatile
  3954     0D36                     l1716:
  3955                           
  3956                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 15:     ADCON1bits.VCFG0 = 0;
  3957     0D36  121F               	bcf	31,4	;volatile
  3958     0D37                     l1718:
  3959                           
  3960                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 16:     ADCON1bits.VCFG1 = 0;
  3961     0D37  129F               	bcf	31,5	;volatile
  3962     0D38                     l1720:
  3963                           
  3964                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 18:     ADCON0bits.GO = 0;
  3965     0D38  1283               	bcf	3,5	;RP0=0, select bank0
  3966     0D39  1303               	bcf	3,6	;RP1=0, select bank0
  3967     0D3A  109F               	bcf	31,1	;volatile
  3968                           
  3969                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 21:     switch(frec){
  3970     0D3B  2D49               	goto	l1730
  3971     0D3C                     l1722:
  3972                           
  3973                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 23:             ADCON0bits.ADCS
      +                           = 0B00;
  3974     0D3C  303F               	movlw	-193
  3975     0D3D  059F               	andwf	31,f	;volatile
  3976                           
  3977                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 24:             break;
  3978     0D3E  2D59               	goto	l254
  3979     0D3F                     l1724:
  3980                           
  3981                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 26:             ADCON0bits.ADCS
      +                           = 0B01;
  3982     0D3F  081F               	movf	31,w	;volatile
  3983     0D40  393F               	andlw	-193
  3984     0D41  3840               	iorlw	64
  3985     0D42  009F               	movwf	31	;volatile
  3986                           
  3987                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 27:             break;
  3988     0D43  2D59               	goto	l254
  3989     0D44                     l1726:
  3990                           
  3991                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 29:             ADCON0bits.ADCS
      +                           = 0B10;
  3992     0D44  081F               	movf	31,w	;volatile
  3993     0D45  393F               	andlw	-193
  3994     0D46  3880               	iorlw	128
  3995     0D47  009F               	movwf	31	;volatile
  3996                           
  3997                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 30:             break;
  3998     0D48  2D59               	goto	l254
  3999     0D49                     l1730:
  4000                           
  4001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4002                           ; Switch size 1, requested type "simple"
  4003                           ; Number of cases is 1, Range of values is 0 to 0
  4004                           ; switch strategies available:
  4005                           ; Name         Instructions Cycles
  4006                           ; simple_byte            4     3 (average)
  4007                           ; direct_byte           11     8 (fixed)
  4008                           ; jumptable            260     6 (fixed)
  4009                           ;	Chosen strategy is simple_byte
  4010     0D49  0875               	movf	ADC_CONF@frec+1,w
  4011     0D4A  3A00               	xorlw	0	; case 0
  4012     0D4B  1903               	skipnz
  4013     0D4C  2D4E               	goto	l3060
  4014     0D4D  2D59               	goto	l254
  4015     0D4E                     l3060:
  4016                           
  4017                           ; Switch size 1, requested type "simple"
  4018                           ; Number of cases is 3, Range of values is 1 to 8
  4019                           ; switch strategies available:
  4020                           ; Name         Instructions Cycles
  4021                           ; simple_byte           10     6 (average)
  4022                           ; direct_byte           35    11 (fixed)
  4023                           ; jumptable            263     9 (fixed)
  4024                           ;	Chosen strategy is simple_byte
  4025     0D4E  0874               	movf	ADC_CONF@frec,w
  4026     0D4F  3A01               	xorlw	1	; case 1
  4027     0D50  1903               	skipnz
  4028     0D51  2D3C               	goto	l1722
  4029     0D52  3A05               	xorlw	5	; case 4
  4030     0D53  1903               	skipnz
  4031     0D54  2D3F               	goto	l1724
  4032     0D55  3A0C               	xorlw	12	; case 8
  4033     0D56  1903               	skipnz
  4034     0D57  2D44               	goto	l1726
  4035     0D58  2D59               	goto	l254
  4036     0D59                     l254:
  4037     0D59  0008               	return
  4038     0D5A                     __end_of_ADC_CONF:
  4039                           
  4040                           	psect	text13
  4041     0C36                     __ptext13:	
  4042 ;; *************** function _I2C_Master_Write *****************
  4043 ;; Defined at:
  4044 ;;		line 57 in file "I2C.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  d               2   19[BANK0 ] unsigned int 
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;		None
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  1    wreg      void 
  4051 ;; Registers used:
  4052 ;;		wreg, status,2, status,0, pclath, cstack
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4058 ;;      Params:         0       2       0       0       0
  4059 ;;      Locals:         0       0       0       0       0
  4060 ;;      Temps:          0       0       0       0       0
  4061 ;;      Totals:         0       2       0       0       0
  4062 ;;Total ram usage:        2 bytes
  4063 ;; Hardware stack levels used: 1
  4064 ;; Hardware stack levels required when called: 2
  4065 ;; This function calls:
  4066 ;;		_I2C_Master_Wait
  4067 ;; This function is called by:
  4068 ;;		_main
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072     0C36                     _I2C_Master_Write:	
  4073                           ;psect for function _I2C_Master_Write
  4074                           
  4075     0C36                     l2602:	
  4076                           ;incstack = 0
  4077                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4078                           
  4079                           
  4080                           ;I2C.c: 57: void I2C_Master_Write(unsigned d);I2C.c: 58: {;I2C.c: 59:     I2C_Master_Wai
      +                          t();
  4081     0C36  120A  158A  2465  120A  158A  	fcall	_I2C_Master_Wait
  4082     0C3B                     l2604:
  4083                           
  4084                           ;I2C.c: 60:     SSPBUF = d;
  4085     0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  4086     0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  4087     0C3D  0867               	movf	I2C_Master_Write@d,w
  4088     0C3E  0093               	movwf	19	;volatile
  4089     0C3F                     l2606:
  4090                           
  4091                           ;I2C.c: 61:     PIR1bits.SSPIF = 0;
  4092     0C3F  118C               	bcf	12,3	;volatile
  4093     0C40                     l185:
  4094     0C40  0008               	return
  4095     0C41                     __end_of_I2C_Master_Write:
  4096                           
  4097                           	psect	text14
  4098     0C59                     __ptext14:	
  4099 ;; *************** function _I2C_Master_Stop *****************
  4100 ;; Defined at:
  4101 ;;		line 46 in file "I2C.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;		None
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;		None
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      void 
  4108 ;; Registers used:
  4109 ;;		wreg, status,2, status,0, pclath, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4115 ;;      Params:         0       0       0       0       0
  4116 ;;      Locals:         0       0       0       0       0
  4117 ;;      Temps:          0       0       0       0       0
  4118 ;;      Totals:         0       0       0       0       0
  4119 ;;Total ram usage:        0 bytes
  4120 ;; Hardware stack levels used: 1
  4121 ;; Hardware stack levels required when called: 2
  4122 ;; This function calls:
  4123 ;;		_I2C_Master_Wait
  4124 ;; This function is called by:
  4125 ;;		_main
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129     0C59                     _I2C_Master_Stop:	
  4130                           ;psect for function _I2C_Master_Stop
  4131                           
  4132     0C59                     l2612:	
  4133                           ;incstack = 0
  4134                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4135                           
  4136                           
  4137                           ;I2C.c: 48:     I2C_Master_Wait();
  4138     0C59  120A  158A  2465  120A  158A  	fcall	_I2C_Master_Wait
  4139     0C5E                     l2614:
  4140                           
  4141                           ;I2C.c: 49:     SSPCON2bits.PEN = 1;
  4142     0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  4143     0C5F  1303               	bcf	3,6	;RP1=0, select bank1
  4144     0C60  1511               	bsf	17,2	;volatile
  4145     0C61                     l2616:
  4146                           
  4147                           ;I2C.c: 50:     PIR1bits.SSPIF = 0;
  4148     0C61  1283               	bcf	3,5	;RP0=0, select bank0
  4149     0C62  1303               	bcf	3,6	;RP1=0, select bank0
  4150     0C63  118C               	bcf	12,3	;volatile
  4151     0C64                     l182:
  4152     0C64  0008               	return
  4153     0C65                     __end_of_I2C_Master_Stop:
  4154                           
  4155                           	psect	text15
  4156     0C4D                     __ptext15:	
  4157 ;; *************** function _I2C_Master_Start *****************
  4158 ;; Defined at:
  4159 ;;		line 28 in file "I2C.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0, pclath, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4173 ;;      Params:         0       0       0       0       0
  4174 ;;      Locals:         0       0       0       0       0
  4175 ;;      Temps:          0       0       0       0       0
  4176 ;;      Totals:         0       0       0       0       0
  4177 ;;Total ram usage:        0 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 2
  4180 ;; This function calls:
  4181 ;;		_I2C_Master_Wait
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187     0C4D                     _I2C_Master_Start:	
  4188                           ;psect for function _I2C_Master_Start
  4189                           
  4190     0C4D                     l2596:	
  4191                           ;incstack = 0
  4192                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4193                           
  4194                           
  4195                           ;I2C.c: 30:     I2C_Master_Wait();
  4196     0C4D  120A  158A  2465  120A  158A  	fcall	_I2C_Master_Wait
  4197     0C52                     l2598:
  4198                           
  4199                           ;I2C.c: 31:     SSPCON2bits.SEN = 1;
  4200     0C52  1683               	bsf	3,5	;RP0=1, select bank1
  4201     0C53  1303               	bcf	3,6	;RP1=0, select bank1
  4202     0C54  1411               	bsf	17,0	;volatile
  4203     0C55                     l2600:
  4204                           
  4205                           ;I2C.c: 32:     PIR1bits.SSPIF = 0;
  4206     0C55  1283               	bcf	3,5	;RP0=0, select bank0
  4207     0C56  1303               	bcf	3,6	;RP1=0, select bank0
  4208     0C57  118C               	bcf	12,3	;volatile
  4209     0C58                     l176:
  4210     0C58  0008               	return
  4211     0C59                     __end_of_I2C_Master_Start:
  4212                           
  4213                           	psect	text16
  4214     0C41                     __ptext16:	
  4215 ;; *************** function _I2C_Master_RepeatedStart *****************
  4216 ;; Defined at:
  4217 ;;		line 37 in file "I2C.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4231 ;;      Params:         0       0       0       0       0
  4232 ;;      Locals:         0       0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0
  4234 ;;      Totals:         0       0       0       0       0
  4235 ;;Total ram usage:        0 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 2
  4238 ;; This function calls:
  4239 ;;		_I2C_Master_Wait
  4240 ;; This function is called by:
  4241 ;;		_main
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245     0C41                     _I2C_Master_RepeatedStart:	
  4246                           ;psect for function _I2C_Master_RepeatedStart
  4247                           
  4248     0C41                     l2618:	
  4249                           ;incstack = 0
  4250                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4251                           
  4252                           
  4253                           ;I2C.c: 39:     I2C_Master_Wait();
  4254     0C41  120A  158A  2465  120A  158A  	fcall	_I2C_Master_Wait
  4255     0C46                     l2620:
  4256                           
  4257                           ;I2C.c: 40:     SSPCON2bits.RSEN = 1;
  4258     0C46  1683               	bsf	3,5	;RP0=1, select bank1
  4259     0C47  1303               	bcf	3,6	;RP1=0, select bank1
  4260     0C48  1491               	bsf	17,1	;volatile
  4261     0C49                     l2622:
  4262                           
  4263                           ;I2C.c: 41:     PIR1bits.SSPIF = 0;
  4264     0C49  1283               	bcf	3,5	;RP0=0, select bank0
  4265     0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  4266     0C4B  118C               	bcf	12,3	;volatile
  4267     0C4C                     l179:
  4268     0C4C  0008               	return
  4269     0C4D                     __end_of_I2C_Master_RepeatedStart:
  4270                           
  4271                           	psect	text17
  4272     07CB                     __ptext17:	
  4273 ;; *************** function _I2C_Master_Read *****************
  4274 ;; Defined at:
  4275 ;;		line 68 in file "I2C.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  a               2    4[COMMON] unsigned short 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  temp            2    0[BANK0 ] unsigned short 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  2    4[COMMON] unsigned short 
  4282 ;; Registers used:
  4283 ;;		wreg, status,2, status,0, pclath, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4289 ;;      Params:         2       0       0       0       0
  4290 ;;      Locals:         0       2       0       0       0
  4291 ;;      Temps:          2       0       0       0       0
  4292 ;;      Totals:         4       2       0       0       0
  4293 ;;Total ram usage:        6 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 2
  4296 ;; This function calls:
  4297 ;;		_I2C_Master_Wait
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303     07CB                     _I2C_Master_Read:	
  4304                           ;psect for function _I2C_Master_Read
  4305                           
  4306     07CB                     l2624:	
  4307                           ;incstack = 0
  4308                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4309                           
  4310                           
  4311                           ;I2C.c: 68: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 69: {;I2C.c: 70:    
      +                           unsigned short temp;;I2C.c: 71:     I2C_Master_Wait();
  4312     07CB  120A  158A  2465  120A  118A  	fcall	_I2C_Master_Wait
  4313     07D0                     l2626:
  4314                           
  4315                           ;I2C.c: 72:     SSPCON2bits.RCEN = 1;
  4316     07D0  1683               	bsf	3,5	;RP0=1, select bank1
  4317     07D1  1303               	bcf	3,6	;RP1=0, select bank1
  4318     07D2  1591               	bsf	17,3	;volatile
  4319                           
  4320                           ;I2C.c: 73:     I2C_Master_Wait();
  4321     07D3  120A  158A  2465  120A  118A  	fcall	_I2C_Master_Wait
  4322     07D8                     l2628:
  4323                           
  4324                           ;I2C.c: 74:     temp = SSPBUF;
  4325     07D8  1283               	bcf	3,5	;RP0=0, select bank0
  4326     07D9  1303               	bcf	3,6	;RP1=0, select bank0
  4327     07DA  0813               	movf	19,w	;volatile
  4328     07DB  00F6               	movwf	??_I2C_Master_Read
  4329     07DC  01F7               	clrf	??_I2C_Master_Read+1
  4330     07DD  0876               	movf	??_I2C_Master_Read,w
  4331     07DE  00D4               	movwf	I2C_Master_Read@temp
  4332     07DF  0877               	movf	??_I2C_Master_Read+1,w
  4333     07E0  00D5               	movwf	I2C_Master_Read@temp+1
  4334     07E1                     l2630:
  4335                           
  4336                           ;I2C.c: 75:     I2C_Master_Wait();
  4337     07E1  120A  158A  2465  120A  118A  	fcall	_I2C_Master_Wait
  4338     07E6                     l2632:
  4339                           
  4340                           ;I2C.c: 76:     if(a == 1){
  4341     07E6  0374               	decf	I2C_Master_Read@a,w
  4342     07E7  0475               	iorwf	I2C_Master_Read@a+1,w
  4343     07E8  1D03               	btfss	3,2
  4344     07E9  2FEB               	goto	u1321
  4345     07EA  2FEC               	goto	u1320
  4346     07EB                     u1321:
  4347     07EB  2FF0               	goto	l188
  4348     07EC                     u1320:
  4349     07EC                     l2634:
  4350                           
  4351                           ;I2C.c: 77:         SSPCON2bits.ACKDT = 0;
  4352     07EC  1683               	bsf	3,5	;RP0=1, select bank1
  4353     07ED  1303               	bcf	3,6	;RP1=0, select bank1
  4354     07EE  1291               	bcf	17,5	;volatile
  4355                           
  4356                           ;I2C.c: 78:     }else{
  4357     07EF  2FF3               	goto	l189
  4358     07F0                     l188:
  4359                           
  4360                           ;I2C.c: 79:         SSPCON2bits.ACKDT = 1;
  4361     07F0  1683               	bsf	3,5	;RP0=1, select bank1
  4362     07F1  1303               	bcf	3,6	;RP1=0, select bank1
  4363     07F2  1691               	bsf	17,5	;volatile
  4364     07F3                     l189:	
  4365                           ;I2C.c: 80:     }
  4366                           
  4367                           
  4368                           ;I2C.c: 81:     SSPCON2bits.ACKEN = 1;
  4369     07F3  1611               	bsf	17,4	;volatile
  4370     07F4                     l2636:
  4371                           
  4372                           ;I2C.c: 82:     return temp;
  4373     07F4  1283               	bcf	3,5	;RP0=0, select bank0
  4374     07F5  1303               	bcf	3,6	;RP1=0, select bank0
  4375     07F6  0855               	movf	I2C_Master_Read@temp+1,w
  4376     07F7  00F5               	movwf	?_I2C_Master_Read+1
  4377     07F8  0854               	movf	I2C_Master_Read@temp,w
  4378     07F9  00F4               	movwf	?_I2C_Master_Read
  4379     07FA                     l190:
  4380     07FA  0008               	return
  4381     07FB                     __end_of_I2C_Master_Read:
  4382                           
  4383                           	psect	text18
  4384     0C65                     __ptext18:	
  4385 ;; *************** function _I2C_Master_Wait *****************
  4386 ;; Defined at:
  4387 ;;		line 21 in file "I2C.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;		None
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4401 ;;      Params:         0       0       0       0       0
  4402 ;;      Locals:         0       0       0       0       0
  4403 ;;      Temps:          0       0       0       0       0
  4404 ;;      Totals:         0       0       0       0       0
  4405 ;;Total ram usage:        0 bytes
  4406 ;; Hardware stack levels used: 1
  4407 ;; Hardware stack levels required when called: 1
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_I2C_Master_Start
  4412 ;;		_I2C_Master_RepeatedStart
  4413 ;;		_I2C_Master_Stop
  4414 ;;		_I2C_Master_Write
  4415 ;;		_I2C_Master_Read
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419     0C65                     _I2C_Master_Wait:	
  4420                           ;psect for function _I2C_Master_Wait
  4421                           
  4422     0C65                     l2472:	
  4423                           ;incstack = 0
  4424                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4425                           
  4426     0C65                     l170:	
  4427                           ;I2C.c: 23:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4428                           
  4429     0C65  1683               	bsf	3,5	;RP0=1, select bank1
  4430     0C66  1303               	bcf	3,6	;RP1=0, select bank1
  4431     0C67  1914               	btfsc	20,2	;volatile
  4432     0C68  2C6A               	goto	u1131
  4433     0C69  2C6B               	goto	u1130
  4434     0C6A                     u1131:
  4435     0C6A  2C65               	goto	l170
  4436     0C6B                     u1130:
  4437     0C6B                     l2474:
  4438     0C6B  0811               	movf	17,w	;volatile
  4439     0C6C  391F               	andlw	31
  4440     0C6D  1D03               	btfss	3,2
  4441     0C6E  2C70               	goto	u1141
  4442     0C6F  2C71               	goto	u1140
  4443     0C70                     u1141:
  4444     0C70  2C65               	goto	l170
  4445     0C71                     u1140:
  4446     0C71                     l173:
  4447     0C71  0008               	return
  4448     0C72                     __end_of_I2C_Master_Wait:
  4449                           
  4450                           	psect	text19
  4451     0F9E                     __ptext19:	
  4452 ;; *************** function _Division3 *****************
  4453 ;; Defined at:
  4454 ;;		line 57 in file "main.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  y               1    wreg     unsigned char 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  y               1   15[BANK0 ] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0, pclath, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4468 ;;      Params:         0       0       0       0       0
  4469 ;;      Locals:         0       3       0       0       0
  4470 ;;      Temps:          0       2       0       0       0
  4471 ;;      Totals:         0       5       0       0       0
  4472 ;;Total ram usage:        5 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; Hardware stack levels required when called: 2
  4475 ;; This function calls:
  4476 ;;		___awdiv
  4477 ;;		___awmod
  4478 ;; This function is called by:
  4479 ;;		_main
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483     0F9E                     _Division3:	
  4484                           ;psect for function _Division3
  4485                           
  4486                           
  4487                           ;incstack = 0
  4488                           ; Regs used in _Division3: [wreg+status,2+status,0+pclath+cstack]
  4489                           ;Division3@y stored from wreg
  4490     0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  4491     0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  4492     0FA0  00E3               	movwf	Division3@y
  4493     0FA1                     l2544:
  4494                           
  4495                           ;main.c: 58:     cen = (y / 100);
  4496     0FA1  3064               	movlw	100
  4497     0FA2  00D6               	movwf	___awdiv@divisor
  4498     0FA3  3000               	movlw	0
  4499     0FA4  00D7               	movwf	___awdiv@divisor+1
  4500     0FA5  0863               	movf	Division3@y,w
  4501     0FA6  00DF               	movwf	??_Division3
  4502     0FA7  01E0               	clrf	??_Division3+1
  4503     0FA8  085F               	movf	??_Division3,w
  4504     0FA9  00D8               	movwf	___awdiv@dividend
  4505     0FAA  0860               	movf	??_Division3+1,w
  4506     0FAB  00D9               	movwf	___awdiv@dividend+1
  4507     0FAC  120A  118A  2762  120A  158A  	fcall	___awdiv
  4508     0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  4509     0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  4510     0FB3  0856               	movf	?___awdiv,w
  4511     0FB4  00AE               	movwf	_cen
  4512                           
  4513                           ;main.c: 59:     dec = ((y % 100) / 10);
  4514     0FB5  300A               	movlw	10
  4515     0FB6  00D6               	movwf	___awdiv@divisor
  4516     0FB7  3000               	movlw	0
  4517     0FB8  00D7               	movwf	___awdiv@divisor+1
  4518     0FB9  0863               	movf	Division3@y,w
  4519     0FBA  00DF               	movwf	??_Division3
  4520     0FBB  01E0               	clrf	??_Division3+1
  4521     0FBC  085F               	movf	??_Division3,w
  4522     0FBD  00F6               	movwf	___awmod@dividend
  4523     0FBE  0860               	movf	??_Division3+1,w
  4524     0FBF  00F7               	movwf	___awmod@dividend+1
  4525     0FC0  3064               	movlw	100
  4526     0FC1  00F4               	movwf	___awmod@divisor
  4527     0FC2  3000               	movlw	0
  4528     0FC3  00F5               	movwf	___awmod@divisor+1
  4529     0FC4  120A  158A  2743  120A  158A  	fcall	___awmod
  4530     0FC9  0875               	movf	?___awmod+1,w
  4531     0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  4532     0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  4533     0FCC  00D9               	movwf	___awdiv@dividend+1
  4534     0FCD  0874               	movf	?___awmod,w
  4535     0FCE  00D8               	movwf	___awdiv@dividend
  4536     0FCF  120A  118A  2762  120A  158A  	fcall	___awdiv
  4537     0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  4538     0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  4539     0FD6  0856               	movf	?___awdiv,w
  4540     0FD7  00AF               	movwf	_dec
  4541                           
  4542                           ;main.c: 60:     uni = ((y % 100) % 10);
  4543     0FD8  0863               	movf	Division3@y,w
  4544     0FD9  00DF               	movwf	??_Division3
  4545     0FDA  01E0               	clrf	??_Division3+1
  4546     0FDB  085F               	movf	??_Division3,w
  4547     0FDC  00F6               	movwf	___awmod@dividend
  4548     0FDD  0860               	movf	??_Division3+1,w
  4549     0FDE  00F7               	movwf	___awmod@dividend+1
  4550     0FDF  3064               	movlw	100
  4551     0FE0  00F4               	movwf	___awmod@divisor
  4552     0FE1  3000               	movlw	0
  4553     0FE2  00F5               	movwf	___awmod@divisor+1
  4554     0FE3  120A  158A  2743  120A  158A  	fcall	___awmod
  4555     0FE8  0875               	movf	?___awmod+1,w
  4556     0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  4557     0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  4558     0FEB  00E2               	movwf	_Division3$1199+1
  4559     0FEC  0874               	movf	?___awmod,w
  4560     0FED  00E1               	movwf	_Division3$1199
  4561                           
  4562                           ;main.c: 60:     uni = ((y % 100) % 10);
  4563     0FEE  300A               	movlw	10
  4564     0FEF  00F4               	movwf	___awmod@divisor
  4565     0FF0  3000               	movlw	0
  4566     0FF1  00F5               	movwf	___awmod@divisor+1
  4567     0FF2  0862               	movf	_Division3$1199+1,w
  4568     0FF3  00F7               	movwf	___awmod@dividend+1
  4569     0FF4  0861               	movf	_Division3$1199,w
  4570     0FF5  00F6               	movwf	___awmod@dividend
  4571     0FF6  120A  158A  2743  120A  158A  	fcall	___awmod
  4572     0FFB  0874               	movf	?___awmod,w
  4573     0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  4574     0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  4575     0FFE  00B0               	movwf	_uni
  4576     0FFF                     l112:
  4577     0FFF  0008               	return
  4578     1000                     __end_of_Division3:
  4579                           
  4580                           	psect	text20
  4581     0EA3                     __ptext20:	
  4582 ;; *************** function _Division *****************
  4583 ;; Defined at:
  4584 ;;		line 51 in file "main.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  y               1    wreg     unsigned char 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  y               1   15[BANK0 ] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      void 
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0, pclath, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4598 ;;      Params:         0       0       0       0       0
  4599 ;;      Locals:         0       3       0       0       0
  4600 ;;      Temps:          0       2       0       0       0
  4601 ;;      Totals:         0       5       0       0       0
  4602 ;;Total ram usage:        5 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; Hardware stack levels required when called: 2
  4605 ;; This function calls:
  4606 ;;		___awdiv
  4607 ;;		___awmod
  4608 ;; This function is called by:
  4609 ;;		_main
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613     0EA3                     _Division:	
  4614                           ;psect for function _Division
  4615                           
  4616                           
  4617                           ;incstack = 0
  4618                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
  4619                           ;Division@y stored from wreg
  4620     0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  4621     0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  4622     0EA5  00E3               	movwf	Division@y
  4623     0EA6                     l2542:
  4624                           
  4625                           ;main.c: 52:     dec = ((y % 100) / 10);
  4626     0EA6  300A               	movlw	10
  4627     0EA7  00D6               	movwf	___awdiv@divisor
  4628     0EA8  3000               	movlw	0
  4629     0EA9  00D7               	movwf	___awdiv@divisor+1
  4630     0EAA  0863               	movf	Division@y,w
  4631     0EAB  00DF               	movwf	??_Division
  4632     0EAC  01E0               	clrf	??_Division+1
  4633     0EAD  085F               	movf	??_Division,w
  4634     0EAE  00F6               	movwf	___awmod@dividend
  4635     0EAF  0860               	movf	??_Division+1,w
  4636     0EB0  00F7               	movwf	___awmod@dividend+1
  4637     0EB1  3064               	movlw	100
  4638     0EB2  00F4               	movwf	___awmod@divisor
  4639     0EB3  3000               	movlw	0
  4640     0EB4  00F5               	movwf	___awmod@divisor+1
  4641     0EB5  120A  158A  2743  120A  158A  	fcall	___awmod
  4642     0EBA  0875               	movf	?___awmod+1,w
  4643     0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  4644     0EBC  1303               	bcf	3,6	;RP1=0, select bank0
  4645     0EBD  00D9               	movwf	___awdiv@dividend+1
  4646     0EBE  0874               	movf	?___awmod,w
  4647     0EBF  00D8               	movwf	___awdiv@dividend
  4648     0EC0  120A  118A  2762  120A  158A  	fcall	___awdiv
  4649     0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  4650     0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  4651     0EC7  0856               	movf	?___awdiv,w
  4652     0EC8  00AF               	movwf	_dec
  4653                           
  4654                           ;main.c: 53:     uni = ((y % 100) % 10);
  4655     0EC9  0863               	movf	Division@y,w
  4656     0ECA  00DF               	movwf	??_Division
  4657     0ECB  01E0               	clrf	??_Division+1
  4658     0ECC  085F               	movf	??_Division,w
  4659     0ECD  00F6               	movwf	___awmod@dividend
  4660     0ECE  0860               	movf	??_Division+1,w
  4661     0ECF  00F7               	movwf	___awmod@dividend+1
  4662     0ED0  3064               	movlw	100
  4663     0ED1  00F4               	movwf	___awmod@divisor
  4664     0ED2  3000               	movlw	0
  4665     0ED3  00F5               	movwf	___awmod@divisor+1
  4666     0ED4  120A  158A  2743  120A  158A  	fcall	___awmod
  4667     0ED9  0875               	movf	?___awmod+1,w
  4668     0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  4669     0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  4670     0EDC  00E2               	movwf	_Division$1198+1
  4671     0EDD  0874               	movf	?___awmod,w
  4672     0EDE  00E1               	movwf	_Division$1198
  4673                           
  4674                           ;main.c: 53:     uni = ((y % 100) % 10);
  4675     0EDF  300A               	movlw	10
  4676     0EE0  00F4               	movwf	___awmod@divisor
  4677     0EE1  3000               	movlw	0
  4678     0EE2  00F5               	movwf	___awmod@divisor+1
  4679     0EE3  0862               	movf	_Division$1198+1,w
  4680     0EE4  00F7               	movwf	___awmod@dividend+1
  4681     0EE5  0861               	movf	_Division$1198,w
  4682     0EE6  00F6               	movwf	___awmod@dividend
  4683     0EE7  120A  158A  2743  120A  158A  	fcall	___awmod
  4684     0EEC  0874               	movf	?___awmod,w
  4685     0EED  1283               	bcf	3,5	;RP0=0, select bank0
  4686     0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  4687     0EEF  00B0               	movwf	_uni
  4688     0EF0                     l101:
  4689     0EF0  0008               	return
  4690     0EF1                     __end_of_Division:
  4691                           
  4692                           	psect	text21
  4693     0D5A                     __ptext21:	
  4694 ;; *************** function _Dec_to_Bcd *****************
  4695 ;; Defined at:
  4696 ;;		line 310 in file "main.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  dec             1    wreg     unsigned char 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  dec             1   18[BANK0 ] unsigned char 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      unsigned char 
  4703 ;; Registers used:
  4704 ;;		wreg, status,2, status,0, pclath, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4710 ;;      Params:         0       0       0       0       0
  4711 ;;      Locals:         0       1       0       0       0
  4712 ;;      Temps:          0       7       0       0       0
  4713 ;;      Totals:         0       8       0       0       0
  4714 ;;Total ram usage:        8 bytes
  4715 ;; Hardware stack levels used: 1
  4716 ;; Hardware stack levels required when called: 2
  4717 ;; This function calls:
  4718 ;;		___awdiv
  4719 ;;		___awmod
  4720 ;; This function is called by:
  4721 ;;		_main
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725     0D5A                     _Dec_to_Bcd:	
  4726                           ;psect for function _Dec_to_Bcd
  4727                           
  4728                           
  4729                           ;incstack = 0
  4730                           ; Regs used in _Dec_to_Bcd: [wreg+status,2+status,0+pclath+cstack]
  4731                           ;Dec_to_Bcd@dec stored from wreg
  4732     0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  4733     0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  4734     0D5C  00E6               	movwf	Dec_to_Bcd@dec
  4735     0D5D                     l2608:
  4736                           
  4737                           ;main.c: 311:     return ((dec / 10) << 4) | (dec % 10);
  4738     0D5D  300A               	movlw	10
  4739     0D5E  00F4               	movwf	___awmod@divisor
  4740     0D5F  3000               	movlw	0
  4741     0D60  00F5               	movwf	___awmod@divisor+1
  4742     0D61  0866               	movf	Dec_to_Bcd@dec,w
  4743     0D62  00DF               	movwf	??_Dec_to_Bcd
  4744     0D63  01E0               	clrf	??_Dec_to_Bcd+1
  4745     0D64  085F               	movf	??_Dec_to_Bcd,w
  4746     0D65  00F6               	movwf	___awmod@dividend
  4747     0D66  0860               	movf	??_Dec_to_Bcd+1,w
  4748     0D67  00F7               	movwf	___awmod@dividend+1
  4749     0D68  120A  158A  2743  120A  158A  	fcall	___awmod
  4750     0D6D  0874               	movf	?___awmod,w
  4751     0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  4752     0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  4753     0D70  00E1               	movwf	??_Dec_to_Bcd+2
  4754     0D71  0875               	movf	?___awmod+1,w
  4755     0D72  00E2               	movwf	??_Dec_to_Bcd+3
  4756     0D73  300A               	movlw	10
  4757     0D74  00D6               	movwf	___awdiv@divisor
  4758     0D75  3000               	movlw	0
  4759     0D76  00D7               	movwf	___awdiv@divisor+1
  4760     0D77  0866               	movf	Dec_to_Bcd@dec,w
  4761     0D78  00E3               	movwf	??_Dec_to_Bcd+4
  4762     0D79  01E4               	clrf	??_Dec_to_Bcd+5
  4763     0D7A  0863               	movf	??_Dec_to_Bcd+4,w
  4764     0D7B  00D8               	movwf	___awdiv@dividend
  4765     0D7C  0864               	movf	??_Dec_to_Bcd+5,w
  4766     0D7D  00D9               	movwf	___awdiv@dividend+1
  4767     0D7E  120A  118A  2762  120A  158A  	fcall	___awdiv
  4768     0D83  1283               	bcf	3,5	;RP0=0, select bank0
  4769     0D84  1303               	bcf	3,6	;RP1=0, select bank0
  4770     0D85  0856               	movf	?___awdiv,w
  4771     0D86  00E5               	movwf	??_Dec_to_Bcd+6
  4772     0D87  3003               	movlw	3
  4773     0D88                     u1315:
  4774     0D88  1003               	clrc
  4775     0D89  0DE5               	rlf	??_Dec_to_Bcd+6,f
  4776     0D8A  3EFF               	addlw	-1
  4777     0D8B  1D03               	skipz
  4778     0D8C  2D88               	goto	u1315
  4779     0D8D  1003               	clrc
  4780     0D8E  0D65               	rlf	??_Dec_to_Bcd+6,w
  4781     0D8F  0461               	iorwf	??_Dec_to_Bcd+2,w
  4782     0D90                     l136:
  4783     0D90  0008               	return
  4784     0D91                     __end_of_Dec_to_Bcd:
  4785                           
  4786                           	psect	text22
  4787     0F43                     __ptext22:	
  4788 ;; *************** function ___awmod *****************
  4789 ;; Defined at:
  4790 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  divisor         2    4[COMMON] int 
  4793 ;;  dividend        2    6[COMMON] int 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  sign            1    1[BANK0 ] unsigned char 
  4796 ;;  counter         1    0[BANK0 ] unsigned char 
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  2    4[COMMON] int 
  4799 ;; Registers used:
  4800 ;;		wreg, status,2, status,0
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4806 ;;      Params:         4       0       0       0       0
  4807 ;;      Locals:         0       2       0       0       0
  4808 ;;      Temps:          1       0       0       0       0
  4809 ;;      Totals:         5       2       0       0       0
  4810 ;;Total ram usage:        7 bytes
  4811 ;; Hardware stack levels used: 1
  4812 ;; Hardware stack levels required when called: 1
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_Division
  4817 ;;		_Division3
  4818 ;;		_Dec_to_Bcd
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822     0F43                     ___awmod:	
  4823                           ;psect for function ___awmod
  4824                           
  4825     0F43                     l1836:	
  4826                           ;incstack = 0
  4827                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4828                           
  4829     0F43  1283               	bcf	3,5	;RP0=0, select bank0
  4830     0F44  1303               	bcf	3,6	;RP1=0, select bank0
  4831     0F45  01D5               	clrf	___awmod@sign
  4832     0F46                     l1838:
  4833     0F46  1FF7               	btfss	___awmod@dividend+1,7
  4834     0F47  2F49               	goto	u751
  4835     0F48  2F4A               	goto	u750
  4836     0F49                     u751:
  4837     0F49  2F51               	goto	l1844
  4838     0F4A                     u750:
  4839     0F4A                     l1840:
  4840     0F4A  09F6               	comf	___awmod@dividend,f
  4841     0F4B  09F7               	comf	___awmod@dividend+1,f
  4842     0F4C  0AF6               	incf	___awmod@dividend,f
  4843     0F4D  1903               	skipnz
  4844     0F4E  0AF7               	incf	___awmod@dividend+1,f
  4845     0F4F                     l1842:
  4846     0F4F  01D5               	clrf	___awmod@sign
  4847     0F50  0AD5               	incf	___awmod@sign,f
  4848     0F51                     l1844:
  4849     0F51  1FF5               	btfss	___awmod@divisor+1,7
  4850     0F52  2F54               	goto	u761
  4851     0F53  2F55               	goto	u760
  4852     0F54                     u761:
  4853     0F54  2F5A               	goto	l1848
  4854     0F55                     u760:
  4855     0F55                     l1846:
  4856     0F55  09F4               	comf	___awmod@divisor,f
  4857     0F56  09F5               	comf	___awmod@divisor+1,f
  4858     0F57  0AF4               	incf	___awmod@divisor,f
  4859     0F58  1903               	skipnz
  4860     0F59  0AF5               	incf	___awmod@divisor+1,f
  4861     0F5A                     l1848:
  4862     0F5A  0874               	movf	___awmod@divisor,w
  4863     0F5B  0475               	iorwf	___awmod@divisor+1,w
  4864     0F5C  1903               	btfsc	3,2
  4865     0F5D  2F5F               	goto	u771
  4866     0F5E  2F60               	goto	u770
  4867     0F5F                     u771:
  4868     0F5F  2F8F               	goto	l1866
  4869     0F60                     u770:
  4870     0F60                     l1850:
  4871     0F60  01D4               	clrf	___awmod@counter
  4872     0F61  0AD4               	incf	___awmod@counter,f
  4873     0F62  2F6E               	goto	l1856
  4874     0F63                     l1852:
  4875     0F63  3001               	movlw	1
  4876     0F64                     u785:
  4877     0F64  1003               	clrc
  4878     0F65  0DF4               	rlf	___awmod@divisor,f
  4879     0F66  0DF5               	rlf	___awmod@divisor+1,f
  4880     0F67  3EFF               	addlw	-1
  4881     0F68  1D03               	skipz
  4882     0F69  2F64               	goto	u785
  4883     0F6A                     l1854:
  4884     0F6A  3001               	movlw	1
  4885     0F6B  00F8               	movwf	??___awmod
  4886     0F6C  0878               	movf	??___awmod,w
  4887     0F6D  07D4               	addwf	___awmod@counter,f
  4888     0F6E                     l1856:
  4889     0F6E  1FF5               	btfss	___awmod@divisor+1,7
  4890     0F6F  2F71               	goto	u791
  4891     0F70  2F72               	goto	u790
  4892     0F71                     u791:
  4893     0F71  2F63               	goto	l1852
  4894     0F72                     u790:
  4895     0F72                     l1858:
  4896     0F72  0875               	movf	___awmod@divisor+1,w
  4897     0F73  0277               	subwf	___awmod@dividend+1,w
  4898     0F74  1D03               	skipz
  4899     0F75  2F78               	goto	u805
  4900     0F76  0874               	movf	___awmod@divisor,w
  4901     0F77  0276               	subwf	___awmod@dividend,w
  4902     0F78                     u805:
  4903     0F78  1C03               	skipc
  4904     0F79  2F7B               	goto	u801
  4905     0F7A  2F7C               	goto	u800
  4906     0F7B                     u801:
  4907     0F7B  2F82               	goto	l1862
  4908     0F7C                     u800:
  4909     0F7C                     l1860:
  4910     0F7C  0874               	movf	___awmod@divisor,w
  4911     0F7D  02F6               	subwf	___awmod@dividend,f
  4912     0F7E  0875               	movf	___awmod@divisor+1,w
  4913     0F7F  1C03               	skipc
  4914     0F80  03F7               	decf	___awmod@dividend+1,f
  4915     0F81  02F7               	subwf	___awmod@dividend+1,f
  4916     0F82                     l1862:
  4917     0F82  3001               	movlw	1
  4918     0F83                     u815:
  4919     0F83  1003               	clrc
  4920     0F84  0CF5               	rrf	___awmod@divisor+1,f
  4921     0F85  0CF4               	rrf	___awmod@divisor,f
  4922     0F86  3EFF               	addlw	-1
  4923     0F87  1D03               	skipz
  4924     0F88  2F83               	goto	u815
  4925     0F89                     l1864:
  4926     0F89  3001               	movlw	1
  4927     0F8A  02D4               	subwf	___awmod@counter,f
  4928     0F8B  1D03               	btfss	3,2
  4929     0F8C  2F8E               	goto	u821
  4930     0F8D  2F8F               	goto	u820
  4931     0F8E                     u821:
  4932     0F8E  2F72               	goto	l1858
  4933     0F8F                     u820:
  4934     0F8F                     l1866:
  4935     0F8F  0855               	movf	___awmod@sign,w
  4936     0F90  1903               	btfsc	3,2
  4937     0F91  2F93               	goto	u831
  4938     0F92  2F94               	goto	u830
  4939     0F93                     u831:
  4940     0F93  2F99               	goto	l1870
  4941     0F94                     u830:
  4942     0F94                     l1868:
  4943     0F94  09F6               	comf	___awmod@dividend,f
  4944     0F95  09F7               	comf	___awmod@dividend+1,f
  4945     0F96  0AF6               	incf	___awmod@dividend,f
  4946     0F97  1903               	skipnz
  4947     0F98  0AF7               	incf	___awmod@dividend+1,f
  4948     0F99                     l1870:
  4949     0F99  0877               	movf	___awmod@dividend+1,w
  4950     0F9A  00F5               	movwf	?___awmod+1
  4951     0F9B  0876               	movf	___awmod@dividend,w
  4952     0F9C  00F4               	movwf	?___awmod
  4953     0F9D                     l538:
  4954     0F9D  0008               	return
  4955     0F9E                     __end_of___awmod:
  4956                           
  4957                           	psect	text23
  4958     0762                     __ptext23:	
  4959 ;; *************** function ___awdiv *****************
  4960 ;; Defined at:
  4961 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  divisor         2    2[BANK0 ] int 
  4964 ;;  dividend        2    4[BANK0 ] int 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  quotient        2    9[BANK0 ] int 
  4967 ;;  sign            1    8[BANK0 ] unsigned char 
  4968 ;;  counter         1    7[BANK0 ] unsigned char 
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  2    2[BANK0 ] int 
  4971 ;; Registers used:
  4972 ;;		wreg, status,2, status,0
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4978 ;;      Params:         0       4       0       0       0
  4979 ;;      Locals:         0       4       0       0       0
  4980 ;;      Temps:          0       1       0       0       0
  4981 ;;      Totals:         0       9       0       0       0
  4982 ;;Total ram usage:        9 bytes
  4983 ;; Hardware stack levels used: 1
  4984 ;; Hardware stack levels required when called: 1
  4985 ;; This function calls:
  4986 ;;		Nothing
  4987 ;; This function is called by:
  4988 ;;		_Division
  4989 ;;		_Division3
  4990 ;;		_Dec_to_Bcd
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994     0762                     ___awdiv:	
  4995                           ;psect for function ___awdiv
  4996                           
  4997     0762                     l2476:	
  4998                           ;incstack = 0
  4999                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5000                           
  5001     0762  1283               	bcf	3,5	;RP0=0, select bank0
  5002     0763  1303               	bcf	3,6	;RP1=0, select bank0
  5003     0764  01DC               	clrf	___awdiv@sign
  5004     0765                     l2478:
  5005     0765  1FD7               	btfss	___awdiv@divisor+1,7
  5006     0766  2F68               	goto	u1151
  5007     0767  2F69               	goto	u1150
  5008     0768                     u1151:
  5009     0768  2F70               	goto	l2484
  5010     0769                     u1150:
  5011     0769                     l2480:
  5012     0769  09D6               	comf	___awdiv@divisor,f
  5013     076A  09D7               	comf	___awdiv@divisor+1,f
  5014     076B  0AD6               	incf	___awdiv@divisor,f
  5015     076C  1903               	skipnz
  5016     076D  0AD7               	incf	___awdiv@divisor+1,f
  5017     076E                     l2482:
  5018     076E  01DC               	clrf	___awdiv@sign
  5019     076F  0ADC               	incf	___awdiv@sign,f
  5020     0770                     l2484:
  5021     0770  1FD9               	btfss	___awdiv@dividend+1,7
  5022     0771  2F73               	goto	u1161
  5023     0772  2F74               	goto	u1160
  5024     0773                     u1161:
  5025     0773  2F7D               	goto	l2490
  5026     0774                     u1160:
  5027     0774                     l2486:
  5028     0774  09D8               	comf	___awdiv@dividend,f
  5029     0775  09D9               	comf	___awdiv@dividend+1,f
  5030     0776  0AD8               	incf	___awdiv@dividend,f
  5031     0777  1903               	skipnz
  5032     0778  0AD9               	incf	___awdiv@dividend+1,f
  5033     0779                     l2488:
  5034     0779  3001               	movlw	1
  5035     077A  00DA               	movwf	??___awdiv
  5036     077B  085A               	movf	??___awdiv,w
  5037     077C  06DC               	xorwf	___awdiv@sign,f
  5038     077D                     l2490:
  5039     077D  01DD               	clrf	___awdiv@quotient
  5040     077E  01DE               	clrf	___awdiv@quotient+1
  5041     077F                     l2492:
  5042     077F  0856               	movf	___awdiv@divisor,w
  5043     0780  0457               	iorwf	___awdiv@divisor+1,w
  5044     0781  1903               	btfsc	3,2
  5045     0782  2F84               	goto	u1171
  5046     0783  2F85               	goto	u1170
  5047     0784                     u1171:
  5048     0784  2FBC               	goto	l2512
  5049     0785                     u1170:
  5050     0785                     l2494:
  5051     0785  01DB               	clrf	___awdiv@counter
  5052     0786  0ADB               	incf	___awdiv@counter,f
  5053     0787  2F93               	goto	l2500
  5054     0788                     l2496:
  5055     0788  3001               	movlw	1
  5056     0789                     u1185:
  5057     0789  1003               	clrc
  5058     078A  0DD6               	rlf	___awdiv@divisor,f
  5059     078B  0DD7               	rlf	___awdiv@divisor+1,f
  5060     078C  3EFF               	addlw	-1
  5061     078D  1D03               	skipz
  5062     078E  2F89               	goto	u1185
  5063     078F                     l2498:
  5064     078F  3001               	movlw	1
  5065     0790  00DA               	movwf	??___awdiv
  5066     0791  085A               	movf	??___awdiv,w
  5067     0792  07DB               	addwf	___awdiv@counter,f
  5068     0793                     l2500:
  5069     0793  1FD7               	btfss	___awdiv@divisor+1,7
  5070     0794  2F96               	goto	u1191
  5071     0795  2F97               	goto	u1190
  5072     0796                     u1191:
  5073     0796  2F88               	goto	l2496
  5074     0797                     u1190:
  5075     0797                     l2502:
  5076     0797  3001               	movlw	1
  5077     0798                     u1205:
  5078     0798  1003               	clrc
  5079     0799  0DDD               	rlf	___awdiv@quotient,f
  5080     079A  0DDE               	rlf	___awdiv@quotient+1,f
  5081     079B  3EFF               	addlw	-1
  5082     079C  1D03               	skipz
  5083     079D  2F98               	goto	u1205
  5084     079E  0857               	movf	___awdiv@divisor+1,w
  5085     079F  0259               	subwf	___awdiv@dividend+1,w
  5086     07A0  1D03               	skipz
  5087     07A1  2FA4               	goto	u1215
  5088     07A2  0856               	movf	___awdiv@divisor,w
  5089     07A3  0258               	subwf	___awdiv@dividend,w
  5090     07A4                     u1215:
  5091     07A4  1C03               	skipc
  5092     07A5  2FA7               	goto	u1211
  5093     07A6  2FA8               	goto	u1210
  5094     07A7                     u1211:
  5095     07A7  2FAF               	goto	l2508
  5096     07A8                     u1210:
  5097     07A8                     l2504:
  5098     07A8  0856               	movf	___awdiv@divisor,w
  5099     07A9  02D8               	subwf	___awdiv@dividend,f
  5100     07AA  0857               	movf	___awdiv@divisor+1,w
  5101     07AB  1C03               	skipc
  5102     07AC  03D9               	decf	___awdiv@dividend+1,f
  5103     07AD  02D9               	subwf	___awdiv@dividend+1,f
  5104     07AE                     l2506:
  5105     07AE  145D               	bsf	___awdiv@quotient,0
  5106     07AF                     l2508:
  5107     07AF  3001               	movlw	1
  5108     07B0                     u1225:
  5109     07B0  1003               	clrc
  5110     07B1  0CD7               	rrf	___awdiv@divisor+1,f
  5111     07B2  0CD6               	rrf	___awdiv@divisor,f
  5112     07B3  3EFF               	addlw	-1
  5113     07B4  1D03               	skipz
  5114     07B5  2FB0               	goto	u1225
  5115     07B6                     l2510:
  5116     07B6  3001               	movlw	1
  5117     07B7  02DB               	subwf	___awdiv@counter,f
  5118     07B8  1D03               	btfss	3,2
  5119     07B9  2FBB               	goto	u1231
  5120     07BA  2FBC               	goto	u1230
  5121     07BB                     u1231:
  5122     07BB  2F97               	goto	l2502
  5123     07BC                     u1230:
  5124     07BC                     l2512:
  5125     07BC  085C               	movf	___awdiv@sign,w
  5126     07BD  1903               	btfsc	3,2
  5127     07BE  2FC0               	goto	u1241
  5128     07BF  2FC1               	goto	u1240
  5129     07C0                     u1241:
  5130     07C0  2FC6               	goto	l2516
  5131     07C1                     u1240:
  5132     07C1                     l2514:
  5133     07C1  09DD               	comf	___awdiv@quotient,f
  5134     07C2  09DE               	comf	___awdiv@quotient+1,f
  5135     07C3  0ADD               	incf	___awdiv@quotient,f
  5136     07C4  1903               	skipnz
  5137     07C5  0ADE               	incf	___awdiv@quotient+1,f
  5138     07C6                     l2516:
  5139     07C6  085E               	movf	___awdiv@quotient+1,w
  5140     07C7  00D7               	movwf	?___awdiv+1
  5141     07C8  085D               	movf	___awdiv@quotient,w
  5142     07C9  00D6               	movwf	?___awdiv
  5143     07CA                     l525:
  5144     07CA  0008               	return
  5145     07CB                     __end_of___awdiv:
  5146                           
  5147                           	psect	text24
  5148     0CD4                     __ptext24:	
  5149 ;; *************** function _Bcd_to_Dec *****************
  5150 ;; Defined at:
  5151 ;;		line 304 in file "main.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  bcd             1    wreg     unsigned char 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  bcd             1    3[BANK0 ] unsigned char 
  5156 ;;  dec             1    2[BANK0 ] unsigned char 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      unsigned char 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0, pclath, cstack
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5166 ;;      Params:         0       0       0       0       0
  5167 ;;      Locals:         0       2       0       0       0
  5168 ;;      Temps:          0       2       0       0       0
  5169 ;;      Totals:         0       4       0       0       0
  5170 ;;Total ram usage:        4 bytes
  5171 ;; Hardware stack levels used: 1
  5172 ;; Hardware stack levels required when called: 2
  5173 ;; This function calls:
  5174 ;;		___bmul
  5175 ;; This function is called by:
  5176 ;;		_main
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180     0CD4                     _Bcd_to_Dec:	
  5181                           ;psect for function _Bcd_to_Dec
  5182                           
  5183                           
  5184                           ;incstack = 0
  5185                           ; Regs used in _Bcd_to_Dec: [wreg+status,2+status,0+pclath+cstack]
  5186                           ;Bcd_to_Dec@bcd stored from wreg
  5187     0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  5188     0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  5189     0CD6  00D7               	movwf	Bcd_to_Dec@bcd
  5190     0CD7                     l2640:
  5191                           
  5192                           ;main.c: 305:     uint8_t dec;;main.c: 306:     dec = ((bcd>>4)*10)+(bcd & 0b00001111);
  5193     0CD7  300F               	movlw	15
  5194     0CD8  0557               	andwf	Bcd_to_Dec@bcd,w
  5195     0CD9  00D4               	movwf	??_Bcd_to_Dec
  5196     0CDA  300A               	movlw	10
  5197     0CDB  00F4               	movwf	___bmul@multiplicand
  5198     0CDC  0857               	movf	Bcd_to_Dec@bcd,w
  5199     0CDD  00D5               	movwf	??_Bcd_to_Dec+1
  5200     0CDE  3004               	movlw	4
  5201     0CDF                     u1335:
  5202     0CDF  1003               	clrc
  5203     0CE0  0CD5               	rrf	??_Bcd_to_Dec+1,f
  5204     0CE1  3EFF               	addlw	-1
  5205     0CE2  1D03               	skipz
  5206     0CE3  2CDF               	goto	u1335
  5207     0CE4  0855               	movf	??_Bcd_to_Dec+1,w
  5208     0CE5  120A  158A  24BF  120A  158A  	fcall	___bmul
  5209     0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  5210     0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  5211     0CEC  0754               	addwf	??_Bcd_to_Dec,w
  5212     0CED  00D6               	movwf	Bcd_to_Dec@dec
  5213     0CEE                     l2642:
  5214                           
  5215                           ;main.c: 307:     return dec;
  5216     0CEE  0856               	movf	Bcd_to_Dec@dec,w
  5217     0CEF                     l133:
  5218     0CEF  0008               	return
  5219     0CF0                     __end_of_Bcd_to_Dec:
  5220                           
  5221                           	psect	text25
  5222     0CBF                     __ptext25:	
  5223 ;; *************** function ___bmul *****************
  5224 ;; Defined at:
  5225 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  multiplier      1    wreg     unsigned char 
  5228 ;;  multiplicand    1    4[COMMON] unsigned char 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  multiplier      1    7[COMMON] unsigned char 
  5231 ;;  product         1    6[COMMON] unsigned char 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      unsigned char 
  5234 ;; Registers used:
  5235 ;;		wreg, status,2, status,0
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5241 ;;      Params:         1       0       0       0       0
  5242 ;;      Locals:         2       0       0       0       0
  5243 ;;      Temps:          1       0       0       0       0
  5244 ;;      Totals:         4       0       0       0       0
  5245 ;;Total ram usage:        4 bytes
  5246 ;; Hardware stack levels used: 1
  5247 ;; Hardware stack levels required when called: 1
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_Bcd_to_Dec
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255     0CBF                     ___bmul:	
  5256                           ;psect for function ___bmul
  5257                           
  5258                           
  5259                           ;incstack = 0
  5260                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5261                           ;___bmul@multiplier stored from wreg
  5262     0CBF  00F7               	movwf	___bmul@multiplier
  5263     0CC0                     l1778:
  5264     0CC0  01F6               	clrf	___bmul@product
  5265     0CC1                     l1780:
  5266     0CC1  1C77               	btfss	___bmul@multiplier,0
  5267     0CC2  2CC4               	goto	u631
  5268     0CC3  2CC5               	goto	u630
  5269     0CC4                     u631:
  5270     0CC4  2CC9               	goto	l1784
  5271     0CC5                     u630:
  5272     0CC5                     l1782:
  5273     0CC5  0874               	movf	___bmul@multiplicand,w
  5274     0CC6  00F5               	movwf	??___bmul
  5275     0CC7  0875               	movf	??___bmul,w
  5276     0CC8  07F6               	addwf	___bmul@product,f
  5277     0CC9                     l1784:
  5278     0CC9  1003               	clrc
  5279     0CCA  0DF4               	rlf	___bmul@multiplicand,f
  5280     0CCB                     l1786:
  5281     0CCB  1003               	clrc
  5282     0CCC  0CF7               	rrf	___bmul@multiplier,f
  5283     0CCD  0877               	movf	___bmul@multiplier,w
  5284     0CCE  1D03               	btfss	3,2
  5285     0CCF  2CD1               	goto	u641
  5286     0CD0  2CD2               	goto	u640
  5287     0CD1                     u641:
  5288     0CD1  2CC1               	goto	l1780
  5289     0CD2                     u640:
  5290     0CD2                     l1788:
  5291     0CD2  0876               	movf	___bmul@product,w
  5292     0CD3                     l398:
  5293     0CD3  0008               	return
  5294     0CD4                     __end_of___bmul:
  5295                           
  5296                           	psect	text26
  5297     0C7F                     __ptext26:	
  5298 ;; *************** function _ADC_IF *****************
  5299 ;; Defined at:
  5300 ;;		line 35 in file "C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/Digital 2/ARC
      +HIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;		None
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      void 
  5307 ;; Registers used:
  5308 ;;		wreg
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5314 ;;      Params:         0       0       0       0       0
  5315 ;;      Locals:         0       0       0       0       0
  5316 ;;      Temps:          1       0       0       0       0
  5317 ;;      Totals:         1       0       0       0       0
  5318 ;;Total ram usage:        1 bytes
  5319 ;; Hardware stack levels used: 1
  5320 ;; Hardware stack levels required when called: 1
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_main
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328     0C7F                     _ADC_IF:	
  5329                           ;psect for function _ADC_IF
  5330                           
  5331     0C7F                     l1998:	
  5332                           ;incstack = 0
  5333                           ; Regs used in _ADC_IF: [wreg]
  5334                           
  5335                           
  5336                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 36:     if (ADCON0bits.GO == 0)
      +                          {
  5337     0C7F  1283               	bcf	3,5	;RP0=0, select bank0
  5338     0C80  1303               	bcf	3,6	;RP1=0, select bank0
  5339     0C81  189F               	btfsc	31,1	;volatile
  5340     0C82  2C84               	goto	u981
  5341     0C83  2C85               	goto	u980
  5342     0C84                     u981:
  5343     0C84  2C8C               	goto	l258
  5344     0C85                     u980:
  5345     0C85                     l2000:
  5346                           
  5347                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 38:             _delay((unsigne
      +                          d long)((50)*(8000000/4000000.0)));
  5348     0C85  3021               	movlw	33
  5349     0C86  00F4               	movwf	??_ADC_IF
  5350     0C87                     u1597:
  5351     0C87  0BF4               	decfsz	??_ADC_IF,f
  5352     0C88  2C87               	goto	u1597
  5353     0C89                     l2002:
  5354                           
  5355                           ;C:/Users/Alejandro Gonzalez/OneDrive - Universidad del Valle de Guatemala/Entregables/D
      +                          igital 2/ARCHIVOS_LAB4/POST_LAB/I2C_RTC_READ_DATA/ADC.c: 39:             ADCON0bits.GO =
      +                           1;
  5356     0C89  1283               	bcf	3,5	;RP0=0, select bank0
  5357     0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  5358     0C8B  149F               	bsf	31,1	;volatile
  5359     0C8C                     l258:
  5360     0C8C  0008               	return
  5361     0C8D                     __end_of_ADC_IF:
  5362                           
  5363                           	psect	text27
  5364     0CF0                     __ptext27:	
  5365 ;; *************** function _isr *****************
  5366 ;; Defined at:
  5367 ;;		line 62 in file "main.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;		None
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      void 
  5374 ;; Registers used:
  5375 ;;		wreg, status,2, status,0
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5381 ;;      Params:         0       0       0       0       0
  5382 ;;      Locals:         0       0       0       0       0
  5383 ;;      Temps:          4       0       0       0       0
  5384 ;;      Totals:         4       0       0       0       0
  5385 ;;Total ram usage:        4 bytes
  5386 ;; Hardware stack levels used: 1
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		Interrupt level 1
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394     0CF0                     _isr:	
  5395                           ;psect for function _isr
  5396                           
  5397     0CF0                     i1l2094:
  5398                           
  5399                           ;main.c: 63:     if (PIR1bits.ADIF){
  5400     0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  5401     0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  5402     0CF2  1F0C               	btfss	12,6	;volatile
  5403     0CF3  2CF5               	goto	u108_21
  5404     0CF4  2CF6               	goto	u108_20
  5405     0CF5                     u108_21:
  5406     0CF5  2D07               	goto	i1l119
  5407     0CF6                     u108_20:
  5408     0CF6                     i1l2096:
  5409                           
  5410                           ;main.c: 64:         if (ADCON0bits.CHS == 5){
  5411     0CF6  0C1F               	rrf	31,w	;volatile
  5412     0CF7  00F0               	movwf	??_isr
  5413     0CF8  0C70               	rrf	??_isr,w
  5414     0CF9  390F               	andlw	15
  5415     0CFA  3A05               	xorlw	5
  5416     0CFB  1D03               	skipz
  5417     0CFC  2CFE               	goto	u109_21
  5418     0CFD  2CFF               	goto	u109_20
  5419     0CFE                     u109_21:
  5420     0CFE  2D06               	goto	i1l2100
  5421     0CFF                     u109_20:
  5422     0CFF                     i1l2098:
  5423                           
  5424                           ;main.c: 65:             adc_val = ADRESH;
  5425     0CFF  081E               	movf	30,w	;volatile
  5426     0D00  00F0               	movwf	??_isr
  5427     0D01  01F1               	clrf	??_isr+1
  5428     0D02  0870               	movf	??_isr,w
  5429     0D03  00A0               	movwf	_adc_val
  5430     0D04  0871               	movf	??_isr+1,w
  5431     0D05  00A1               	movwf	_adc_val+1
  5432     0D06                     i1l2100:
  5433                           
  5434                           ;main.c: 67:         PIR1bits.ADIF = 0;
  5435     0D06  130C               	bcf	12,6	;volatile
  5436     0D07                     i1l119:
  5437     0D07  0873               	movf	??_isr+3,w
  5438     0D08  008A               	movwf	10
  5439     0D09  0E72               	swapf	??_isr+2,w
  5440     0D0A  0083               	movwf	3
  5441     0D0B  0EFE               	swapf	btemp,f
  5442     0D0C  0E7E               	swapf	btemp,w
  5443     0D0D  0009               	retfie
  5444     0D0E                     __end_of_isr:
  5445     007E                     btemp	set	126	;btemp
  5446     007E                     wtemp0	set	126
  5447                           
  5448                           	psect	intentry
  5449     0004                     __pintentry:	
  5450                           ;incstack = 0
  5451                           ; Regs used in _isr: [wreg+status,2+status,0]
  5452                           
  5453     0004                     interrupt_function:
  5454     007E                     saved_w	set	btemp
  5455     0004  00FE               	movwf	btemp
  5456     0005  0E03               	swapf	3,w
  5457     0006  00F2               	movwf	??_isr+2
  5458     0007  080A               	movf	10,w
  5459     0008  00F3               	movwf	??_isr+3
  5460     0009  120A  158A  2CF0   	ljmp	_isr
  5461                           
  5462                           	psect	idloc
  5463                           
  5464                           ;Config register IDLOC0 @ 0x2000
  5465                           ;	unspecified, using default values
  5466     2000                     	org	8192
  5467     2000  3FFF               	dw	16383
  5468                           
  5469                           ;Config register IDLOC1 @ 0x2001
  5470                           ;	unspecified, using default values
  5471     2001                     	org	8193
  5472     2001  3FFF               	dw	16383
  5473                           
  5474                           ;Config register IDLOC2 @ 0x2002
  5475                           ;	unspecified, using default values
  5476     2002                     	org	8194
  5477     2002  3FFF               	dw	16383
  5478                           
  5479                           ;Config register IDLOC3 @ 0x2003
  5480                           ;	unspecified, using default values
  5481     2003                     	org	8195
  5482     2003  3FFF               	dw	16383
  5483                           
  5484                           	psect	config
  5485                           
  5486                           ;Config register CONFIG1 @ 0x2007
  5487                           ;	Oscillator Selection bits
  5488                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  5489                           ;	Watchdog Timer Enable bit
  5490                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5491                           ;	Power-up Timer Enable bit
  5492                           ;	PWRTE = OFF, PWRT disabled
  5493                           ;	RE3/MCLR pin function select bit
  5494                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5495                           ;	Code Protection bit
  5496                           ;	CP = OFF, Program memory code protection is disabled
  5497                           ;	Data Code Protection bit
  5498                           ;	CPD = OFF, Data memory code protection is disabled
  5499                           ;	Brown Out Reset Selection bits
  5500                           ;	BOREN = OFF, BOR disabled
  5501                           ;	Internal External Switchover bit
  5502                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5503                           ;	Fail-Safe Clock Monitor Enabled bit
  5504                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5505                           ;	Low Voltage Programming Enable bit
  5506                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5507                           ;	In-Circuit Debugger Mode bit
  5508                           ;	DEBUG = 0x1, unprogrammed default
  5509     2007                     	org	8199
  5510     2007  20D5               	dw	8405
  5511                           
  5512                           ;Config register CONFIG2 @ 0x2008
  5513                           ;	Brown-out Reset Selection bit
  5514                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5515                           ;	Flash Program Memory Self Write Enable bits
  5516                           ;	WRT = OFF, Write protection off
  5517     2008                     	org	8200
  5518     2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    10
    Data        0
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     24      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), 
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> buffer_ADC(BANK0[5]), buffer_YEAR(BANK0[5]), buffer_MOTH(BANK0[5]), buffer_DAY(BANK0[5]), 
		 -> buffer_HOR(BANK0[5]), buffer_MIN(BANK0[5]), buffer_SEG(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_Str@a	PTR unsigned char  size(2) Largest target is 10
		 -> STR_20(CODE[10]), buffer_ADC(BANK0[5]), buffer_YEAR(BANK0[5]), STR_14(CODE[2]), 
		 -> buffer_MOTH(BANK0[5]), STR_11(CODE[2]), buffer_DAY(BANK0[5]), buffer_HOR(BANK0[5]), 
		 -> STR_6(CODE[2]), buffer_MIN(BANK0[5]), STR_3(CODE[2]), buffer_SEG(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_Lcd_Init
    _setup->_Lcd_Set
    _Lcd_Write_Str->_Lcd_Write
    _Lcd_Set->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Division3->___awmod
    _Division->___awmod
    _Dec_to_Bcd->___awmod
    ___awdiv->___awmod
    _Bcd_to_Dec->___bmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Write_Str
    _I2C_Master_Write->_Dec_to_Bcd
    _Division3->___awdiv
    _Division->___awdiv
    _Dec_to_Bcd->___awdiv
    ___awdiv->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22576
                                             22 BANK0      2     2      0
                             _ADC_IF
                         _Bcd_to_Dec
                         _Dec_to_Bcd
                           _Division
                          _Division3
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _Lcd_Set
                      _Lcd_Write_Str
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    3312
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3201
                           _ADC_CONF
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                            _Lcd_Set
                      _Lcd_Write_Str
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Str                                        7     5      2    1961
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                          _Lcd_Write
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write                                            2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set                                              2     1      1    1022
                                              7 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      22
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      4     0      4      76
                                              4 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _ADC_CONF                                             2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    4351
                                             19 BANK0      2     0      2
                         _Dec_to_Bcd (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     605
                                              4 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Division3                                            5     5      0    2652
                                             11 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _Division                                             5     5      0    2621
                                             11 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _Dec_to_Bcd                                           8     8      0    2587
                                             11 BANK0      8     8      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1360
                                              4 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Bcd_to_Dec                                           4     4      0     264
                                              0 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              4 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADC_IF                                               1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_IF
   _Bcd_to_Dec
     ___bmul
   _Dec_to_Bcd
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _Division
     ___awdiv
     ___awmod
   _Division3
     ___awdiv
     ___awmod
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _Dec_to_Bcd (ARG)
     _I2C_Master_Wait (ARG)
   _Lcd_Set
     _Lcd_Cmd
   _Lcd_Write_Str
     _Lcd_Write
   _setup
     _ADC_CONF
     _I2C_Master_Init
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd
     _Lcd_Set
     _Lcd_Write_Str
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      56       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      56      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 08 11:19:24 2023

                               pc 0002                    ___bmul@product 0076                        _Bcd_to_Dec 0CD4  
                    ___awdiv@sign 005C                                fsr 0004                               l101 0EF0  
                             l112 0FFF                               l130 0F42                               l133 0CEF  
                             l213 0CBE                               l222 0D2B                               l136 0D90  
                             l216 0C7E                               l225 0EA2                               l170 0C65  
                             l234 0E12                               l228 0CAA                               l173 0C71  
                             l190 07FA                               l182 0C64                               l254 0D59  
                             l167 0C9A                               l176 0C58                               l185 0C40  
                             l258 0C8C                               l179 0C4C                               l188 07F0  
                             l525 07CA                               l189 07F3                               l368 0761  
                             l538 0F9D                               l644 0E58                               l398 0CD3  
                             l654 0DCC                               _DAY 0026                               _GIE 005F  
                             _RC6 003E                               _RC7 003F                               _HOR 0028  
                             _MIN 002A                               _SEG 002C                               u630 0CC5  
                             u631 0CC4                               u640 0CD2                               u800 0F7C  
                             u560 0D14                               u641 0CD1                               u801 0F7B  
                             u561 0D13                               u570 0D23                               u571 0D22  
                             u820 0F8F                               u900 0E54                               u821 0F8E  
                             u805 0F78                               u901 0E53                               u830 0F94  
                             u750 0F4A                               u831 0F93                               u815 0F83  
                             u751 0F49                               u760 0F55                               u840 0E1D  
                             u761 0F54                               u841 0E1C                               u770 0F60  
                             u771 0F5F                               u860 0E2F                               u861 0E2E  
                             u790 0F72                               u791 0F71                               u855 0E21  
                             u880 0E40                               u785 0F64                               u881 0E3F  
                             u875 0E30                               u980 0C85                               u981 0C84  
                             u885 0E3C                               u895 0E48                               _dec 002F  
                             _cen 002E                               _mil 0079                               _isr 0CF0  
                             fsr0 0004                               _uni 0030                               indf 0000  
                    ___awmod@sign 0055                        _Dec_to_Bcd 0D5A                              l2000 0C85  
                            l2002 0C89                              l3000 0625                              l3010 065F  
                            l3002 062D                              l3012 0668                              l3004 0634  
                            l3014 0679                              l3006 0645                              l3008 064E  
                            l2500 0793                              l3060 0D4E                              l1700 0D23  
                            l2510 07B6                              l2502 0797                              l1710 0D2C  
                            l2504 07A8                              l2512 07BC                              l2600 0C55  
                            l1720 0D38                              l1712 0D2F                              l2520 0D91  
                            l2514 07C1                              l2506 07AE                              l2602 0C36  
                            l1722 0D3C                              l1730 0D49                              l1714 0D33  
                            l2530 0DAB                              l2522 0D99                              l3058 06AF  
                            l2516 07C6                              l2508 07AF                              l2620 0C46  
                            l2612 0C59                              l2604 0C3B                              l1724 0D3F  
                            l1716 0D36                              l1740 0C94                              l2460 0CA1  
                            l2532 0DB5                              l2524 0D9C                              l2700 075D  
                            l2542 0EA6                              l2630 07E1                              l2622 0C49  
                            l2614 0C5E                              l2606 0C3F                              l1726 0D44  
                            l1718 0D37                              l1742 0C96                              l1750 0E5C  
                            l2462 0CA7                              l2470 0DF6                              l2550 0EF6  
                            l2534 0DBB                              l2526 0DA3                              l2710 0022  
                            l2640 0CD7                              l2480 0769                              l1840 0F4A  
                            l2608 0D5D                              l2544 0FA1                              l2472 0C65  
                            l2632 07E6                              l2624 07CB                              l2616 0C61  
                            l1744 0C98                              l1736 0C8D                              l1680 0CAF  
                            l1760 0E7E                              l1752 0E64                              l2456 0C9C  
                            l2464 0DCD                              l2560 0F07                              l2552 0EFF  
                            l2536 0DC2                              l2528 0DA7                              l2800 01D7  
                            l2720 0055                              l2712 0027                              l2642 0CEE  
                            l2490 077D                              l2482 076E                              l1850 0F60  
                            l1842 0F4F                              l2474 0C6B                              l2634 07EC  
                            l2626 07D0                              l2618 0C41                              l1746 0C99  
                            l1738 0C91                              l1682 0CB1                              l1770 0E9C  
                            l1762 0E84                              l1754 0E6A                              l2458 0C9F  
                            l2466 0DD2                              l2570 0F0C                              l2562 0F08  
                            l2554 0F02                              l2546 0EF1                              l2538 0DC8  
                            l2650 0692                              l2810 0202                              l2802 01E2  
                            l2730 0087                              l2722 005A                              l2714 0032  
                            l1780 0CC1                              l2492 077F                              l2484 0770  
                            l2476 0762                              l1860 0F7C                              l1852 0F63  
                            l1844 0F51                              l1836 0F43                              l2636 07F4  
                            l2628 07D8                              l1684 0CBB                              l1772 0C72  
                            l1764 0E8A                              l1756 0E73                              l1748 0E59  
                            l2468 0DEE                              l2580 0F23                              l2572 0F0F  
                            l2564 0F09                              l2556 0F03                              l2548 0EF5  
                            l2660 06BA                              l2652 0697                              l2900 03B1  
                            l2820 0238                              l2812 020D                              l2804 01ED  
                            l2740 00BA                              l2732 008C                              l2724 0065  
                            l2716 003D                              l2708 001D                              l1782 0CC5  
                            l2494 0785                              l2486 0774                              l2478 0765  
                            l1870 0F99                              l1862 0F82                              l1854 0F6A  
                            l1846 0F55                              l1838 0F46                              l1678 0CAC  
                            l1766 0E90                              l1758 0E79                              l1694 0D0F  
                            l2590 0F3D                              l2582 0F28                              l2574 0F10  
                            l2566 0F0A                              l2558 0F06                              l2670 06D3  
                            l2662 06C2                              l2654 069C                              l2646 0689  
                            l2910 03D6                              l2902 03B6                              l2830 0263  
                            l2822 0243                              l2814 0212                              l2806 01F2  
                            l2750 00ED                              l2742 00BF                              l2734 0097  
                            l2726 006F                              l2718 0050                              l1784 0CC9  
                            l2496 0788                              l2488 0779                              l1864 0F89  
                            l1856 0F6E                              l1848 0F5A                              l1768 0E96  
                            l1696 0D14                              l2592 0F40                              l2584 0F30  
                            l2576 0F11                              l2568 0F0B                              l1880 0E20  
                            l2680 06F1                              l2664 06C6                              l2648 068C  
                            l2920 040F                              l2912 03E1                              l2904 03BB  
                            l2840 028E                              l2832 0268                              l2824 0248  
                            l2816 021D                              l2808 01F7                              l2760 0120  
                            l2752 00F2                              l2744 00CA                              l2736 00A2  
                            l2728 0082                              l1786 0CCB                              l1778 0CC0  
                            l2498 078F                              l1858 0F72                              l1866 0F8F  
                            l1698 0D1D                              l2594 0F41                              l2586 0F39  
                            l2578 0F1E                              l1890 0E46                              l1882 0E27  
                            l1874 0E13                              l2690 070D                              l2682 06FB  
                            l2666 06CA                              l2658 069D                              l2930 044B  
                            l2922 0417                              l2914 03F7                              l2906 03C6  
                            l2850 02C4                              l2842 02A4                              l2834 0273  
                            l2826 0253                              l2818 0233                              l2770 0153  
                            l2762 0125                              l2754 00FD                              l2746 00D5  
                            l2738 00B5                              l1788 0CD2                              l1868 0F94  
                            l2596 0C4D                              l2588 0F3A                              l1892 0E47  
                            l1884 0E2B                              l1876 0E17                              l2692 073B  
                            l2684 0701                              l2676 06D5                              l2668 06CE  
                            l2940 04B6                              l2932 0456                              l2924 0428  
                            l2916 03FC                              l2908 03D1                              l2860 02EF  
                            l2852 02CF                              l2844 02A9                              l2836 027E  
                            l2828 025E                              l2780 017D                              l2772 015E  
                            l2764 0130                              l2756 0108                              l2748 00E8  
                            l2598 0C52                              l1894 0E4E                              l1886 0E2F  
                            l1878 0E1D                              l2694 0740                              l2686 0706  
                            l2950 04E8                              l2942 04BE                              l2934 0467  
                            l2926 0431                              l2918 0407                              l2870 0325  
                            l2862 02F4                              l2854 02D4                              l2846 02B4  
                            l2838 0283                              l2790 01A1                              l2782 0182  
                            l2774 0163                              l2766 013B                              l2758 011B  
                            l1888 0E40                              l1896 0E54                              l2696 0744  
                            l2688 070A                              l2960 0537                              l2952 04F1  
                            l2944 04C7                              l2936 046F                              l2928 0442  
                            l2880 034A                              l2872 032A                              l2864 02FF  
                            l2856 02D9                              l2848 02B9                              l2792 01AC  
                            l2784 0187                              l2776 0168                              l2768 014E  
                            l2698 074D                              l2970 056D                              l2962 0540  
                            l2954 0502                              l2946 04CF                              l2938 04AB  
                            l2890 0386                              l2882 0355                              l2874 0335  
                            l2866 0315                              l2858 02E4                              l2794 01C2  
                            l2786 0192                              l2778 0173                              l2980 05A0  
                            l2972 0576                              l2964 0551                              l2956 050B  
                            l2948 04D7                              l2892 038B                              l2884 0360  
                            l2876 0340                              l2868 031A                              l2796 01C7  
                            l2788 019C                              l1998 0C7F                              l2990 05E6  
                            l2982 05B1                              l2974 057E                              l2966 055A  
                            l2958 0526                              l2894 0396                              l2886 0365  
                            l2878 0345                              l2798 01D2                              l2992 05F7  
                            l2984 05BA                              l2976 0586                              l2968 0565  
                            l2896 039B                              l2888 0370                              l2994 0600  
                            l2986 05C5                              l2978 0597                              l2898 03A6  
                            l2996 0611                              l2988 05CD                              l2998 061A  
                            ?_isr 0070                              STR_1 0824                              STR_2 0824  
                            STR_3 0829                              STR_4 0824                              STR_5 0824  
                            STR_6 0829                              STR_7 0824                              STR_8 0824  
                            STR_9 0824                              u1100 0DDC                              u1110 0E00  
                            u1120 0E12                              u1121 0E11                              u1210 07A8  
                            u1130 0C6B                              u1211 07A7                              u1131 0C6A  
                            u1140 0C71                              u1300 0DC8                              u1205 0798  
                            u1141 0C70                              u1301 0DC7                              u1230 07BC  
                            u1150 0769                              u1231 07BB                              u1215 07A4  
                            u1151 0768                              u1240 07C1                              u1160 0774  
                            u1320 07EC                              u1400 075D                              u1241 07C0  
                            u1225 07B0                              u1161 0773                              u1321 07EB  
                            u1401 075C                              u1170 0785                              u1250 0D99  
                            u1171 0784                              u1315 0D88                              u1251 0D98  
                            u1340 0692                              u1341 0691                              u1190 0797  
                            u1270 0DAB                              u1350 06CA                              u1335 0CDF  
                            u1191 0796                              u1271 0DAA                              u1351 06C9  
                            u1280 0DB5                              u1360 06F0                              u1185 0789  
                            u1281 0DB4                              u1265 0D9D                              u1361 06EF  
                            u1417 0159                              u1370 06FB                              u1371 06FA  
                            u1507 0511                              u1427 01CD                              u1380 0701  
                            u1285 0DB1                              u1381 0700                              u1365 06EC  
                            u1517 0560                              u1437 023E                              u1390 074D  
                            u1295 0DBC                              u1391 074C                              u1527 05C0  
                            u1447 02AF                              u1537 0620                              u1457 0320  
                            u1547 0CA4                              u1467 0391                              u1557 0E60  
                            u1477 0402                              u1567 0E6E                              u1487 0451  
                            u1577 0E7B                              u1497 04B1                              u1587 0CB6  
                            u1597 0C87                              _PEIE 005E                              _MOTH 0024  
                            _YEAR 0022                  __end_of_ADC_CONF 0D5A  __end_of_I2C_Master_RepeatedStart 0C4D  
                            _main 001D                              btemp 007E                              start 000C  
                 __end_of_Lcd_Cmd 0CBF                   __end_of_Lcd_Set 0D2C                 ___bmul@multiplier 0077  
                           ??_isr 0070                  ?_I2C_Master_Init 0074                  ?_I2C_Master_Read 0074  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
                 __end_of___awdiv 07CB                             STR_10 0824                             STR_11 0827  
                           STR_12 0824                             STR_20 081A                             STR_13 0824  
                           STR_14 0827                             STR_15 0824                             STR_16 0824  
                           STR_17 0824                             STR_18 0824                             STR_19 0824  
                 __end_of___awmod 0F9E                             _ANSEL 0188                   ___awdiv@divisor 0056  
                 __end_of___lwdiv 0E59                             i1l119 0D07                   __end_of___lwmod 0DCD  
                 ___awdiv@counter 005B                             _PORTD 0008                             _TRISB 0086  
                           _TRISD 0088                             _SSPIE 0463                             _SSPIF 0063  
                 __end_of_dpowers 081A                             _setup 0EF1                             pclath 000A  
                           status 0003                             wtemp0 007E                   __end_of_sprintf 0762  
                __end_of_Lcd_Init 0EA3                   __initialization 000F                  __end_of_Division 0EF1  
                    __end_of_main 0686                       ?_Bcd_to_Dec 0070                            ??_main 006A  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0067                       ?_Dec_to_Bcd 0070  
              ??_I2C_Master_Start 0074                ??_I2C_Master_Write 0079                            _ADC_IF 0C7F  
                          _ADRESH 001E                  ___awdiv@dividend 0058                            ?_setup 0070  
                          _ANSELH 0189                            i1l2100 0D06                            i1l2094 0CF0  
                          i1l2096 0CF6                            i1l2098 0CFF                            u108_20 0CF6  
                          u108_21 0CF5                            u109_20 0CFF                            u109_21 0CFE  
                       ??_Lcd_Cmd 0074                         ??_Lcd_Set 0078                            _SSPADD 0093  
                          _TRISC2 043A                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 0C41  
                          ___bmul 0CBF                         ??___awdiv 005A                         ??___awmod 0078  
                       ??___lwdiv 0078                         ??___lwmod 005B                  ___awdiv@quotient 005D  
                 ___awmod@divisor 0074                   ___awmod@counter 0054             __end_of_Lcd_Write_Str 0E13  
                       ?_ADC_CONF 0074                            saved_w 007E                         ??_sprintf 0060  
         __end_of__initialization 0019                      ADC_CONF@frec 0074                 __end_of_Lcd_Clear 0C7F  
             ___bmul@multiplicand 0074                 __end_of_Lcd_Write 0CAB                    __pcstackCOMMON 0070  
               __end_of_Division3 1000                     __end_of_setup 0F43                        ??_ADC_CONF 0076  
                       ?_Lcd_Init 0070                           ?_ADC_IF 0070                           ??_setup 0079  
                       ?_Division 0070                        __pbssBANK0 0020                    Lcd_Write_Str@a 0076  
                  Lcd_Write_Str@i 0057                        __pmaintext 001D                           ?___bmul 0074  
                      __pintentry 0004                        _buffer_ADC 004A                        _buffer_DAY 003B  
                      _buffer_HOR 0040                        _buffer_MIN 0045                        _buffer_SEG 004F  
                      ??_Lcd_Init 0077                           _SSPCON2 0091                           _SSPSTAT 0094  
                      ??_Division 005F                        __stringtab 0800                           _Lcd_Cmd 0CAB  
                         _Lcd_Set 0D0E                           ___awdiv 0762                           ___awmod 0F43  
                         _adc_val 0020                           ___lwdiv 0E13                           ___lwmod 0D91  
                    ??_Bcd_to_Dec 0054                           __ptext1 0686                           __ptext2 0D91  
                         __ptext3 0E13                           __ptext4 0EF1                           __ptext5 0DCD  
                         __ptext6 0C9B                           __ptext7 0D0E                           __ptext8 0E59  
                         __ptext9 0C72                           _dpowers 0810                  ___awmod@dividend 0076  
                    ??_Dec_to_Bcd 005F                           _sprintf 0686                           clrloop0 0C2F  
            end_of_initialization 0019        ??_I2C_Master_RepeatedStart 0074                __end_of_Bcd_to_Dec 0CF0  
                   Bcd_to_Dec@bcd 0057                     Bcd_to_Dec@dec 0056                  I2C_Master_Init@c 0074  
                I2C_Master_Read@a 0074                __end_of_Dec_to_Bcd 0D91                         _PORTCbits 0007  
                       Division@y 0063                         _TRISCbits 0087                    __end_of_ADC_IF 0C8D  
                       _Lcd_Clear 0C72                         _Lcd_Write 0C9B                    __end_of___bmul 0CD4  
                       _Division3 0F9E               start_initialization 000F                       __end_of_isr 0D0E  
                        ??_ADC_IF 0074                 ??_I2C_Master_Init 0078                 ??_I2C_Master_Read 0076  
               ??_I2C_Master_Wait 0074                 ??_I2C_Master_Stop 0074                        ?_Lcd_Clear 0070  
                        ??___bmul 0075                        ?_Lcd_Write 0070                        ?_Division3 0070  
                     __pbssCOMMON 0079                         ___latbits 0002                     __pcstackBANK0 0054  
                  _Division3$1199 0061                          ?_Lcd_Cmd 0070                          ?_Lcd_Set 0077  
                     sprintf@flag 0064                       sprintf@prec 0065                  _I2C_Master_Start 0C4D  
                _I2C_Master_Write 0C36                  ___lwdiv@dividend 0076                          ?___awdiv 0056  
                        ?___awmod 0074                          ?___lwdiv 0074                          ?___lwmod 0057  
                       __pstrings 0800                          _ADC_CONF 0D2C                     _Lcd_Write_Str 0DCD  
                ___lwdiv@quotient 0054                          ?_sprintf 005D                 interrupt_function 0004  
                       clear_ram0 0C2E                          _PIE1bits 008C                       _buffer_MOTH 0036  
                     _buffer_YEAR 0031                          Lcd_Cmd@a 0076                          _PIR1bits 000C  
                        Lcd_Set@a 0078                          Lcd_Set@b 0077                       ??_Lcd_Clear 0077  
                     ??_Lcd_Write 0074                       ??_Division3 005F                        _ADCON0bits 001F  
                     __stringbase 080F                        _ADCON1bits 009F                    ?_Lcd_Write_Str 0076  
                        _Lcd_Init 0E59               I2C_Master_Read@temp 0054                          _Division 0EA3  
       ?_I2C_Master_RepeatedStart 0070                     _Division$1198 0061                __end_of__stringtab 0810  
                      sprintf@val 0066                   _I2C_Master_Init 0C8D                   _I2C_Master_Read 07CB  
                 _I2C_Master_Wait 0C65                   _I2C_Master_Stop 0C59                     Dec_to_Bcd@dec 0066  
                 ___lwdiv@divisor 0074                   ___lwdiv@counter 0056                          __ptext10 0CAB  
                        __ptext11 0C8D                          __ptext20 0EA3                          __ptext12 0D2C  
                        __ptext21 0D5A                          __ptext13 0C36                          __ptext22 0F43  
                        __ptext14 0C59                          __ptext23 0762                          __ptext15 0C4D  
                        __ptext24 0CD4                          __ptext16 0C41                          __ptext25 0CBF  
                        __ptext17 07CB                          __ptext26 0C7F                          __ptext18 0C65  
                        __ptext27 0CF0                          __ptext19 0F9E                   ??_Lcd_Write_Str 0054  
        __end_of_I2C_Master_Start 0C59          __end_of_I2C_Master_Write 0C41                        _INTCONbits 000B  
                        intlevel1 0000                         sprintf@ap 0063                         sprintf@sp 0069  
                ___lwmod@dividend 0059                         stringcode 080A                        _OSCCONbits 008F  
         __end_of_I2C_Master_Init 0C9B           __end_of_I2C_Master_Read 07FB           __end_of_I2C_Master_Wait 0C72  
         __end_of_I2C_Master_Stop 0C65                        Lcd_Write@a 0075                          sprintf@c 0068  
                        sprintf@f 005D                 I2C_Master_Write@d 0067                   ___lwmod@divisor 0057  
                 ___lwmod@counter 005C                          stringdir 080A                          stringtab 0800  
                     _SSPCON2bits 0091                        Division3@y 0063  
